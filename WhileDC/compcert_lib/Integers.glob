DIGEST 69916cf25a567ce4adb9687385397df9
Fcompcert.lib.Integers
R1199:1207 Coq.Logic.Eqdep_dec <> <> lib
R1209:1213 Coq.ZArith.Zquot <> <> lib
R1215:1217 Coq.ZArith.Zwf <> <> lib
R1235:1240 compcert.lib.Coqlib <> <> lib
R1242:1246 compcert.lib.Zbits <> <> lib
ind 1282:1291 <> comparison
constr 1307:1309 <> Ceq
constr 1355:1357 <> Cne
constr 1408:1410 <> Clt
constr 1461:1463 <> Cle
constr 1523:1525 <> Cgt
constr 1579:1581 <> Cge
R1313:1322 compcert.lib.Integers <> comparison:1 ind
R1361:1370 compcert.lib.Integers <> comparison:1 ind
R1414:1423 compcert.lib.Integers <> comparison:1 ind
R1467:1476 compcert.lib.Integers <> comparison:1 ind
R1529:1538 compcert.lib.Integers <> comparison:1 ind
R1585:1594 compcert.lib.Integers <> comparison:1 ind
def 1652:1668 <> negate_comparison
R1674:1683 compcert.lib.Integers <> comparison ind
binder 1671:1671 <> c:3
R1687:1696 compcert.lib.Integers <> comparison ind
R1709:1709 compcert.lib.Integers <> c:3 var
R1720:1722 compcert.lib.Integers <> Ceq constr
R1727:1729 compcert.lib.Integers <> Cne constr
R1735:1737 compcert.lib.Integers <> Cne constr
R1742:1744 compcert.lib.Integers <> Ceq constr
R1750:1752 compcert.lib.Integers <> Clt constr
R1757:1759 compcert.lib.Integers <> Cge constr
R1765:1767 compcert.lib.Integers <> Cle constr
R1772:1774 compcert.lib.Integers <> Cgt constr
R1780:1782 compcert.lib.Integers <> Cgt constr
R1787:1789 compcert.lib.Integers <> Cle constr
R1795:1797 compcert.lib.Integers <> Cge constr
R1802:1804 compcert.lib.Integers <> Clt constr
def 1825:1839 <> swap_comparison
R1845:1854 compcert.lib.Integers <> comparison ind
binder 1842:1842 <> c:5
R1858:1867 compcert.lib.Integers <> comparison ind
R1880:1880 compcert.lib.Integers <> c:5 var
R1891:1893 compcert.lib.Integers <> Ceq constr
R1898:1900 compcert.lib.Integers <> Ceq constr
R1906:1908 compcert.lib.Integers <> Cne constr
R1913:1915 compcert.lib.Integers <> Cne constr
R1921:1923 compcert.lib.Integers <> Clt constr
R1928:1930 compcert.lib.Integers <> Cgt constr
R1936:1938 compcert.lib.Integers <> Cle constr
R1943:1945 compcert.lib.Integers <> Cge constr
R1951:1953 compcert.lib.Integers <> Cgt constr
R1958:1960 compcert.lib.Integers <> Clt constr
R1966:1968 compcert.lib.Integers <> Cge constr
R1973:1975 compcert.lib.Integers <> Cle constr
modtype 2051:2058 <> WORDSIZE
ax 2073:2080 WORDSIZE wordsize
R2083:2085 Coq.Init.Datatypes <> nat ind
ax 2096:2112 WORDSIZE wordsize_not_zero
R2123:2126 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R2115:2122 compcert.lib.Integers WORDSIZE wordsize defax
R2138:2145 compcert.lib.Integers WORDSIZE <> modtype
R2301:2308 compcert.lib.Integers WORDSIZE <> mod
mod 2292:2295 <> Make
def 2324:2331 Make wordsize
R2334:2336 Coq.Init.Datatypes <> nat ind
R2341:2351 compcert.lib.Integers WS wordsize defax
def 2365:2373 Make zwordsize
R2376:2376 Coq.Numbers.BinNums <> Z ind
R2381:2388 Coq.ZArith.BinInt Z of_nat def
R2390:2397 compcert.lib.Integers Make wordsize def
def 2411:2417 Make modulus
R2421:2421 Coq.Numbers.BinNums <> Z ind
R2426:2438 Coq.ZArith.Zpower <> two_power_nat def
R2440:2447 compcert.lib.Integers Make wordsize def
def 2461:2472 Make half_modulus
R2476:2476 Coq.Numbers.BinNums <> Z ind
R2488:2490 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R2481:2487 compcert.lib.Integers Make modulus def
def 2505:2516 Make max_unsigned
R2520:2520 Coq.Numbers.BinNums <> Z ind
R2532:2534 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2525:2531 compcert.lib.Integers Make modulus def
def 2549:2558 Make max_signed
R2562:2562 Coq.Numbers.BinNums <> Z ind
R2579:2581 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2567:2578 compcert.lib.Integers Make half_modulus def
def 2596:2605 Make min_signed
R2609:2609 Coq.Numbers.BinNums <> Z ind
R2614:2615 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R2616:2627 compcert.lib.Integers Make half_modulus def
prf 2638:2649 Make wordsize_pos
R2661:2663 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R2652:2660 compcert.lib.Integers Make zwordsize def
R2683:2691 compcert.lib.Integers Make zwordsize def
R2694:2701 compcert.lib.Integers Make wordsize def
R2715:2734 compcert.lib.Integers WS wordsize_not_zero prfax
R2715:2734 compcert.lib.Integers WS wordsize_not_zero prfax
prf 2755:2767 Make modulus_power
R2777:2779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2770:2776 compcert.lib.Integers Make modulus def
R2780:2784 Coq.ZArith.Zpower <> two_p def
R2786:2794 compcert.lib.Integers Make zwordsize def
R2813:2819 compcert.lib.Integers Make modulus def
R2828:2846 compcert.lib.Coqlib <> two_power_nat_two_p thm
R2828:2846 compcert.lib.Coqlib <> two_power_nat_two_p thm
prf 2862:2875 Make modulus_gt_one
R2885:2887 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R2878:2884 compcert.lib.Integers Make modulus def
R2908:2920 compcert.lib.Integers Make modulus_power thm
R2908:2920 compcert.lib.Integers Make modulus_power thm
R2908:2920 compcert.lib.Integers Make modulus_power thm
R2929:2935 Coq.ZArith.BinInt Z lt_gt thm
R2929:2935 Coq.ZArith.BinInt Z lt_gt thm
R2945:2965 compcert.lib.Coqlib <> two_p_monotone_strict thm
R2945:2965 compcert.lib.Coqlib <> two_p_monotone_strict thm
R2984:2995 compcert.lib.Integers Make wordsize_pos thm
R2984:2995 compcert.lib.Integers Make wordsize_pos thm
prf 3016:3026 Make modulus_pos
R3036:3038 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R3029:3035 compcert.lib.Integers Make modulus def
R3062:3075 compcert.lib.Integers Make modulus_gt_one thm
R3062:3075 compcert.lib.Integers Make modulus_gt_one thm
constr 3375:3379 Make mkint
rec 3362:3364 Make int
proj 3383:3388 Make intval
proj 3394:3401 Make intrange
R3391:3391 Coq.Numbers.BinNums <> Z ind
R3406:3408 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3415:3417 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3409:3414 compcert.lib.Integers <> intval:10 meth
R3409:3414 compcert.lib.Integers <> intval:10 meth
R3418:3424 compcert.lib.Integers Make modulus def
def 3488:3500 Make Z_mod_modulus
R3506:3506 Coq.Numbers.BinNums <> Z ind
binder 3503:3503 <> x:12
R3511:3511 Coq.Numbers.BinNums <> Z ind
R3524:3524 compcert.lib.Integers <> x:12 var
R3535:3536 Coq.Numbers.BinNums <> Z0 constr
R3547:3550 Coq.Numbers.BinNums <> Zpos constr
R3557:3567 compcert.lib.Zbits <> P_mod_two_p def
R3571:3578 compcert.lib.Integers Make wordsize def
R3584:3587 Coq.Numbers.BinNums <> Zneg constr
R3603:3613 compcert.lib.Zbits <> P_mod_two_p def
R3617:3624 compcert.lib.Integers Make wordsize def
binder 3598:3598 <> r:14
R3632:3634 compcert.lib.Coqlib <> zeq def
R3636:3636 compcert.lib.Integers <> r:14 var
R3659:3661 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R3652:3658 compcert.lib.Integers Make modulus def
R3662:3662 compcert.lib.Integers <> r:14 var
prf 3678:3696 Make Z_mod_modulus_range
binder 3708:3708 <> x:15
R3712:3715 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3731:3733 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R3716:3728 compcert.lib.Integers Make Z_mod_modulus def
R3730:3730 compcert.lib.Integers <> x:15 var
R3716:3728 compcert.lib.Integers Make Z_mod_modulus def
R3730:3730 compcert.lib.Integers <> x:15 var
R3734:3740 compcert.lib.Integers Make modulus def
R3750:3766 compcert.lib.Zbits <> Z_mod_two_p_range thm
R3768:3775 compcert.lib.Integers Make wordsize def
prf 3786:3805 Make Z_mod_modulus_range'
binder 3817:3817 <> x:16
R3822:3824 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3840:3842 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R3825:3837 compcert.lib.Integers Make Z_mod_modulus def
R3839:3839 compcert.lib.Integers <> x:16 var
R3825:3837 compcert.lib.Integers Make Z_mod_modulus def
R3839:3839 compcert.lib.Integers <> x:16 var
R3843:3849 compcert.lib.Integers Make modulus def
R3881:3899 compcert.lib.Integers Make Z_mod_modulus_range thm
R3881:3899 compcert.lib.Integers Make Z_mod_modulus_range thm
prf 3928:3943 Make Z_mod_modulus_eq
binder 3955:3955 <> x:17
R3973:3975 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3958:3970 compcert.lib.Integers Make Z_mod_modulus def
R3972:3972 compcert.lib.Integers <> x:17 var
R3977:3981 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R3976:3976 compcert.lib.Integers <> x:17 var
R3982:3988 compcert.lib.Integers Make modulus def
R3998:4011 compcert.lib.Zbits <> Z_mod_two_p_eq thm
R4013:4020 compcert.lib.Integers Make wordsize def
def 4201:4208 Make unsigned
R4214:4216 compcert.lib.Integers Make int rec
binder 4211:4211 <> n:18
R4221:4221 Coq.Numbers.BinNums <> Z ind
R4226:4231 compcert.lib.Integers Make intval proj
R4233:4233 compcert.lib.Integers <> n:18 var
def 4248:4253 Make signed
R4259:4261 compcert.lib.Integers Make int rec
binder 4256:4256 <> n:19
R4266:4266 Coq.Numbers.BinNums <> Z ind
R4282:4289 compcert.lib.Integers Make unsigned def
R4291:4291 compcert.lib.Integers <> n:19 var
binder 4277:4277 <> x:20
R4301:4303 compcert.lib.Coqlib <> zlt def
R4307:4318 compcert.lib.Integers Make half_modulus def
R4305:4305 compcert.lib.Integers <> x:20 var
R4333:4335 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R4332:4332 compcert.lib.Integers <> x:20 var
R4336:4342 compcert.lib.Integers Make modulus def
R4325:4325 compcert.lib.Integers <> x:20 var
def 4496:4499 Make repr
R4505:4505 Coq.Numbers.BinNums <> Z ind
binder 4502:4502 <> x:21
R4510:4512 compcert.lib.Integers Make int rec
R4519:4523 compcert.lib.Integers Make mkint constr
R4544:4563 compcert.lib.Integers Make Z_mod_modulus_range' thm
R4565:4565 compcert.lib.Integers <> x:21 var
R4526:4538 compcert.lib.Integers Make Z_mod_modulus def
R4540:4540 compcert.lib.Integers <> x:21 var
def 4581:4584 Make zero
R4589:4592 compcert.lib.Integers Make repr def
def 4608:4610 Make one
R4616:4619 compcert.lib.Integers Make repr def
def 4635:4638 Make mone
R4643:4646 compcert.lib.Integers Make repr def
def 4665:4673 Make iwordsize
R4678:4681 compcert.lib.Integers Make repr def
R4683:4691 compcert.lib.Integers Make zwordsize def
prf 4701:4708 Make mkint_eq
binder 4720:4720 <> x:22
binder 4722:4722 <> y:23
binder 4724:4725 <> Px:24
binder 4727:4728 <> Py:25
R4736:4739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4750:4752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4740:4744 compcert.lib.Integers Make mkint constr
R4748:4749 compcert.lib.Integers <> Px:24 var
R4746:4746 compcert.lib.Integers <> x:22 var
R4753:4757 compcert.lib.Integers Make mkint constr
R4761:4762 compcert.lib.Integers <> Py:25 var
R4759:4759 compcert.lib.Integers <> y:23 var
R4732:4734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4731:4731 compcert.lib.Integers <> x:22 var
R4735:4735 compcert.lib.Integers <> y:23 var
R4814:4814 Coq.Numbers.BinNums <> Z ind
binder 4809:4809 <> n:26
binder 4811:4811 <> m:27
R4826:4828 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4825:4825 compcert.lib.Integers <> n:26 var
R4829:4829 compcert.lib.Integers <> m:27 var
binder 4818:4819 <> P1:28
binder 4821:4822 <> P2:29
R4835:4837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4833:4834 compcert.lib.Integers <> P1:28 var
R4838:4839 compcert.lib.Integers <> P2:29 var
R4814:4814 Coq.Numbers.BinNums <> Z ind
binder 4809:4809 <> n:30
binder 4811:4811 <> m:31
R4826:4828 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R4825:4825 compcert.lib.Integers <> n:30 var
R4829:4829 compcert.lib.Integers <> m:31 var
binder 4818:4819 <> P1:32
binder 4821:4822 <> P2:33
R4835:4837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4833:4834 compcert.lib.Integers <> P1:32 var
R4838:4839 compcert.lib.Integers <> P2:33 var
R4858:4861 Coq.ZArith.BinInt Z lt def
R4882:4898 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R4882:4898 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
prf 5128:5133 Make eq_dec
R5149:5151 compcert.lib.Integers Make int rec
binder 5144:5144 <> x:34
binder 5146:5146 <> y:35
R5155:5155 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5161:5165 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5172:5172 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5157:5159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5156:5156 compcert.lib.Integers <> x:34 var
R5160:5160 compcert.lib.Integers <> y:35 var
R5167:5170 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R5166:5166 compcert.lib.Integers <> x:34 var
R5171:5171 compcert.lib.Integers <> y:35 var
R5226:5228 compcert.lib.Coqlib <> zeq def
R5226:5228 compcert.lib.Coqlib <> zeq def
R5262:5269 compcert.lib.Integers Make mkint_eq thm
R5262:5269 compcert.lib.Integers Make mkint_eq thm
def 5408:5409 Make eq
R5417:5419 compcert.lib.Integers Make int rec
binder 5412:5412 <> x:36
binder 5414:5414 <> y:37
R5424:5427 Coq.Init.Datatypes <> bool ind
R5437:5439 compcert.lib.Coqlib <> zeq def
R5455:5462 compcert.lib.Integers Make unsigned def
R5464:5464 compcert.lib.Integers <> y:37 var
R5442:5449 compcert.lib.Integers Make unsigned def
R5451:5451 compcert.lib.Integers <> x:36 var
R5482:5486 Coq.Init.Datatypes <> false constr
R5472:5475 Coq.Init.Datatypes <> true constr
def 5500:5501 Make lt
R5509:5511 compcert.lib.Integers Make int rec
binder 5504:5504 <> x:38
binder 5506:5506 <> y:39
R5516:5519 Coq.Init.Datatypes <> bool ind
R5529:5531 compcert.lib.Coqlib <> zlt def
R5545:5550 compcert.lib.Integers Make signed def
R5552:5552 compcert.lib.Integers <> y:39 var
R5534:5539 compcert.lib.Integers Make signed def
R5541:5541 compcert.lib.Integers <> x:38 var
R5570:5574 Coq.Init.Datatypes <> false constr
R5560:5563 Coq.Init.Datatypes <> true constr
def 5588:5590 Make ltu
R5598:5600 compcert.lib.Integers Make int rec
binder 5593:5593 <> x:40
binder 5595:5595 <> y:41
R5605:5608 Coq.Init.Datatypes <> bool ind
R5618:5620 compcert.lib.Coqlib <> zlt def
R5636:5643 compcert.lib.Integers Make unsigned def
R5645:5645 compcert.lib.Integers <> y:41 var
R5623:5630 compcert.lib.Integers Make unsigned def
R5632:5632 compcert.lib.Integers <> x:40 var
R5663:5667 Coq.Init.Datatypes <> false constr
R5653:5656 Coq.Init.Datatypes <> true constr
def 5682:5684 Make neg
R5690:5692 compcert.lib.Integers Make int rec
binder 5687:5687 <> x:42
R5697:5699 compcert.lib.Integers Make int rec
R5704:5707 compcert.lib.Integers Make repr def
R5710:5711 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R5712:5719 compcert.lib.Integers Make unsigned def
R5721:5721 compcert.lib.Integers <> x:42 var
def 5737:5739 Make add
R5747:5749 compcert.lib.Integers Make int rec
binder 5742:5742 <> x:43
binder 5744:5744 <> y:44
R5754:5756 compcert.lib.Integers Make int rec
R5763:5766 compcert.lib.Integers Make repr def
R5779:5781 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5769:5776 compcert.lib.Integers Make unsigned def
R5778:5778 compcert.lib.Integers <> x:43 var
R5782:5789 compcert.lib.Integers Make unsigned def
R5791:5791 compcert.lib.Integers <> y:44 var
def 5806:5808 Make sub
R5816:5818 compcert.lib.Integers Make int rec
binder 5811:5811 <> x:45
binder 5813:5813 <> y:46
R5823:5825 compcert.lib.Integers Make int rec
R5832:5835 compcert.lib.Integers Make repr def
R5848:5850 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R5838:5845 compcert.lib.Integers Make unsigned def
R5847:5847 compcert.lib.Integers <> x:45 var
R5851:5858 compcert.lib.Integers Make unsigned def
R5860:5860 compcert.lib.Integers <> y:46 var
def 5875:5877 Make mul
R5885:5887 compcert.lib.Integers Make int rec
binder 5880:5880 <> x:47
binder 5882:5882 <> y:48
R5892:5894 compcert.lib.Integers Make int rec
R5901:5904 compcert.lib.Integers Make repr def
R5917:5919 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R5907:5914 compcert.lib.Integers Make unsigned def
R5916:5916 compcert.lib.Integers <> x:47 var
R5920:5927 compcert.lib.Integers Make unsigned def
R5929:5929 compcert.lib.Integers <> y:48 var
def 5945:5948 Make divs
R5956:5958 compcert.lib.Integers Make int rec
binder 5951:5951 <> x:49
binder 5953:5953 <> y:50
R5963:5965 compcert.lib.Integers Make int rec
R5972:5975 compcert.lib.Integers Make repr def
R5978:5983 Coq.ZArith.BinInt Z quot def
R5997:6002 compcert.lib.Integers Make signed def
R6004:6004 compcert.lib.Integers <> y:50 var
R5986:5991 compcert.lib.Integers Make signed def
R5993:5993 compcert.lib.Integers <> x:49 var
def 6020:6023 Make mods
R6031:6033 compcert.lib.Integers Make int rec
binder 6026:6026 <> x:51
binder 6028:6028 <> y:52
R6038:6040 compcert.lib.Integers Make int rec
R6047:6050 compcert.lib.Integers Make repr def
R6053:6057 Coq.ZArith.BinInt Z rem def
R6071:6076 compcert.lib.Integers Make signed def
R6078:6078 compcert.lib.Integers <> y:52 var
R6060:6065 compcert.lib.Integers Make signed def
R6067:6067 compcert.lib.Integers <> x:51 var
def 6095:6098 Make divu
R6106:6108 compcert.lib.Integers Make int rec
binder 6101:6101 <> x:53
binder 6103:6103 <> y:54
R6113:6115 compcert.lib.Integers Make int rec
R6122:6125 compcert.lib.Integers Make repr def
R6138:6140 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R6128:6135 compcert.lib.Integers Make unsigned def
R6137:6137 compcert.lib.Integers <> x:53 var
R6141:6148 compcert.lib.Integers Make unsigned def
R6150:6150 compcert.lib.Integers <> y:54 var
def 6165:6168 Make modu
R6176:6178 compcert.lib.Integers Make int rec
binder 6171:6171 <> x:55
binder 6173:6173 <> y:56
R6183:6185 compcert.lib.Integers Make int rec
R6192:6195 compcert.lib.Integers Make repr def
R6198:6198 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6209:6215 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6226:6226 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6199:6206 compcert.lib.Integers Make unsigned def
R6208:6208 compcert.lib.Integers <> x:55 var
R6216:6223 compcert.lib.Integers Make unsigned def
R6225:6225 compcert.lib.Integers <> y:56 var
def 6278:6280 Make and
R6288:6290 compcert.lib.Integers Make int rec
binder 6283:6283 <> x:57
binder 6285:6285 <> y:58
R6294:6296 compcert.lib.Integers Make int rec
R6301:6304 compcert.lib.Integers Make repr def
R6307:6312 Coq.ZArith.BinInt Z land def
R6328:6335 compcert.lib.Integers Make unsigned def
R6337:6337 compcert.lib.Integers <> y:58 var
R6315:6322 compcert.lib.Integers Make unsigned def
R6324:6324 compcert.lib.Integers <> x:57 var
def 6353:6354 Make or
R6362:6364 compcert.lib.Integers Make int rec
binder 6357:6357 <> x:59
binder 6359:6359 <> y:60
R6368:6370 compcert.lib.Integers Make int rec
R6375:6378 compcert.lib.Integers Make repr def
R6381:6385 Coq.ZArith.BinInt Z lor def
R6401:6408 compcert.lib.Integers Make unsigned def
R6410:6410 compcert.lib.Integers <> y:60 var
R6388:6395 compcert.lib.Integers Make unsigned def
R6397:6397 compcert.lib.Integers <> x:59 var
def 6426:6428 Make xor
R6436:6438 compcert.lib.Integers Make int rec
binder 6431:6431 <> x:61
binder 6433:6433 <> y:62
R6443:6445 compcert.lib.Integers Make int rec
R6450:6453 compcert.lib.Integers Make repr def
R6456:6461 Coq.ZArith.BinInt Z lxor def
R6477:6484 compcert.lib.Integers Make unsigned def
R6486:6486 compcert.lib.Integers <> y:62 var
R6464:6471 compcert.lib.Integers Make unsigned def
R6473:6473 compcert.lib.Integers <> x:61 var
def 6503:6505 Make not
R6511:6513 compcert.lib.Integers Make int rec
binder 6508:6508 <> x:63
R6518:6520 compcert.lib.Integers Make int rec
R6525:6527 compcert.lib.Integers Make xor def
R6531:6534 compcert.lib.Integers Make mone def
R6529:6529 compcert.lib.Integers <> x:63 var
def 6577:6579 Make shl
R6587:6589 compcert.lib.Integers Make int rec
binder 6582:6582 <> x:64
binder 6584:6584 <> y:65
R6593:6595 compcert.lib.Integers Make int rec
R6600:6603 compcert.lib.Integers Make repr def
R6606:6613 Coq.ZArith.BinInt Z shiftl def
R6629:6636 compcert.lib.Integers Make unsigned def
R6638:6638 compcert.lib.Integers <> y:65 var
R6616:6623 compcert.lib.Integers Make unsigned def
R6625:6625 compcert.lib.Integers <> x:64 var
def 6654:6657 Make shru
R6665:6667 compcert.lib.Integers Make int rec
binder 6660:6660 <> x:66
binder 6662:6662 <> y:67
R6671:6673 compcert.lib.Integers Make int rec
R6678:6681 compcert.lib.Integers Make repr def
R6684:6691 Coq.ZArith.BinInt Z shiftr def
R6707:6714 compcert.lib.Integers Make unsigned def
R6716:6716 compcert.lib.Integers <> y:67 var
R6694:6701 compcert.lib.Integers Make unsigned def
R6703:6703 compcert.lib.Integers <> x:66 var
def 6732:6734 Make shr
R6742:6744 compcert.lib.Integers Make int rec
binder 6737:6737 <> x:68
binder 6739:6739 <> y:69
R6748:6750 compcert.lib.Integers Make int rec
R6755:6758 compcert.lib.Integers Make repr def
R6761:6768 Coq.ZArith.BinInt Z shiftr def
R6782:6789 compcert.lib.Integers Make unsigned def
R6791:6791 compcert.lib.Integers <> y:69 var
R6771:6776 compcert.lib.Integers Make signed def
R6778:6778 compcert.lib.Integers <> x:68 var
def 6808:6810 Make rol
R6818:6820 compcert.lib.Integers Make int rec
binder 6813:6813 <> x:70
binder 6815:6815 <> y:71
R6825:6827 compcert.lib.Integers Make int rec
R6843:6843 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6854:6859 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R6844:6851 compcert.lib.Integers Make unsigned def
R6853:6853 compcert.lib.Integers <> y:71 var
R6860:6868 compcert.lib.Integers Make zwordsize def
binder 6838:6838 <> n:72
R6875:6878 compcert.lib.Integers Make repr def
R6881:6885 Coq.ZArith.BinInt Z lor def
R6914:6921 Coq.ZArith.BinInt Z shiftr def
R6946:6948 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R6937:6945 compcert.lib.Integers Make zwordsize def
R6949:6949 compcert.lib.Integers <> n:72 var
R6924:6931 compcert.lib.Integers Make unsigned def
R6933:6933 compcert.lib.Integers <> x:70 var
R6888:6895 Coq.ZArith.BinInt Z shiftl def
R6910:6910 compcert.lib.Integers <> n:72 var
R6898:6905 compcert.lib.Integers Make unsigned def
R6907:6907 compcert.lib.Integers <> x:70 var
def 6966:6968 Make ror
R6976:6978 compcert.lib.Integers Make int rec
binder 6971:6971 <> x:73
binder 6973:6973 <> y:74
R6983:6985 compcert.lib.Integers Make int rec
R7001:7001 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7012:7017 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R7002:7009 compcert.lib.Integers Make unsigned def
R7011:7011 compcert.lib.Integers <> y:74 var
R7018:7026 compcert.lib.Integers Make zwordsize def
binder 6996:6996 <> n:75
R7033:7036 compcert.lib.Integers Make repr def
R7039:7043 Coq.ZArith.BinInt Z lor def
R7072:7079 Coq.ZArith.BinInt Z shiftl def
R7104:7106 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R7095:7103 compcert.lib.Integers Make zwordsize def
R7107:7107 compcert.lib.Integers <> n:75 var
R7082:7089 compcert.lib.Integers Make unsigned def
R7091:7091 compcert.lib.Integers <> x:73 var
R7046:7053 Coq.ZArith.BinInt Z shiftr def
R7068:7068 compcert.lib.Integers <> n:75 var
R7056:7063 compcert.lib.Integers Make unsigned def
R7065:7065 compcert.lib.Integers <> x:73 var
def 7125:7128 Make rolm
R7138:7140 compcert.lib.Integers Make int rec
binder 7131:7131 <> x:76
binder 7133:7133 <> a:77
binder 7135:7135 <> m:78
R7144:7146 compcert.lib.Integers Make int rec
R7151:7153 compcert.lib.Integers Make and def
R7165:7165 compcert.lib.Integers <> m:78 var
R7156:7158 compcert.lib.Integers Make rol def
R7162:7162 compcert.lib.Integers <> a:77 var
R7160:7160 compcert.lib.Integers <> x:76 var
def 7306:7309 Make shrx
R7317:7319 compcert.lib.Integers Make int rec
binder 7312:7312 <> x:79
binder 7314:7314 <> y:80
R7323:7325 compcert.lib.Integers Make int rec
R7332:7335 compcert.lib.Integers Make divs def
R7340:7342 compcert.lib.Integers Make shl def
R7348:7348 compcert.lib.Integers <> y:80 var
R7344:7346 compcert.lib.Integers Make one def
R7337:7337 compcert.lib.Integers <> x:79 var
def 7400:7404 Make mulhu
R7412:7414 compcert.lib.Integers Make int rec
binder 7407:7407 <> x:81
binder 7409:7409 <> y:82
R7418:7420 compcert.lib.Integers Make int rec
R7425:7428 compcert.lib.Integers Make repr def
R7431:7431 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7455:7458 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7442:7444 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7432:7439 compcert.lib.Integers Make unsigned def
R7441:7441 compcert.lib.Integers <> x:81 var
R7445:7452 compcert.lib.Integers Make unsigned def
R7454:7454 compcert.lib.Integers <> y:82 var
R7459:7465 compcert.lib.Integers Make modulus def
def 7480:7484 Make mulhs
R7492:7494 compcert.lib.Integers Make int rec
binder 7487:7487 <> x:83
binder 7489:7489 <> y:84
R7498:7500 compcert.lib.Integers Make int rec
R7505:7508 compcert.lib.Integers Make repr def
R7511:7511 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7531:7534 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R7520:7522 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R7512:7517 compcert.lib.Integers Make signed def
R7519:7519 compcert.lib.Integers <> x:83 var
R7523:7528 compcert.lib.Integers Make signed def
R7530:7530 compcert.lib.Integers <> y:84 var
R7535:7541 compcert.lib.Integers Make modulus def
def 7581:7588 Make negative
R7594:7596 compcert.lib.Integers Make int rec
binder 7591:7591 <> x:85
R7600:7602 compcert.lib.Integers Make int rec
R7612:7613 compcert.lib.Integers Make lt def
R7617:7620 compcert.lib.Integers Make zero def
R7615:7615 compcert.lib.Integers <> x:85 var
R7636:7639 compcert.lib.Integers Make zero def
R7627:7629 compcert.lib.Integers Make one def
def 7654:7662 Make add_carry
R7674:7676 compcert.lib.Integers Make int rec
binder 7665:7665 <> x:86
binder 7667:7667 <> y:87
binder 7669:7671 <> cin:88
R7680:7682 compcert.lib.Integers Make int rec
R7692:7694 compcert.lib.Coqlib <> zlt def
R7737:7743 compcert.lib.Integers Make modulus def
R7720:7722 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7707:7709 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7697:7704 compcert.lib.Integers Make unsigned def
R7706:7706 compcert.lib.Integers <> x:86 var
R7710:7717 compcert.lib.Integers Make unsigned def
R7719:7719 compcert.lib.Integers <> y:87 var
R7723:7730 compcert.lib.Integers Make unsigned def
R7732:7734 compcert.lib.Integers <> cin:88 var
R7760:7762 compcert.lib.Integers Make one def
R7750:7753 compcert.lib.Integers Make zero def
def 7777:7788 Make add_overflow
R7800:7802 compcert.lib.Integers Make int rec
binder 7791:7791 <> x:89
binder 7793:7793 <> y:90
binder 7795:7797 <> cin:91
R7806:7808 compcert.lib.Integers Make int rec
R7843:7845 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7832:7834 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R7824:7829 compcert.lib.Integers Make signed def
R7831:7831 compcert.lib.Integers <> x:89 var
R7835:7840 compcert.lib.Integers Make signed def
R7842:7842 compcert.lib.Integers <> y:90 var
R7846:7851 compcert.lib.Integers Make signed def
R7853:7855 compcert.lib.Integers <> cin:91 var
binder 7819:7819 <> s:92
R7881:7884 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R7865:7867 compcert.lib.Coqlib <> zle def
R7880:7880 compcert.lib.Integers <> s:92 var
R7869:7878 compcert.lib.Integers Make min_signed def
R7885:7887 compcert.lib.Coqlib <> zle def
R7891:7900 compcert.lib.Integers Make max_signed def
R7889:7889 compcert.lib.Integers <> s:92 var
R7917:7919 compcert.lib.Integers Make one def
R7907:7910 compcert.lib.Integers Make zero def
def 7934:7943 Make sub_borrow
R7955:7957 compcert.lib.Integers Make int rec
binder 7946:7946 <> x:93
binder 7948:7948 <> y:94
binder 7950:7952 <> bin:95
R7961:7963 compcert.lib.Integers Make int rec
R7973:7975 compcert.lib.Coqlib <> zlt def
R8001:8003 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R7988:7990 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R7978:7985 compcert.lib.Integers Make unsigned def
R7987:7987 compcert.lib.Integers <> x:93 var
R7991:7998 compcert.lib.Integers Make unsigned def
R8000:8000 compcert.lib.Integers <> y:94 var
R8004:8011 compcert.lib.Integers Make unsigned def
R8013:8015 compcert.lib.Integers <> bin:95 var
R8034:8037 compcert.lib.Integers Make zero def
R8025:8027 compcert.lib.Integers Make one def
def 8052:8063 Make sub_overflow
R8075:8077 compcert.lib.Integers Make int rec
binder 8066:8066 <> x:96
binder 8068:8068 <> y:97
binder 8070:8072 <> bin:98
R8081:8083 compcert.lib.Integers Make int rec
R8118:8120 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R8107:8109 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R8099:8104 compcert.lib.Integers Make signed def
R8106:8106 compcert.lib.Integers <> x:96 var
R8110:8115 compcert.lib.Integers Make signed def
R8117:8117 compcert.lib.Integers <> y:97 var
R8121:8126 compcert.lib.Integers Make signed def
R8128:8130 compcert.lib.Integers <> bin:98 var
binder 8094:8094 <> s:99
R8156:8159 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8140:8142 compcert.lib.Coqlib <> zle def
R8155:8155 compcert.lib.Integers <> s:99 var
R8144:8153 compcert.lib.Integers Make min_signed def
R8160:8162 compcert.lib.Coqlib <> zle def
R8166:8175 compcert.lib.Integers Make max_signed def
R8164:8164 compcert.lib.Integers <> s:99 var
R8192:8194 compcert.lib.Integers Make one def
R8182:8185 compcert.lib.Integers Make zero def
def 8297:8305 Make shr_carry
R8313:8315 compcert.lib.Integers Make int rec
binder 8308:8308 <> x:100
binder 8310:8310 <> y:101
R8320:8322 compcert.lib.Integers Make int rec
R8341:8344 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8332:8333 compcert.lib.Integers Make lt def
R8337:8340 compcert.lib.Integers Make zero def
R8335:8335 compcert.lib.Integers <> x:100 var
R8345:8348 Coq.Init.Datatypes <> negb def
R8351:8352 compcert.lib.Integers Make eq def
R8384:8387 compcert.lib.Integers Make zero def
R8355:8357 compcert.lib.Integers Make and def
R8362:8364 compcert.lib.Integers Make sub def
R8378:8380 compcert.lib.Integers Make one def
R8367:8369 compcert.lib.Integers Make shl def
R8375:8375 compcert.lib.Integers <> y:101 var
R8371:8373 compcert.lib.Integers Make one def
R8359:8359 compcert.lib.Integers <> x:100 var
R8406:8409 compcert.lib.Integers Make zero def
R8397:8399 compcert.lib.Integers Make one def
def 8457:8464 Make zero_ext
R8470:8470 Coq.Numbers.BinNums <> Z ind
binder 8467:8467 <> n:102
R8477:8479 compcert.lib.Integers Make int rec
binder 8474:8474 <> x:103
R8484:8486 compcert.lib.Integers Make int rec
R8491:8494 compcert.lib.Integers Make repr def
R8497:8505 compcert.lib.Zbits <> Zzero_ext def
R8510:8517 compcert.lib.Integers Make unsigned def
R8519:8519 compcert.lib.Integers <> x:103 var
R8507:8507 compcert.lib.Integers <> n:102 var
def 8535:8542 Make sign_ext
R8548:8548 Coq.Numbers.BinNums <> Z ind
binder 8545:8545 <> n:104
R8555:8557 compcert.lib.Integers Make int rec
binder 8552:8552 <> x:105
R8562:8564 compcert.lib.Integers Make int rec
R8569:8572 compcert.lib.Integers Make repr def
R8575:8583 compcert.lib.Zbits <> Zsign_ext def
R8588:8595 compcert.lib.Integers Make unsigned def
R8597:8597 compcert.lib.Integers <> x:105 var
R8585:8585 compcert.lib.Integers <> n:104 var
def 8675:8682 Make one_bits
R8688:8690 compcert.lib.Integers Make int rec
binder 8685:8685 <> x:106
R8695:8698 Coq.Init.Datatypes <> list ind
R8700:8702 compcert.lib.Integers Make int rec
R8709:8716 Coq.Lists.List <> map def
R8724:8733 compcert.lib.Zbits <> Z_one_bits def
R8745:8752 compcert.lib.Integers Make unsigned def
R8754:8754 compcert.lib.Integers <> x:106 var
R8735:8742 compcert.lib.Integers Make wordsize def
R8718:8721 compcert.lib.Integers Make repr def
def 8811:8819 Make is_power2
R8825:8827 compcert.lib.Integers Make int rec
binder 8822:8822 <> x:107
R8832:8837 Coq.Init.Datatypes <> option ind
R8839:8841 compcert.lib.Integers Make int rec
R8854:8864 compcert.lib.Zbits <> Z_is_power2 def
R8867:8874 compcert.lib.Integers Make unsigned def
R8876:8876 compcert.lib.Integers <> x:107 var
R8888:8891 Coq.Init.Datatypes <> Some constr
R8898:8901 Coq.Init.Datatypes <> Some constr
R8904:8907 compcert.lib.Integers Make repr def
R8916:8919 Coq.Init.Datatypes <> None constr
R8924:8927 Coq.Init.Datatypes <> None constr
def 8969:8971 Make cmp
R8977:8986 compcert.lib.Integers <> comparison ind
binder 8974:8974 <> c:108
R8995:8997 compcert.lib.Integers Make int rec
binder 8990:8990 <> x:109
binder 8992:8992 <> y:110
R9002:9005 Coq.Init.Datatypes <> bool ind
R9018:9018 compcert.lib.Integers <> c:108 var
R9029:9031 compcert.lib.Integers <> Ceq constr
R9036:9037 compcert.lib.Integers Make eq def
R9041:9041 compcert.lib.Integers <> y:110 var
R9039:9039 compcert.lib.Integers <> x:109 var
R9047:9049 compcert.lib.Integers <> Cne constr
R9054:9057 Coq.Init.Datatypes <> negb def
R9060:9061 compcert.lib.Integers Make eq def
R9065:9065 compcert.lib.Integers <> y:110 var
R9063:9063 compcert.lib.Integers <> x:109 var
R9072:9074 compcert.lib.Integers <> Clt constr
R9079:9080 compcert.lib.Integers Make lt def
R9084:9084 compcert.lib.Integers <> y:110 var
R9082:9082 compcert.lib.Integers <> x:109 var
R9090:9092 compcert.lib.Integers <> Cle constr
R9097:9100 Coq.Init.Datatypes <> negb def
R9103:9104 compcert.lib.Integers Make lt def
R9108:9108 compcert.lib.Integers <> x:109 var
R9106:9106 compcert.lib.Integers <> y:110 var
R9115:9117 compcert.lib.Integers <> Cgt constr
R9122:9123 compcert.lib.Integers Make lt def
R9127:9127 compcert.lib.Integers <> x:109 var
R9125:9125 compcert.lib.Integers <> y:110 var
R9133:9135 compcert.lib.Integers <> Cge constr
R9140:9143 Coq.Init.Datatypes <> negb def
R9146:9147 compcert.lib.Integers Make lt def
R9151:9151 compcert.lib.Integers <> y:110 var
R9149:9149 compcert.lib.Integers <> x:109 var
def 9173:9176 Make cmpu
R9182:9191 compcert.lib.Integers <> comparison ind
binder 9179:9179 <> c:112
R9200:9202 compcert.lib.Integers Make int rec
binder 9195:9195 <> x:113
binder 9197:9197 <> y:114
R9207:9210 Coq.Init.Datatypes <> bool ind
R9223:9223 compcert.lib.Integers <> c:112 var
R9234:9236 compcert.lib.Integers <> Ceq constr
R9241:9242 compcert.lib.Integers Make eq def
R9246:9246 compcert.lib.Integers <> y:114 var
R9244:9244 compcert.lib.Integers <> x:113 var
R9252:9254 compcert.lib.Integers <> Cne constr
R9259:9262 Coq.Init.Datatypes <> negb def
R9265:9266 compcert.lib.Integers Make eq def
R9270:9270 compcert.lib.Integers <> y:114 var
R9268:9268 compcert.lib.Integers <> x:113 var
R9277:9279 compcert.lib.Integers <> Clt constr
R9284:9286 compcert.lib.Integers Make ltu def
R9290:9290 compcert.lib.Integers <> y:114 var
R9288:9288 compcert.lib.Integers <> x:113 var
R9296:9298 compcert.lib.Integers <> Cle constr
R9303:9306 Coq.Init.Datatypes <> negb def
R9309:9311 compcert.lib.Integers Make ltu def
R9315:9315 compcert.lib.Integers <> x:113 var
R9313:9313 compcert.lib.Integers <> y:114 var
R9322:9324 compcert.lib.Integers <> Cgt constr
R9329:9331 compcert.lib.Integers Make ltu def
R9335:9335 compcert.lib.Integers <> x:113 var
R9333:9333 compcert.lib.Integers <> y:114 var
R9341:9343 compcert.lib.Integers <> Cge constr
R9348:9351 Coq.Init.Datatypes <> negb def
R9354:9356 compcert.lib.Integers Make ltu def
R9360:9360 compcert.lib.Integers <> y:114 var
R9358:9358 compcert.lib.Integers <> x:113 var
def 9382:9389 Make is_false
R9395:9397 compcert.lib.Integers Make int rec
binder 9392:9392 <> x:116
R9411:9413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9410:9410 compcert.lib.Integers <> x:116 var
R9414:9417 compcert.lib.Integers Make zero def
def 9431:9437 Make is_true
R9444:9446 compcert.lib.Integers Make int rec
binder 9441:9441 <> x:117
R9460:9463 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R9459:9459 compcert.lib.Integers <> x:117 var
R9464:9467 compcert.lib.Integers Make zero def
def 9481:9487 Make notbool
R9494:9496 compcert.lib.Integers Make int rec
binder 9491:9491 <> x:118
R9501:9503 compcert.lib.Integers Make int rec
R9512:9513 compcert.lib.Integers Make eq def
R9517:9520 compcert.lib.Integers Make zero def
R9515:9515 compcert.lib.Integers <> x:118 var
R9536:9539 compcert.lib.Integers Make zero def
R9527:9529 compcert.lib.Integers Make one def
def 9602:9609 Make divmodu2
R9621:9623 compcert.lib.Integers Make int rec
binder 9612:9614 <> nhi:119
binder 9616:9618 <> nlo:120
R9630:9632 compcert.lib.Integers Make int rec
binder 9627:9627 <> d:121
R9637:9642 Coq.Init.Datatypes <> option ind
R9648:9650 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R9645:9647 compcert.lib.Integers Make int rec
R9651:9653 compcert.lib.Integers Make int rec
R9664:9669 compcert.lib.Integers Make eq_dec thm
R9673:9676 compcert.lib.Integers Make zero def
R9671:9671 compcert.lib.Integers <> d:121 var
R9711:9720 Coq.ZArith.BinInt Z div_eucl def
R9763:9770 compcert.lib.Integers Make unsigned def
R9772:9772 compcert.lib.Integers <> d:121 var
R9745:9747 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9735:9737 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R9723:9730 compcert.lib.Integers Make unsigned def
R9732:9734 compcert.lib.Integers <> nhi:119 var
R9738:9744 compcert.lib.Integers Make modulus def
R9748:9755 compcert.lib.Integers Make unsigned def
R9757:9759 compcert.lib.Integers <> nlo:120 var
binder 9702:9702 <> q:122
binder 9705:9705 <> r:123
R9785:9787 compcert.lib.Coqlib <> zle def
R9791:9802 compcert.lib.Integers Make max_unsigned def
R9789:9789 compcert.lib.Integers <> q:122 var
R9835:9838 Coq.Init.Datatypes <> None constr
R9809:9812 Coq.Init.Datatypes <> Some constr
R9813:9813 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9820:9821 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9828:9828 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9814:9817 compcert.lib.Integers Make repr def
R9819:9819 compcert.lib.Integers <> q:122 var
R9822:9825 compcert.lib.Integers Make repr def
R9827:9827 compcert.lib.Integers <> r:123 var
R9683:9686 Coq.Init.Datatypes <> None constr
def 9854:9861 Make divmods2
R9873:9875 compcert.lib.Integers Make int rec
binder 9864:9866 <> nhi:124
binder 9868:9870 <> nlo:125
R9882:9884 compcert.lib.Integers Make int rec
binder 9879:9879 <> d:126
R9889:9894 Coq.Init.Datatypes <> option ind
R9900:9902 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R9897:9899 compcert.lib.Integers Make int rec
R9903:9905 compcert.lib.Integers Make int rec
R9916:9921 compcert.lib.Integers Make eq_dec thm
R9925:9928 compcert.lib.Integers Make zero def
R9923:9923 compcert.lib.Integers <> d:126 var
R9963:9971 Coq.ZArith.BinInt Z quotrem def
R10012:10017 compcert.lib.Integers Make signed def
R10019:10019 compcert.lib.Integers <> d:126 var
R9994:9996 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R9984:9986 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R9974:9979 compcert.lib.Integers Make signed def
R9981:9983 compcert.lib.Integers <> nhi:124 var
R9987:9993 compcert.lib.Integers Make modulus def
R9997:10004 compcert.lib.Integers Make unsigned def
R10006:10008 compcert.lib.Integers <> nlo:125 var
binder 9954:9954 <> q:127
binder 9957:9957 <> r:128
R10048:10051 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R10032:10034 compcert.lib.Coqlib <> zle def
R10047:10047 compcert.lib.Integers <> q:127 var
R10036:10045 compcert.lib.Integers Make min_signed def
R10052:10054 compcert.lib.Coqlib <> zle def
R10058:10067 compcert.lib.Integers Make max_signed def
R10056:10056 compcert.lib.Integers <> q:127 var
R10100:10103 Coq.Init.Datatypes <> None constr
R10074:10077 Coq.Init.Datatypes <> Some constr
R10078:10078 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10085:10086 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10093:10093 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10079:10082 compcert.lib.Integers Make repr def
R10084:10084 compcert.lib.Integers <> q:127 var
R10087:10090 compcert.lib.Integers Make repr def
R10092:10092 compcert.lib.Integers <> r:128 var
R9935:9938 Coq.Init.Datatypes <> None constr
prf 10228:10245 Make half_modulus_power
R10262:10264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10250:10261 compcert.lib.Integers Make half_modulus def
R10265:10269 Coq.ZArith.Zpower <> two_p def
R10281:10283 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10272:10280 compcert.lib.Integers Make zwordsize def
R10304:10315 compcert.lib.Integers Make half_modulus def
R10326:10338 compcert.lib.Integers Make modulus_power thm
R10326:10338 compcert.lib.Integers Make modulus_power thm
R10326:10338 compcert.lib.Integers Make modulus_power thm
R10364:10366 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10355:10363 compcert.lib.Integers Make zwordsize def
R10364:10366 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R10355:10363 compcert.lib.Integers Make zwordsize def
R10382:10390 compcert.lib.Integers Make zwordsize def
R10399:10404 Coq.ZArith.BinInt Z succ def
R10382:10390 compcert.lib.Integers Make zwordsize def
R10399:10404 Coq.ZArith.BinInt Z succ def
R10422:10428 Coq.ZArith.Zpower <> two_p_S thm
R10422:10428 Coq.ZArith.Zpower <> two_p_S thm
R10422:10428 Coq.ZArith.Zpower <> two_p_S thm
R10422:10428 Coq.ZArith.Zpower <> two_p_S thm
R10439:10448 Coq.ZArith.BinInt Z mul_comm thm
R10439:10448 Coq.ZArith.BinInt Z mul_comm thm
R10439:10448 Coq.ZArith.BinInt Z mul_comm thm
R10457:10466 Coq.ZArith.Zdiv <> Z_div_mult thm
R10457:10466 Coq.ZArith.Zdiv <> Z_div_mult thm
R10499:10510 compcert.lib.Integers Make wordsize_pos thm
R10499:10510 compcert.lib.Integers Make wordsize_pos thm
prf 10550:10569 Make half_modulus_modulus
R10579:10581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10572:10578 compcert.lib.Integers Make modulus def
R10583:10585 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R10586:10597 compcert.lib.Integers Make half_modulus def
R10617:10634 compcert.lib.Integers Make half_modulus_power thm
R10617:10634 compcert.lib.Integers Make half_modulus_power thm
R10617:10634 compcert.lib.Integers Make half_modulus_power thm
R10645:10657 compcert.lib.Integers Make modulus_power thm
R10645:10657 compcert.lib.Integers Make modulus_power thm
R10645:10657 compcert.lib.Integers Make modulus_power thm
R10673:10679 Coq.ZArith.Zpower <> two_p_S thm
R10673:10679 Coq.ZArith.Zpower <> two_p_S thm
R10673:10679 Coq.ZArith.Zpower <> two_p_S thm
R10673:10679 Coq.ZArith.Zpower <> two_p_S thm
R10688:10694 Coq.Init.Logic <> f_equal thm
R10688:10694 Coq.Init.Logic <> f_equal thm
R10715:10726 compcert.lib.Integers Make wordsize_pos thm
R10715:10726 compcert.lib.Integers Make wordsize_pos thm
prf 10903:10918 Make half_modulus_pos
R10933:10935 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R10921:10932 compcert.lib.Integers Make half_modulus def
R10956:10973 compcert.lib.Integers Make half_modulus_power thm
R10956:10973 compcert.lib.Integers Make half_modulus_power thm
R10956:10973 compcert.lib.Integers Make half_modulus_power thm
R10982:10994 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R10982:10994 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R11008:11019 compcert.lib.Integers Make wordsize_pos thm
R11008:11019 compcert.lib.Integers Make wordsize_pos thm
prf 11040:11053 Make min_signed_neg
R11066:11068 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11056:11065 compcert.lib.Integers Make min_signed def
R11088:11097 compcert.lib.Integers Make min_signed def
R11111:11126 compcert.lib.Integers Make half_modulus_pos thm
R11111:11126 compcert.lib.Integers Make half_modulus_pos thm
prf 11147:11160 Make max_signed_pos
R11173:11176 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R11163:11172 compcert.lib.Integers Make max_signed def
R11196:11205 compcert.lib.Integers Make max_signed def
R11219:11234 compcert.lib.Integers Make half_modulus_pos thm
R11219:11234 compcert.lib.Integers Make half_modulus_pos thm
prf 11255:11275 Make wordsize_max_unsigned
R11287:11290 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R11278:11286 compcert.lib.Integers Make zwordsize def
R11291:11302 compcert.lib.Integers Make max_unsigned def
R11331:11333 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11322:11330 compcert.lib.Integers Make zwordsize def
R11334:11340 compcert.lib.Integers Make modulus def
R11331:11333 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11322:11330 compcert.lib.Integers Make zwordsize def
R11334:11340 compcert.lib.Integers Make modulus def
R11356:11368 compcert.lib.Integers Make modulus_power thm
R11356:11368 compcert.lib.Integers Make modulus_power thm
R11356:11368 compcert.lib.Integers Make modulus_power thm
R11377:11388 compcert.lib.Coqlib <> two_p_strict thm
R11377:11388 compcert.lib.Coqlib <> two_p_strict thm
R11406:11417 compcert.lib.Integers Make wordsize_pos thm
R11406:11417 compcert.lib.Integers Make wordsize_pos thm
R11434:11445 compcert.lib.Integers Make max_unsigned def
prf 11466:11490 Make two_wordsize_max_unsigned
R11510:11513 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R11506:11508 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11494:11496 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R11497:11505 compcert.lib.Integers Make zwordsize def
R11514:11525 compcert.lib.Integers Make max_unsigned def
R11562:11564 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11558:11560 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11546:11548 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R11549:11557 compcert.lib.Integers Make zwordsize def
R11565:11571 compcert.lib.Integers Make modulus def
R11562:11564 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11558:11560 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R11546:11548 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R11549:11557 compcert.lib.Integers Make zwordsize def
R11565:11571 compcert.lib.Integers Make modulus def
R11587:11599 compcert.lib.Integers Make modulus_power thm
R11587:11599 compcert.lib.Integers Make modulus_power thm
R11587:11599 compcert.lib.Integers Make modulus_power thm
R11608:11621 compcert.lib.Coqlib <> two_p_strict_2 thm
R11608:11621 compcert.lib.Coqlib <> two_p_strict_2 thm
R11635:11646 compcert.lib.Integers Make wordsize_pos thm
R11635:11646 compcert.lib.Integers Make wordsize_pos thm
R11663:11674 compcert.lib.Integers Make max_unsigned def
prf 11695:11713 Make max_signed_unsigned
R11726:11728 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R11716:11725 compcert.lib.Integers Make max_signed def
R11729:11740 compcert.lib.Integers Make max_unsigned def
R11759:11768 compcert.lib.Integers Make max_signed def
R11771:11782 compcert.lib.Integers Make max_unsigned def
R11793:11812 compcert.lib.Integers Make half_modulus_modulus thm
R11793:11812 compcert.lib.Integers Make half_modulus_modulus thm
R11793:11812 compcert.lib.Integers Make half_modulus_modulus thm
R11828:11843 compcert.lib.Integers Make half_modulus_pos thm
R11828:11843 compcert.lib.Integers Make half_modulus_pos thm
prf 11863:11878 Make unsigned_repr_eq
binder 11890:11890 <> x:129
R11910:11912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11893:11900 compcert.lib.Integers Make unsigned def
R11903:11906 compcert.lib.Integers Make repr def
R11908:11908 compcert.lib.Integers <> x:129 var
R11913:11920 Coq.ZArith.BinInt Z modulo def
R11924:11930 compcert.lib.Integers Make modulus def
R11922:11922 compcert.lib.Integers <> x:129 var
R11963:11978 compcert.lib.Integers Make Z_mod_modulus_eq thm
R11963:11978 compcert.lib.Integers Make Z_mod_modulus_eq thm
prf 11993:12006 Make signed_repr_eq
binder 12018:12018 <> x:130
R12036:12038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12021:12026 compcert.lib.Integers Make signed def
R12029:12032 compcert.lib.Integers Make repr def
R12034:12034 compcert.lib.Integers <> x:130 var
R12042:12044 compcert.lib.Coqlib <> zlt def
R12067:12078 compcert.lib.Integers Make half_modulus def
R12047:12054 Coq.ZArith.BinInt Z modulo def
R12058:12064 compcert.lib.Integers Make modulus def
R12056:12056 compcert.lib.Integers <> x:130 var
R12127:12129 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R12109:12116 Coq.ZArith.BinInt Z modulo def
R12120:12126 compcert.lib.Integers Make modulus def
R12118:12118 compcert.lib.Integers <> x:130 var
R12130:12136 compcert.lib.Integers Make modulus def
R12085:12092 Coq.ZArith.BinInt Z modulo def
R12096:12102 compcert.lib.Integers Make modulus def
R12094:12094 compcert.lib.Integers <> x:130 var
R12163:12168 compcert.lib.Integers Make signed def
R12179:12194 compcert.lib.Integers Make unsigned_repr_eq thm
R12179:12194 compcert.lib.Integers Make unsigned_repr_eq thm
R12179:12194 compcert.lib.Integers Make unsigned_repr_eq thm
def 12321:12323 Make eqm
R12328:12332 compcert.lib.Zbits <> eqmod def
R12334:12340 compcert.lib.Integers Make modulus def
prf 12350:12357 Make eqm_refl
binder 12367:12367 <> x:131
R12370:12372 compcert.lib.Integers Make eqm def
R12376:12376 compcert.lib.Integers <> x:131 var
R12374:12374 compcert.lib.Integers <> x:131 var
R12386:12395 compcert.lib.Zbits <> eqmod_refl thm
R12397:12403 compcert.lib.Integers Make modulus def
prf 12450:12458 Make eqm_refl2
binder 12470:12470 <> x:132
binder 12472:12472 <> y:133
R12480:12483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12484:12486 compcert.lib.Integers Make eqm def
R12490:12490 compcert.lib.Integers <> y:133 var
R12488:12488 compcert.lib.Integers <> x:132 var
R12476:12478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12475:12475 compcert.lib.Integers <> x:132 var
R12479:12479 compcert.lib.Integers <> y:133 var
R12500:12510 compcert.lib.Zbits <> eqmod_refl2 thm
R12512:12518 compcert.lib.Integers Make modulus def
prf 12566:12572 Make eqm_sym
binder 12582:12582 <> x:134
binder 12584:12584 <> y:135
R12594:12597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12598:12600 compcert.lib.Integers Make eqm def
R12604:12604 compcert.lib.Integers <> x:134 var
R12602:12602 compcert.lib.Integers <> y:135 var
R12587:12589 compcert.lib.Integers Make eqm def
R12593:12593 compcert.lib.Integers <> y:135 var
R12591:12591 compcert.lib.Integers <> x:134 var
R12614:12622 compcert.lib.Zbits <> eqmod_sym thm
R12624:12630 compcert.lib.Integers Make modulus def
prf 12676:12684 Make eqm_trans
binder 12694:12694 <> x:136
binder 12696:12696 <> y:137
binder 12698:12698 <> z:138
R12708:12711 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12719:12722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12723:12725 compcert.lib.Integers Make eqm def
R12729:12729 compcert.lib.Integers <> z:138 var
R12727:12727 compcert.lib.Integers <> x:136 var
R12712:12714 compcert.lib.Integers Make eqm def
R12718:12718 compcert.lib.Integers <> z:138 var
R12716:12716 compcert.lib.Integers <> y:137 var
R12701:12703 compcert.lib.Integers Make eqm def
R12707:12707 compcert.lib.Integers <> y:137 var
R12705:12705 compcert.lib.Integers <> x:136 var
R12739:12749 compcert.lib.Zbits <> eqmod_trans thm
R12751:12757 compcert.lib.Integers Make modulus def
prf 12805:12816 Make eqm_small_eq
binder 12828:12828 <> x:139
binder 12830:12830 <> y:140
R12840:12843 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12860:12863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12880:12883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12885:12887 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12884:12884 compcert.lib.Integers <> x:139 var
R12888:12888 compcert.lib.Integers <> y:140 var
R12865:12868 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12870:12872 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12869:12869 compcert.lib.Integers <> y:140 var
R12869:12869 compcert.lib.Integers <> y:140 var
R12873:12879 compcert.lib.Integers Make modulus def
R12845:12848 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12850:12852 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R12849:12849 compcert.lib.Integers <> x:139 var
R12849:12849 compcert.lib.Integers <> x:139 var
R12853:12859 compcert.lib.Integers Make modulus def
R12833:12835 compcert.lib.Integers Make eqm def
R12839:12839 compcert.lib.Integers <> y:140 var
R12837:12837 compcert.lib.Integers <> x:139 var
R12898:12911 compcert.lib.Zbits <> eqmod_small_eq thm
R12913:12919 compcert.lib.Integers Make modulus def
prf 12970:12976 Make eqm_add
binder 12988:12988 <> a:141
binder 12990:12990 <> b:142
binder 12992:12992 <> c:143
binder 12994:12994 <> d:144
R13004:13007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13015:13018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13019:13021 compcert.lib.Integers Make eqm def
R13033:13035 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13032:13032 compcert.lib.Integers <> b:142 var
R13036:13036 compcert.lib.Integers <> d:144 var
R13025:13027 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13024:13024 compcert.lib.Integers <> a:141 var
R13028:13028 compcert.lib.Integers <> c:143 var
R13008:13010 compcert.lib.Integers Make eqm def
R13014:13014 compcert.lib.Integers <> d:144 var
R13012:13012 compcert.lib.Integers <> c:143 var
R12997:12999 compcert.lib.Integers Make eqm def
R13003:13003 compcert.lib.Integers <> b:142 var
R13001:13001 compcert.lib.Integers <> a:141 var
R13047:13055 compcert.lib.Zbits <> eqmod_add thm
R13057:13063 compcert.lib.Integers Make modulus def
prf 13109:13115 Make eqm_neg
binder 13127:13127 <> x:145
binder 13129:13129 <> y:146
R13139:13142 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13143:13145 compcert.lib.Integers Make eqm def
R13153:13153 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13154:13154 compcert.lib.Integers <> y:146 var
R13148:13148 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R13149:13149 compcert.lib.Integers <> x:145 var
R13132:13134 compcert.lib.Integers Make eqm def
R13138:13138 compcert.lib.Integers <> y:146 var
R13136:13136 compcert.lib.Integers <> x:145 var
R13165:13173 compcert.lib.Zbits <> eqmod_neg thm
R13175:13181 compcert.lib.Integers Make modulus def
prf 13227:13233 Make eqm_sub
binder 13245:13245 <> a:147
binder 13247:13247 <> b:148
binder 13249:13249 <> c:149
binder 13251:13251 <> d:150
R13261:13264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13272:13275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13276:13278 compcert.lib.Integers Make eqm def
R13290:13292 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13289:13289 compcert.lib.Integers <> b:148 var
R13293:13293 compcert.lib.Integers <> d:150 var
R13282:13284 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R13281:13281 compcert.lib.Integers <> a:147 var
R13285:13285 compcert.lib.Integers <> c:149 var
R13265:13267 compcert.lib.Integers Make eqm def
R13271:13271 compcert.lib.Integers <> d:150 var
R13269:13269 compcert.lib.Integers <> c:149 var
R13254:13256 compcert.lib.Integers Make eqm def
R13260:13260 compcert.lib.Integers <> b:148 var
R13258:13258 compcert.lib.Integers <> a:147 var
R13304:13312 compcert.lib.Zbits <> eqmod_sub thm
R13314:13320 compcert.lib.Integers Make modulus def
prf 13366:13373 Make eqm_mult
binder 13385:13385 <> a:151
binder 13387:13387 <> b:152
binder 13389:13389 <> c:153
binder 13391:13391 <> d:154
R13401:13404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13412:13415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13416:13418 compcert.lib.Integers Make eqm def
R13430:13432 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13429:13429 compcert.lib.Integers <> c:153 var
R13433:13433 compcert.lib.Integers <> d:154 var
R13422:13424 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R13421:13421 compcert.lib.Integers <> a:151 var
R13425:13425 compcert.lib.Integers <> b:152 var
R13405:13407 compcert.lib.Integers Make eqm def
R13411:13411 compcert.lib.Integers <> d:154 var
R13409:13409 compcert.lib.Integers <> b:152 var
R13394:13396 compcert.lib.Integers Make eqm def
R13400:13400 compcert.lib.Integers <> c:153 var
R13398:13398 compcert.lib.Integers <> a:151 var
R13444:13453 compcert.lib.Zbits <> eqmod_mult thm
R13455:13461 compcert.lib.Integers Make modulus def
prf 13508:13520 Make eqm_same_bits
binder 13532:13532 <> x:155
binder 13534:13534 <> y:156
R13539:13539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13601:13607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13608:13610 compcert.lib.Integers Make eqm def
R13614:13614 compcert.lib.Integers <> y:156 var
R13612:13612 compcert.lib.Integers <> x:155 var
binder 13547:13547 <> i:157
R13568:13571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13585:13587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13572:13580 Coq.ZArith.BinInt Z testbit def
R13584:13584 compcert.lib.Integers <> i:157 var
R13582:13582 compcert.lib.Integers <> x:155 var
R13588:13596 Coq.ZArith.BinInt Z testbit def
R13600:13600 compcert.lib.Integers <> i:157 var
R13598:13598 compcert.lib.Integers <> y:156 var
R13551:13554 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13556:13558 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13555:13555 compcert.lib.Integers <> i:157 var
R13555:13555 compcert.lib.Integers <> i:157 var
R13559:13567 compcert.lib.Integers Make zwordsize def
R13624:13638 compcert.lib.Zbits <> eqmod_same_bits thm
R13640:13647 compcert.lib.Integers Make wordsize def
prf 13658:13670 Make same_bits_eqm
binder 13682:13682 <> x:158
binder 13684:13684 <> y:159
binder 13686:13686 <> i:160
R13698:13703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13722:13727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13741:13743 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13728:13736 Coq.ZArith.BinInt Z testbit def
R13740:13740 compcert.lib.Integers <> i:160 var
R13738:13738 compcert.lib.Integers <> x:158 var
R13744:13752 Coq.ZArith.BinInt Z testbit def
R13756:13756 compcert.lib.Integers <> i:160 var
R13754:13754 compcert.lib.Integers <> y:159 var
R13705:13708 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13710:13712 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13709:13709 compcert.lib.Integers <> i:160 var
R13709:13709 compcert.lib.Integers <> i:160 var
R13713:13721 compcert.lib.Integers Make zwordsize def
R13691:13693 compcert.lib.Integers Make eqm def
R13697:13697 compcert.lib.Integers <> y:159 var
R13695:13695 compcert.lib.Integers <> x:158 var
R13766:13780 compcert.lib.Zbits <> same_bits_eqmod thm
R13782:13789 compcert.lib.Integers Make wordsize def
prf 13861:13872 Make eqm_samerepr
binder 13882:13882 <> x:161
binder 13884:13884 <> y:162
R13894:13897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13904:13906 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13898:13901 compcert.lib.Integers Make repr def
R13903:13903 compcert.lib.Integers <> x:161 var
R13907:13910 compcert.lib.Integers Make repr def
R13912:13912 compcert.lib.Integers <> y:162 var
R13887:13889 compcert.lib.Integers Make eqm def
R13893:13893 compcert.lib.Integers <> y:162 var
R13891:13891 compcert.lib.Integers <> x:161 var
R13939:13942 compcert.lib.Integers Make repr def
R13951:13958 compcert.lib.Integers Make mkint_eq thm
R13951:13958 compcert.lib.Integers Make mkint_eq thm
R13972:13987 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13972:13987 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13972:13987 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13972:13987 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13972:13987 compcert.lib.Integers Make Z_mod_modulus_eq thm
R13996:14007 compcert.lib.Zbits <> eqmod_mod_eq thm
R13996:14007 compcert.lib.Zbits <> eqmod_mod_eq thm
prf 14047:14063 Make eqm_unsigned_repr
binder 14075:14075 <> z:163
R14078:14080 compcert.lib.Integers Make eqm def
R14085:14092 compcert.lib.Integers Make unsigned def
R14095:14098 compcert.lib.Integers Make repr def
R14100:14100 compcert.lib.Integers <> z:163 var
R14082:14082 compcert.lib.Integers <> z:163 var
R14121:14123 compcert.lib.Integers Make eqm def
R14142:14157 compcert.lib.Integers Make unsigned_repr_eq thm
R14142:14157 compcert.lib.Integers Make unsigned_repr_eq thm
R14142:14157 compcert.lib.Integers Make unsigned_repr_eq thm
R14166:14174 compcert.lib.Zbits <> eqmod_mod thm
R14166:14174 compcert.lib.Zbits <> eqmod_mod thm
prf 14250:14268 Make eqm_unsigned_repr_l
binder 14280:14280 <> a:164
binder 14282:14282 <> b:165
R14292:14295 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14296:14298 compcert.lib.Integers Make eqm def
R14320:14320 compcert.lib.Integers <> b:165 var
R14301:14308 compcert.lib.Integers Make unsigned def
R14311:14314 compcert.lib.Integers Make repr def
R14316:14316 compcert.lib.Integers <> a:164 var
R14285:14287 compcert.lib.Integers Make eqm def
R14291:14291 compcert.lib.Integers <> b:165 var
R14289:14289 compcert.lib.Integers <> a:164 var
R14346:14354 compcert.lib.Integers Make eqm_trans thm
R14346:14354 compcert.lib.Integers Make eqm_trans thm
R14372:14378 compcert.lib.Integers Make eqm_sym thm
R14372:14378 compcert.lib.Integers Make eqm_sym thm
R14387:14403 compcert.lib.Integers Make eqm_unsigned_repr thm
R14387:14403 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 14471:14489 Make eqm_unsigned_repr_r
binder 14501:14501 <> a:166
binder 14503:14503 <> b:167
R14513:14516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14517:14519 compcert.lib.Integers Make eqm def
R14524:14531 compcert.lib.Integers Make unsigned def
R14534:14537 compcert.lib.Integers Make repr def
R14539:14539 compcert.lib.Integers <> b:167 var
R14521:14521 compcert.lib.Integers <> a:166 var
R14506:14508 compcert.lib.Integers Make eqm def
R14512:14512 compcert.lib.Integers <> b:167 var
R14510:14510 compcert.lib.Integers <> a:166 var
R14567:14575 compcert.lib.Integers Make eqm_trans thm
R14567:14575 compcert.lib.Integers Make eqm_trans thm
R14599:14615 compcert.lib.Integers Make eqm_unsigned_repr thm
R14599:14615 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 14677:14695 Make eqm_signed_unsigned
binder 14707:14707 <> x:168
R14710:14712 compcert.lib.Integers Make eqm def
R14726:14733 compcert.lib.Integers Make unsigned def
R14735:14735 compcert.lib.Integers <> x:168 var
R14715:14720 compcert.lib.Integers Make signed def
R14722:14722 compcert.lib.Integers <> x:168 var
R14768:14773 compcert.lib.Integers Make signed def
R14786:14793 compcert.lib.Integers Make unsigned def
R14786:14793 compcert.lib.Integers Make unsigned def
R14807:14809 compcert.lib.Coqlib <> zlt def
R14813:14824 compcert.lib.Integers Make half_modulus def
R14807:14809 compcert.lib.Coqlib <> zlt def
R14813:14824 compcert.lib.Integers Make half_modulus def
R14843:14852 compcert.lib.Zbits <> eqmod_refl thm
R14843:14852 compcert.lib.Zbits <> eqmod_refl thm
prf 14893:14906 Make unsigned_range
binder 14918:14918 <> i:169
R14922:14925 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R14936:14938 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R14926:14933 compcert.lib.Integers Make unsigned def
R14935:14935 compcert.lib.Integers <> i:169 var
R14926:14933 compcert.lib.Integers Make unsigned def
R14935:14935 compcert.lib.Integers <> i:169 var
R14939:14945 compcert.lib.Integers Make modulus def
prf 15037:15052 Make unsigned_range_2
binder 15064:15064 <> i:170
R15068:15071 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R15082:15085 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R15072:15079 compcert.lib.Integers Make unsigned def
R15081:15081 compcert.lib.Integers <> i:170 var
R15072:15079 compcert.lib.Integers Make unsigned def
R15081:15081 compcert.lib.Integers <> i:170 var
R15086:15097 compcert.lib.Integers Make max_unsigned def
R15123:15134 compcert.lib.Integers Make max_unsigned def
R15151:15164 compcert.lib.Integers Make unsigned_range thm
R15151:15164 compcert.lib.Integers Make unsigned_range thm
prf 15233:15244 Make signed_range
binder 15256:15256 <> i:171
R15269:15272 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R15281:15284 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R15259:15268 compcert.lib.Integers Make min_signed def
R15273:15278 compcert.lib.Integers Make signed def
R15280:15280 compcert.lib.Integers <> i:171 var
R15273:15278 compcert.lib.Integers Make signed def
R15280:15280 compcert.lib.Integers <> i:171 var
R15285:15294 compcert.lib.Integers Make max_signed def
R15321:15326 compcert.lib.Integers Make signed def
R15343:15356 compcert.lib.Integers Make unsigned_range thm
R15343:15356 compcert.lib.Integers Make unsigned_range thm
R15372:15379 compcert.lib.Integers Make unsigned def
R15372:15379 compcert.lib.Integers Make unsigned def
R15401:15403 compcert.lib.Coqlib <> zlt def
R15407:15418 compcert.lib.Integers Make half_modulus def
R15401:15403 compcert.lib.Coqlib <> zlt def
R15407:15418 compcert.lib.Integers Make half_modulus def
R15438:15447 compcert.lib.Integers Make max_signed def
R15461:15474 compcert.lib.Integers Make min_signed_neg thm
R15461:15474 compcert.lib.Integers Make min_signed_neg thm
R15491:15500 compcert.lib.Integers Make min_signed def
R15503:15512 compcert.lib.Integers Make max_signed def
R15525:15544 compcert.lib.Integers Make half_modulus_modulus thm
R15525:15544 compcert.lib.Integers Make half_modulus_modulus thm
R15525:15544 compcert.lib.Integers Make half_modulus_modulus thm
prf 15571:15583 Make repr_unsigned
binder 15595:15595 <> i:172
R15615:15617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15598:15601 compcert.lib.Integers Make repr def
R15604:15611 compcert.lib.Integers Make unsigned def
R15613:15613 compcert.lib.Integers <> i:172 var
R15618:15618 compcert.lib.Integers <> i:172 var
R15656:15659 compcert.lib.Integers Make repr def
R15668:15675 compcert.lib.Integers Make mkint_eq thm
R15668:15675 compcert.lib.Integers Make mkint_eq thm
R15688:15703 compcert.lib.Integers Make Z_mod_modulus_eq thm
R15688:15703 compcert.lib.Integers Make Z_mod_modulus_eq thm
R15688:15703 compcert.lib.Integers Make Z_mod_modulus_eq thm
R15712:15722 Coq.ZArith.BinInt Z mod_small thm
R15712:15722 Coq.ZArith.BinInt Z mod_small thm
prf 15783:15793 Make repr_signed
binder 15805:15805 <> i:173
R15823:15825 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15808:15811 compcert.lib.Integers Make repr def
R15814:15819 compcert.lib.Integers Make signed def
R15821:15821 compcert.lib.Integers <> i:173 var
R15826:15826 compcert.lib.Integers <> i:173 var
R15860:15863 compcert.lib.Integers Make repr def
R15866:15873 compcert.lib.Integers Make unsigned def
R15860:15863 compcert.lib.Integers Make repr def
R15866:15873 compcert.lib.Integers Make unsigned def
R15888:15899 compcert.lib.Integers Make eqm_samerepr thm
R15888:15899 compcert.lib.Integers Make eqm_samerepr thm
R15908:15926 compcert.lib.Integers Make eqm_signed_unsigned thm
R15908:15926 compcert.lib.Integers Make eqm_signed_unsigned thm
R15997:16000 compcert.lib.Integers Make repr def
prf 16010:16020 Make eqm_repr_eq
binder 16030:16030 <> x:174
binder 16032:16032 <> y:175
R16053:16056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16063:16065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16057:16060 compcert.lib.Integers Make repr def
R16062:16062 compcert.lib.Integers <> x:174 var
R16066:16066 compcert.lib.Integers <> y:175 var
R16035:16037 compcert.lib.Integers Make eqm def
R16042:16049 compcert.lib.Integers Make unsigned def
R16051:16051 compcert.lib.Integers <> y:175 var
R16039:16039 compcert.lib.Integers <> x:174 var
R16098:16110 compcert.lib.Integers Make repr_unsigned thm
R16098:16110 compcert.lib.Integers Make repr_unsigned thm
R16098:16110 compcert.lib.Integers Make repr_unsigned thm
R16122:16133 compcert.lib.Integers Make eqm_samerepr thm
R16122:16133 compcert.lib.Integers Make eqm_samerepr thm
prf 16156:16168 Make unsigned_repr
binder 16180:16180 <> z:176
R16205:16208 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16226:16228 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16209:16216 compcert.lib.Integers Make unsigned def
R16219:16222 compcert.lib.Integers Make repr def
R16224:16224 compcert.lib.Integers <> z:176 var
R16229:16229 compcert.lib.Integers <> z:176 var
R16184:16187 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16189:16192 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16188:16188 compcert.lib.Integers <> z:176 var
R16188:16188 compcert.lib.Integers <> z:176 var
R16193:16204 compcert.lib.Integers Make max_unsigned def
R16257:16272 compcert.lib.Integers Make unsigned_repr_eq thm
R16257:16272 compcert.lib.Integers Make unsigned_repr_eq thm
R16257:16272 compcert.lib.Integers Make unsigned_repr_eq thm
R16283:16293 Coq.ZArith.BinInt Z mod_small thm
R16283:16293 Coq.ZArith.BinInt Z mod_small thm
R16303:16314 compcert.lib.Integers Make max_unsigned def
prf 16382:16392 Make signed_repr
binder 16404:16404 <> z:177
R16436:16439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16455:16457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16440:16445 compcert.lib.Integers Make signed def
R16448:16451 compcert.lib.Integers Make repr def
R16453:16453 compcert.lib.Integers <> z:177 var
R16458:16458 compcert.lib.Integers <> z:177 var
R16417:16420 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16422:16425 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R16407:16416 compcert.lib.Integers Make min_signed def
R16421:16421 compcert.lib.Integers <> z:177 var
R16421:16421 compcert.lib.Integers <> z:177 var
R16426:16435 compcert.lib.Integers Make max_signed def
R16485:16490 compcert.lib.Integers Make signed def
R16503:16505 compcert.lib.Coqlib <> zle def
R16503:16505 compcert.lib.Coqlib <> zle def
R16524:16531 compcert.lib.Integers Make unsigned def
R16534:16537 compcert.lib.Integers Make repr def
R16524:16531 compcert.lib.Integers Make unsigned def
R16534:16537 compcert.lib.Integers Make repr def
R16561:16568 compcert.lib.Coqlib <> zlt_true thm
R16561:16568 compcert.lib.Coqlib <> zlt_true thm
R16561:16568 compcert.lib.Coqlib <> zlt_true thm
R16561:16568 compcert.lib.Coqlib <> zlt_true thm
R16584:16593 compcert.lib.Integers Make max_signed def
R16624:16636 compcert.lib.Integers Make unsigned_repr thm
R16624:16636 compcert.lib.Integers Make unsigned_repr thm
R16650:16668 compcert.lib.Integers Make max_signed_unsigned thm
R16650:16668 compcert.lib.Integers Make max_signed_unsigned thm
R16691:16693 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16694:16700 compcert.lib.Integers Make modulus def
R16691:16693 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16694:16700 compcert.lib.Integers Make modulus def
R16715:16718 compcert.lib.Integers Make repr def
R16729:16732 compcert.lib.Integers Make repr def
R16715:16718 compcert.lib.Integers Make repr def
R16729:16732 compcert.lib.Integers Make repr def
R16750:16757 compcert.lib.Integers Make unsigned def
R16760:16763 compcert.lib.Integers Make repr def
R16750:16757 compcert.lib.Integers Make unsigned def
R16760:16763 compcert.lib.Integers Make repr def
R16789:16797 compcert.lib.Coqlib <> zlt_false thm
R16789:16797 compcert.lib.Coqlib <> zlt_false thm
R16789:16797 compcert.lib.Coqlib <> zlt_false thm
R16789:16797 compcert.lib.Coqlib <> zlt_false thm
R16836:16845 compcert.lib.Integers Make min_signed def
R16863:16882 compcert.lib.Integers Make half_modulus_modulus thm
R16863:16882 compcert.lib.Integers Make half_modulus_modulus thm
R16863:16882 compcert.lib.Integers Make half_modulus_modulus thm
R16908:16920 compcert.lib.Integers Make unsigned_repr thm
R16908:16920 compcert.lib.Integers Make unsigned_repr thm
R16936:16947 compcert.lib.Integers Make max_unsigned def
R16957:16966 compcert.lib.Integers Make min_signed def
R16969:16978 compcert.lib.Integers Make max_signed def
R16996:17015 compcert.lib.Integers Make half_modulus_modulus thm
R16996:17015 compcert.lib.Integers Make half_modulus_modulus thm
R16996:17015 compcert.lib.Integers Make half_modulus_modulus thm
R17031:17042 compcert.lib.Integers Make eqm_samerepr thm
R17031:17042 compcert.lib.Integers Make eqm_samerepr thm
prf 17090:17107 Make signed_eq_unsigned
binder 17119:17119 <> x:178
R17146:17149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17158:17160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17150:17155 compcert.lib.Integers Make signed def
R17157:17157 compcert.lib.Integers <> x:178 var
R17161:17168 compcert.lib.Integers Make unsigned def
R17170:17170 compcert.lib.Integers <> x:178 var
R17132:17135 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R17122:17129 compcert.lib.Integers Make unsigned def
R17131:17131 compcert.lib.Integers <> x:178 var
R17136:17145 compcert.lib.Integers Make max_signed def
R17197:17202 compcert.lib.Integers Make signed def
R17215:17217 compcert.lib.Coqlib <> zlt def
R17232:17243 compcert.lib.Integers Make half_modulus def
R17220:17227 compcert.lib.Integers Make unsigned def
R17215:17217 compcert.lib.Coqlib <> zlt def
R17232:17243 compcert.lib.Integers Make half_modulus def
R17220:17227 compcert.lib.Integers Make unsigned def
R17262:17271 compcert.lib.Integers Make max_signed def
prf 17301:17315 Make signed_positive
binder 17327:17327 <> x:179
R17343:17347 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17338:17341 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R17330:17335 compcert.lib.Integers Make signed def
R17337:17337 compcert.lib.Integers <> x:179 var
R17358:17361 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R17348:17355 compcert.lib.Integers Make unsigned def
R17357:17357 compcert.lib.Integers <> x:179 var
R17362:17371 compcert.lib.Integers Make max_signed def
R17398:17403 compcert.lib.Integers Make signed def
R17406:17415 compcert.lib.Integers Make max_signed def
R17432:17445 compcert.lib.Integers Make unsigned_range thm
R17450:17469 compcert.lib.Integers Make half_modulus_modulus thm
R17471:17486 compcert.lib.Integers Make half_modulus_pos thm
R17432:17445 compcert.lib.Integers Make unsigned_range thm
R17450:17469 compcert.lib.Integers Make half_modulus_modulus thm
R17471:17486 compcert.lib.Integers Make half_modulus_pos thm
R17509:17511 compcert.lib.Coqlib <> zlt def
R17526:17537 compcert.lib.Integers Make half_modulus def
R17514:17521 compcert.lib.Integers Make unsigned def
R17509:17511 compcert.lib.Coqlib <> zlt def
R17526:17537 compcert.lib.Integers Make half_modulus def
R17514:17521 compcert.lib.Integers Make unsigned def
prf 17606:17618 Make unsigned_zero
R17634:17636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17621:17628 compcert.lib.Integers Make unsigned def
R17630:17633 compcert.lib.Integers Make zero def
R17656:17659 compcert.lib.Integers Make zero def
R17670:17685 compcert.lib.Integers Make unsigned_repr_eq thm
R17670:17685 compcert.lib.Integers Make unsigned_repr_eq thm
R17670:17685 compcert.lib.Integers Make unsigned_repr_eq thm
R17694:17701 Coq.ZArith.Zdiv <> Zmod_0_l thm
R17694:17701 Coq.ZArith.Zdiv <> Zmod_0_l thm
prf 17718:17729 Make unsigned_one
R17744:17746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17732:17739 compcert.lib.Integers Make unsigned def
R17741:17743 compcert.lib.Integers Make one def
R17766:17768 compcert.lib.Integers Make one def
R17779:17794 compcert.lib.Integers Make unsigned_repr_eq thm
R17779:17794 compcert.lib.Integers Make unsigned_repr_eq thm
R17779:17794 compcert.lib.Integers Make unsigned_repr_eq thm
R17803:17813 Coq.ZArith.BinInt Z mod_small thm
R17803:17813 Coq.ZArith.BinInt Z mod_small thm
R17837:17843 compcert.lib.Integers Make modulus def
R17854:17861 compcert.lib.Integers Make wordsize def
R17869:17869 Coq.Init.Datatypes <> S constr
R17871:17883 Coq.Init.Nat <> pred def
R17885:17892 compcert.lib.Integers Make wordsize def
R17854:17861 compcert.lib.Integers Make wordsize def
R17869:17869 Coq.Init.Datatypes <> S constr
R17871:17883 Coq.Init.Nat <> pred def
R17885:17892 compcert.lib.Integers Make wordsize def
R17907:17921 Coq.ZArith.Zpower <> two_power_nat_S thm
R17907:17921 Coq.ZArith.Zpower <> two_power_nat_S thm
R17907:17921 Coq.ZArith.Zpower <> two_power_nat_S thm
R17936:17952 compcert.lib.Coqlib <> two_power_nat_pos thm
R17955:17967 Coq.Init.Nat <> pred def
R17969:17976 compcert.lib.Integers Make wordsize def
R17936:17952 compcert.lib.Coqlib <> two_power_nat_pos thm
R17955:17967 Coq.Init.Nat <> pred def
R17969:17976 compcert.lib.Integers Make wordsize def
R18001:18012 compcert.lib.Integers Make wordsize_pos thm
R18001:18012 compcert.lib.Integers Make wordsize_pos thm
R18022:18030 compcert.lib.Integers Make zwordsize def
prf 18052:18064 Make unsigned_mone
R18080:18082 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18067:18074 compcert.lib.Integers Make unsigned def
R18076:18079 compcert.lib.Integers Make mone def
R18090:18092 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18083:18089 compcert.lib.Integers Make modulus def
R18112:18115 compcert.lib.Integers Make mone def
R18126:18141 compcert.lib.Integers Make unsigned_repr_eq thm
R18126:18141 compcert.lib.Integers Make unsigned_repr_eq thm
R18126:18141 compcert.lib.Integers Make unsigned_repr_eq thm
R18165:18165 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18177:18180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18173:18175 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18166:18172 compcert.lib.Integers Make modulus def
R18181:18181 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18184:18187 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18188:18194 compcert.lib.Integers Make modulus def
R18165:18165 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18177:18180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18173:18175 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18166:18172 compcert.lib.Integers Make modulus def
R18181:18181 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18184:18187 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R18188:18194 compcert.lib.Integers Make modulus def
R18208:18222 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R18208:18222 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R18208:18222 Coq.ZArith.Zdiv <> Z_mod_plus_full thm
R18231:18241 Coq.ZArith.BinInt Z mod_small thm
R18231:18241 Coq.ZArith.BinInt Z mod_small thm
R18257:18267 compcert.lib.Integers Make modulus_pos thm
R18257:18267 compcert.lib.Integers Make modulus_pos thm
prf 18294:18304 Make signed_zero
R18318:18320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18307:18312 compcert.lib.Integers Make signed def
R18314:18317 compcert.lib.Integers Make zero def
R18340:18345 compcert.lib.Integers Make signed def
R18356:18368 compcert.lib.Integers Make unsigned_zero thm
R18356:18368 compcert.lib.Integers Make unsigned_zero thm
R18356:18368 compcert.lib.Integers Make unsigned_zero thm
R18377:18384 compcert.lib.Coqlib <> zlt_true thm
R18377:18384 compcert.lib.Coqlib <> zlt_true thm
R18398:18413 compcert.lib.Integers Make half_modulus_pos thm
R18398:18413 compcert.lib.Integers Make half_modulus_pos thm
prf 18435:18444 Make signed_one
R18460:18463 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18474:18476 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18464:18469 compcert.lib.Integers Make signed def
R18471:18473 compcert.lib.Integers Make one def
R18456:18458 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R18447:18455 compcert.lib.Integers Make zwordsize def
R18504:18509 compcert.lib.Integers Make signed def
R18520:18531 compcert.lib.Integers Make unsigned_one thm
R18520:18531 compcert.lib.Integers Make unsigned_one thm
R18520:18531 compcert.lib.Integers Make unsigned_one thm
R18540:18547 compcert.lib.Coqlib <> zlt_true thm
R18540:18547 compcert.lib.Coqlib <> zlt_true thm
R18568:18572 Coq.ZArith.Zpower <> two_p def
R18568:18572 Coq.ZArith.Zpower <> two_p def
R18586:18603 compcert.lib.Integers Make half_modulus_power thm
R18586:18603 compcert.lib.Integers Make half_modulus_power thm
R18586:18603 compcert.lib.Integers Make half_modulus_power thm
R18612:18632 compcert.lib.Coqlib <> two_p_monotone_strict thm
R18612:18632 compcert.lib.Coqlib <> two_p_monotone_strict thm
prf 18655:18665 Make signed_mone
R18679:18681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18668:18673 compcert.lib.Integers Make signed def
R18675:18678 compcert.lib.Integers Make mone def
R18702:18707 compcert.lib.Integers Make signed def
R18718:18730 compcert.lib.Integers Make unsigned_mone thm
R18718:18730 compcert.lib.Integers Make unsigned_mone thm
R18718:18730 compcert.lib.Integers Make unsigned_mone thm
R18743:18751 compcert.lib.Coqlib <> zlt_false thm
R18743:18751 compcert.lib.Coqlib <> zlt_false thm
R18743:18751 compcert.lib.Coqlib <> zlt_false thm
R18743:18751 compcert.lib.Coqlib <> zlt_false thm
R18769:18788 compcert.lib.Integers Make half_modulus_modulus thm
R18769:18788 compcert.lib.Integers Make half_modulus_modulus thm
R18769:18788 compcert.lib.Integers Make half_modulus_modulus thm
R18802:18817 compcert.lib.Integers Make half_modulus_pos thm
R18802:18817 compcert.lib.Integers Make half_modulus_pos thm
prf 18839:18850 Make one_not_zero
R18856:18859 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18853:18855 compcert.lib.Integers Make one def
R18860:18863 compcert.lib.Integers Make zero def
R18895:18898 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18883:18890 compcert.lib.Integers Make unsigned def
R18892:18894 compcert.lib.Integers Make one def
R18899:18906 compcert.lib.Integers Make unsigned def
R18908:18911 compcert.lib.Integers Make zero def
R18895:18898 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R18883:18890 compcert.lib.Integers Make unsigned def
R18892:18894 compcert.lib.Integers Make one def
R18899:18906 compcert.lib.Integers Make unsigned def
R18908:18911 compcert.lib.Integers Make zero def
R18925:18936 compcert.lib.Integers Make unsigned_one thm
R18947:18959 compcert.lib.Integers Make unsigned_zero thm
R18925:18936 compcert.lib.Integers Make unsigned_one thm
R18925:18936 compcert.lib.Integers Make unsigned_one thm
R18947:18959 compcert.lib.Integers Make unsigned_zero thm
R18947:18959 compcert.lib.Integers Make unsigned_zero thm
prf 19002:19023 Make unsigned_repr_wordsize
R19046:19048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19028:19035 compcert.lib.Integers Make unsigned def
R19037:19045 compcert.lib.Integers Make iwordsize def
R19049:19057 compcert.lib.Integers Make zwordsize def
R19076:19084 compcert.lib.Integers Make iwordsize def
R19095:19110 compcert.lib.Integers Make unsigned_repr_eq thm
R19095:19110 compcert.lib.Integers Make unsigned_repr_eq thm
R19095:19110 compcert.lib.Integers Make unsigned_repr_eq thm
R19119:19129 Coq.ZArith.BinInt Z mod_small thm
R19119:19129 Coq.ZArith.BinInt Z mod_small thm
R19145:19156 compcert.lib.Integers Make wordsize_pos thm
R19158:19178 compcert.lib.Integers Make wordsize_max_unsigned thm
R19188:19199 compcert.lib.Integers Make max_unsigned def
R19145:19156 compcert.lib.Integers Make wordsize_pos thm
R19158:19178 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 19255:19260 Make eq_sym
binder 19272:19272 <> x:180
binder 19274:19274 <> y:181
R19283:19285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19277:19278 compcert.lib.Integers Make eq def
R19282:19282 compcert.lib.Integers <> y:181 var
R19280:19280 compcert.lib.Integers <> x:180 var
R19286:19287 compcert.lib.Integers Make eq def
R19291:19291 compcert.lib.Integers <> x:180 var
R19289:19289 compcert.lib.Integers <> y:181 var
R19318:19319 compcert.lib.Integers Make eq def
R19328:19330 compcert.lib.Coqlib <> zeq def
R19346:19353 compcert.lib.Integers Make unsigned def
R19333:19340 compcert.lib.Integers Make unsigned def
R19328:19330 compcert.lib.Coqlib <> zeq def
R19346:19353 compcert.lib.Integers Make unsigned def
R19333:19340 compcert.lib.Integers Make unsigned def
R19388:19395 compcert.lib.Coqlib <> zeq_true thm
R19388:19395 compcert.lib.Coqlib <> zeq_true thm
R19388:19395 compcert.lib.Coqlib <> zeq_true thm
R19414:19422 compcert.lib.Coqlib <> zeq_false thm
R19414:19422 compcert.lib.Coqlib <> zeq_false thm
R19414:19422 compcert.lib.Coqlib <> zeq_false thm
R19414:19422 compcert.lib.Coqlib <> zeq_false thm
prf 19451:19457 Make eq_spec
R19473:19475 compcert.lib.Integers Make int rec
binder 19468:19468 <> x:182
binder 19470:19470 <> y:183
R19482:19483 compcert.lib.Integers Make eq def
R19487:19487 compcert.lib.Integers <> y:183 var
R19485:19485 compcert.lib.Integers <> x:182 var
R19506:19509 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19505:19505 compcert.lib.Integers <> x:182 var
R19510:19510 compcert.lib.Integers <> y:183 var
R19495:19497 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19494:19494 compcert.lib.Integers <> x:182 var
R19498:19498 compcert.lib.Integers <> y:183 var
R19537:19538 compcert.lib.Integers Make eq def
R19547:19552 compcert.lib.Integers Make eq_dec thm
R19547:19552 compcert.lib.Integers Make eq_dec thm
R19586:19593 compcert.lib.Coqlib <> zeq_true thm
R19586:19593 compcert.lib.Coqlib <> zeq_true thm
R19586:19593 compcert.lib.Coqlib <> zeq_true thm
R19612:19620 compcert.lib.Coqlib <> zeq_false thm
R19612:19620 compcert.lib.Coqlib <> zeq_false thm
R19612:19620 compcert.lib.Coqlib <> zeq_false thm
R19612:19620 compcert.lib.Coqlib <> zeq_false thm
R19690:19697 compcert.lib.Integers Make mkint_eq thm
R19690:19697 compcert.lib.Integers Make mkint_eq thm
prf 19720:19726 Make eq_true
binder 19736:19736 <> x:184
R19745:19747 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19739:19740 compcert.lib.Integers Make eq def
R19744:19744 compcert.lib.Integers <> x:184 var
R19742:19742 compcert.lib.Integers <> x:184 var
R19748:19751 Coq.Init.Datatypes <> true constr
R19783:19789 compcert.lib.Integers Make eq_spec thm
R19803:19804 compcert.lib.Integers Make eq def
R19783:19789 compcert.lib.Integers Make eq_spec thm
R19803:19804 compcert.lib.Integers Make eq def
prf 19846:19853 Make eq_false
binder 19863:19863 <> x:185
binder 19865:19865 <> y:186
R19874:19877 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19884:19886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19878:19879 compcert.lib.Integers Make eq def
R19883:19883 compcert.lib.Integers <> y:186 var
R19881:19881 compcert.lib.Integers <> x:185 var
R19887:19891 Coq.Init.Datatypes <> false constr
R19869:19872 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19868:19868 compcert.lib.Integers <> x:185 var
R19873:19873 compcert.lib.Integers <> y:186 var
R19923:19929 compcert.lib.Integers Make eq_spec thm
R19943:19944 compcert.lib.Integers Make eq def
R19923:19929 compcert.lib.Integers Make eq_spec thm
R19943:19944 compcert.lib.Integers Make eq def
prf 19986:19995 Make same_if_eq
binder 20005:20005 <> x:187
binder 20007:20007 <> y:188
R20023:20026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20028:20030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20027:20027 compcert.lib.Integers <> x:187 var
R20031:20031 compcert.lib.Integers <> y:188 var
R20016:20018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20010:20011 compcert.lib.Integers Make eq def
R20015:20015 compcert.lib.Integers <> y:188 var
R20013:20013 compcert.lib.Integers <> x:187 var
R20019:20022 Coq.Init.Datatypes <> true constr
R20063:20069 compcert.lib.Integers Make eq_spec thm
R20063:20069 compcert.lib.Integers Make eq_spec thm
prf 20108:20116 Make eq_signed
binder 20128:20128 <> x:189
binder 20130:20130 <> y:190
R20139:20141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20133:20134 compcert.lib.Integers Make eq def
R20138:20138 compcert.lib.Integers <> y:190 var
R20136:20136 compcert.lib.Integers <> x:189 var
R20145:20147 compcert.lib.Coqlib <> zeq def
R20161:20166 compcert.lib.Integers Make signed def
R20168:20168 compcert.lib.Integers <> y:190 var
R20150:20155 compcert.lib.Integers Make signed def
R20157:20157 compcert.lib.Integers <> x:189 var
R20186:20190 Coq.Init.Datatypes <> false constr
R20176:20179 Coq.Init.Datatypes <> true constr
R20219:20220 compcert.lib.Integers Make eq def
R20222:20228 compcert.lib.Integers Make eq_spec thm
R20254:20261 compcert.lib.Coqlib <> zeq_true thm
R20254:20261 compcert.lib.Coqlib <> zeq_true thm
R20254:20261 compcert.lib.Coqlib <> zeq_true thm
R20282:20284 compcert.lib.Coqlib <> zeq def
R20298:20303 compcert.lib.Integers Make signed def
R20287:20292 compcert.lib.Integers Make signed def
R20282:20284 compcert.lib.Coqlib <> zeq def
R20298:20303 compcert.lib.Integers Make signed def
R20287:20292 compcert.lib.Integers Make signed def
R20338:20348 compcert.lib.Integers Make repr_signed thm
R20338:20348 compcert.lib.Integers Make repr_signed thm
R20338:20348 compcert.lib.Integers Make repr_signed thm
R20366:20376 compcert.lib.Integers Make repr_signed thm
R20366:20376 compcert.lib.Integers Make repr_signed thm
R20366:20376 compcert.lib.Integers Make repr_signed thm
prf 20442:20453 Make add_unsigned
binder 20463:20463 <> x:191
binder 20465:20465 <> y:192
R20475:20477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20468:20470 compcert.lib.Integers Make add def
R20474:20474 compcert.lib.Integers <> y:192 var
R20472:20472 compcert.lib.Integers <> x:191 var
R20478:20481 compcert.lib.Integers Make repr def
R20494:20496 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20484:20491 compcert.lib.Integers Make unsigned def
R20493:20493 compcert.lib.Integers <> x:191 var
R20497:20504 compcert.lib.Integers Make unsigned def
R20506:20506 compcert.lib.Integers <> y:192 var
prf 20552:20561 Make add_signed
binder 20571:20571 <> x:193
binder 20573:20573 <> y:194
R20583:20585 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20576:20578 compcert.lib.Integers Make add def
R20582:20582 compcert.lib.Integers <> y:194 var
R20580:20580 compcert.lib.Integers <> x:193 var
R20586:20589 compcert.lib.Integers Make repr def
R20600:20602 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20592:20597 compcert.lib.Integers Make signed def
R20599:20599 compcert.lib.Integers <> x:193 var
R20603:20608 compcert.lib.Integers Make signed def
R20610:20610 compcert.lib.Integers <> y:194 var
R20639:20650 compcert.lib.Integers Make add_unsigned thm
R20639:20650 compcert.lib.Integers Make add_unsigned thm
R20639:20650 compcert.lib.Integers Make add_unsigned thm
R20659:20670 compcert.lib.Integers Make eqm_samerepr thm
R20659:20670 compcert.lib.Integers Make eqm_samerepr thm
R20681:20687 compcert.lib.Integers Make eqm_add thm
R20696:20702 compcert.lib.Integers Make eqm_sym thm
R20711:20729 compcert.lib.Integers Make eqm_signed_unsigned thm
R20681:20687 compcert.lib.Integers Make eqm_add thm
R20696:20702 compcert.lib.Integers Make eqm_sym thm
R20696:20702 compcert.lib.Integers Make eqm_sym thm
R20711:20729 compcert.lib.Integers Make eqm_signed_unsigned thm
R20711:20729 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 20746:20755 Make add_commut
binder 20765:20765 <> x:195
binder 20767:20767 <> y:196
R20777:20779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20770:20772 compcert.lib.Integers Make add def
R20776:20776 compcert.lib.Integers <> y:196 var
R20774:20774 compcert.lib.Integers <> x:195 var
R20780:20782 compcert.lib.Integers Make add def
R20786:20786 compcert.lib.Integers <> x:195 var
R20784:20784 compcert.lib.Integers <> y:196 var
R20811:20813 compcert.lib.Integers Make add def
prf 20842:20849 Make add_zero
binder 20859:20859 <> x:197
R20872:20874 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20862:20864 compcert.lib.Integers Make add def
R20868:20871 compcert.lib.Integers Make zero def
R20866:20866 compcert.lib.Integers <> x:197 var
R20875:20875 compcert.lib.Integers <> x:197 var
R20902:20904 compcert.lib.Integers Make add def
R20915:20927 compcert.lib.Integers Make unsigned_zero thm
R20915:20927 compcert.lib.Integers Make unsigned_zero thm
R20915:20927 compcert.lib.Integers Make unsigned_zero thm
R20940:20948 Coq.ZArith.BinInt Z add_0_r thm
R20940:20948 Coq.ZArith.BinInt Z add_0_r thm
R20940:20948 Coq.ZArith.BinInt Z add_0_r thm
R20957:20969 compcert.lib.Integers Make repr_unsigned thm
R20957:20969 compcert.lib.Integers Make repr_unsigned thm
prf 20986:20995 Make add_zero_l
binder 21005:21005 <> x:198
R21018:21020 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21008:21010 compcert.lib.Integers Make add def
R21017:21017 compcert.lib.Integers <> x:198 var
R21012:21015 compcert.lib.Integers Make zero def
R21021:21021 compcert.lib.Integers <> x:198 var
R21049:21058 compcert.lib.Integers Make add_commut thm
R21049:21058 compcert.lib.Integers Make add_commut thm
R21049:21058 compcert.lib.Integers Make add_commut thm
R21067:21074 compcert.lib.Integers Make add_zero thm
R21067:21074 compcert.lib.Integers Make add_zero thm
prf 21091:21099 Make add_assoc
binder 21109:21109 <> x:199
binder 21111:21111 <> y:200
binder 21113:21113 <> z:201
R21131:21133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21116:21118 compcert.lib.Integers Make add def
R21130:21130 compcert.lib.Integers <> z:201 var
R21121:21123 compcert.lib.Integers Make add def
R21127:21127 compcert.lib.Integers <> y:200 var
R21125:21125 compcert.lib.Integers <> x:199 var
R21134:21136 compcert.lib.Integers Make add def
R21141:21143 compcert.lib.Integers Make add def
R21147:21147 compcert.lib.Integers <> z:201 var
R21145:21145 compcert.lib.Integers <> y:200 var
R21138:21138 compcert.lib.Integers <> x:199 var
R21175:21177 compcert.lib.Integers Make add def
R21193:21200 compcert.lib.Integers Make unsigned def
R21193:21200 compcert.lib.Integers Make unsigned def
R21219:21226 compcert.lib.Integers Make unsigned def
R21219:21226 compcert.lib.Integers Make unsigned def
R21245:21252 compcert.lib.Integers Make unsigned def
R21245:21252 compcert.lib.Integers Make unsigned def
R21266:21277 compcert.lib.Integers Make eqm_samerepr thm
R21266:21277 compcert.lib.Integers Make eqm_samerepr thm
R21304:21304 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21312:21315 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21307:21309 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21288:21296 compcert.lib.Integers Make eqm_trans thm
R21304:21304 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21312:21315 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21307:21309 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21288:21296 compcert.lib.Integers Make eqm_trans thm
R21352:21362 Coq.ZArith.BinInt Z add_assoc thm
R21352:21362 Coq.ZArith.BinInt Z add_assoc thm
R21352:21362 Coq.ZArith.BinInt Z add_assoc thm
prf 21395:21404 Make add_permut
binder 21414:21414 <> x:202
binder 21416:21416 <> y:203
binder 21418:21418 <> z:204
R21436:21438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21421:21423 compcert.lib.Integers Make add def
R21428:21430 compcert.lib.Integers Make add def
R21434:21434 compcert.lib.Integers <> z:204 var
R21432:21432 compcert.lib.Integers <> y:203 var
R21425:21425 compcert.lib.Integers <> x:202 var
R21439:21441 compcert.lib.Integers Make add def
R21446:21448 compcert.lib.Integers Make add def
R21452:21452 compcert.lib.Integers <> z:204 var
R21450:21450 compcert.lib.Integers <> x:202 var
R21443:21443 compcert.lib.Integers <> y:203 var
R21482:21491 compcert.lib.Integers Make add_commut thm
R21482:21491 compcert.lib.Integers Make add_commut thm
R21482:21491 compcert.lib.Integers Make add_commut thm
R21510:21518 compcert.lib.Integers Make add_assoc thm
R21510:21518 compcert.lib.Integers Make add_assoc thm
R21510:21518 compcert.lib.Integers Make add_assoc thm
R21527:21536 compcert.lib.Integers Make add_commut thm
R21527:21536 compcert.lib.Integers Make add_commut thm
prf 21553:21564 Make add_neg_zero
binder 21574:21574 <> x:205
R21590:21592 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21577:21579 compcert.lib.Integers Make add def
R21584:21586 compcert.lib.Integers Make neg def
R21588:21588 compcert.lib.Integers <> x:205 var
R21581:21581 compcert.lib.Integers <> x:205 var
R21593:21596 compcert.lib.Integers Make zero def
R21623:21625 compcert.lib.Integers Make add def
R21628:21630 compcert.lib.Integers Make neg def
R21633:21636 compcert.lib.Integers Make zero def
R21645:21656 compcert.lib.Integers Make eqm_samerepr thm
R21645:21656 compcert.lib.Integers Make eqm_samerepr thm
R21687:21690 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21705:21705 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21677:21684 compcert.lib.Integers Make unsigned def
R21691:21693 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21704:21704 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21694:21701 compcert.lib.Integers Make unsigned def
R21687:21690 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21705:21705 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21677:21684 compcert.lib.Integers Make unsigned def
R21691:21693 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21704:21704 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R21694:21701 compcert.lib.Integers Make unsigned def
prf 21746:21763 Make unsigned_add_carry
binder 21775:21775 <> x:206
binder 21777:21777 <> y:207
R21800:21802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21782:21789 compcert.lib.Integers Make unsigned def
R21792:21794 compcert.lib.Integers Make add def
R21798:21798 compcert.lib.Integers <> y:207 var
R21796:21796 compcert.lib.Integers <> x:206 var
R21826:21828 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21813:21815 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21803:21810 compcert.lib.Integers Make unsigned def
R21812:21812 compcert.lib.Integers <> x:206 var
R21816:21823 compcert.lib.Integers Make unsigned def
R21825:21825 compcert.lib.Integers <> y:207 var
R21858:21860 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R21829:21836 compcert.lib.Integers Make unsigned def
R21839:21847 compcert.lib.Integers Make add_carry def
R21853:21856 compcert.lib.Integers Make zero def
R21851:21851 compcert.lib.Integers <> y:207 var
R21849:21849 compcert.lib.Integers <> x:206 var
R21861:21867 compcert.lib.Integers Make modulus def
R21896:21898 compcert.lib.Integers Make add def
R21901:21909 compcert.lib.Integers Make add_carry def
R21920:21932 compcert.lib.Integers Make unsigned_zero thm
R21920:21932 compcert.lib.Integers Make unsigned_zero thm
R21920:21932 compcert.lib.Integers Make unsigned_zero thm
R21943:21951 Coq.ZArith.BinInt Z add_0_r thm
R21943:21951 Coq.ZArith.BinInt Z add_0_r thm
R21943:21951 Coq.ZArith.BinInt Z add_0_r thm
R21964:21979 compcert.lib.Integers Make unsigned_repr_eq thm
R21964:21979 compcert.lib.Integers Make unsigned_repr_eq thm
R21964:21979 compcert.lib.Integers Make unsigned_repr_eq thm
R21996:22009 compcert.lib.Integers Make unsigned_range thm
R22015:22028 compcert.lib.Integers Make unsigned_range thm
R21996:22009 compcert.lib.Integers Make unsigned_range thm
R22015:22028 compcert.lib.Integers Make unsigned_range thm
R22054:22056 compcert.lib.Coqlib <> zlt def
R22084:22090 compcert.lib.Integers Make modulus def
R22069:22071 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22059:22066 compcert.lib.Integers Make unsigned def
R22072:22079 compcert.lib.Integers Make unsigned def
R22054:22056 compcert.lib.Coqlib <> zlt def
R22084:22090 compcert.lib.Integers Make modulus def
R22069:22071 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22059:22066 compcert.lib.Integers Make unsigned def
R22072:22079 compcert.lib.Integers Make unsigned def
R22104:22116 compcert.lib.Integers Make unsigned_zero thm
R22104:22116 compcert.lib.Integers Make unsigned_zero thm
R22104:22116 compcert.lib.Integers Make unsigned_zero thm
R22125:22135 compcert.lib.Coqlib <> Zmod_unique thm
R22125:22135 compcert.lib.Coqlib <> Zmod_unique thm
R22165:22176 compcert.lib.Integers Make unsigned_one thm
R22165:22176 compcert.lib.Integers Make unsigned_one thm
R22165:22176 compcert.lib.Integers Make unsigned_one thm
R22185:22195 compcert.lib.Coqlib <> Zmod_unique thm
R22185:22195 compcert.lib.Coqlib <> Zmod_unique thm
prf 22231:22249 Make unsigned_add_either
binder 22261:22261 <> x:208
binder 22263:22263 <> y:209
R22312:22317 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22286:22288 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22268:22275 compcert.lib.Integers Make unsigned def
R22278:22280 compcert.lib.Integers Make add def
R22284:22284 compcert.lib.Integers <> y:209 var
R22282:22282 compcert.lib.Integers <> x:208 var
R22299:22301 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22289:22296 compcert.lib.Integers Make unsigned def
R22298:22298 compcert.lib.Integers <> x:208 var
R22302:22309 compcert.lib.Integers Make unsigned def
R22311:22311 compcert.lib.Integers <> y:209 var
R22336:22338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22318:22325 compcert.lib.Integers Make unsigned def
R22328:22330 compcert.lib.Integers Make add def
R22334:22334 compcert.lib.Integers <> y:209 var
R22332:22332 compcert.lib.Integers <> x:208 var
R22362:22364 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R22349:22351 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22339:22346 compcert.lib.Integers Make unsigned def
R22348:22348 compcert.lib.Integers <> x:208 var
R22352:22359 compcert.lib.Integers Make unsigned def
R22361:22361 compcert.lib.Integers <> y:209 var
R22365:22371 compcert.lib.Integers Make modulus def
R22399:22416 compcert.lib.Integers Make unsigned_add_carry thm
R22399:22416 compcert.lib.Integers Make unsigned_add_carry thm
R22399:22416 compcert.lib.Integers Make unsigned_add_carry thm
R22426:22434 compcert.lib.Integers Make add_carry def
R22447:22459 compcert.lib.Integers Make unsigned_zero thm
R22447:22459 compcert.lib.Integers Make unsigned_zero thm
R22447:22459 compcert.lib.Integers Make unsigned_zero thm
R22470:22478 Coq.ZArith.BinInt Z add_0_r thm
R22470:22478 Coq.ZArith.BinInt Z add_0_r thm
R22470:22478 Coq.ZArith.BinInt Z add_0_r thm
R22493:22495 compcert.lib.Coqlib <> zlt def
R22523:22529 compcert.lib.Integers Make modulus def
R22508:22510 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22498:22505 compcert.lib.Integers Make unsigned def
R22511:22518 compcert.lib.Integers Make unsigned def
R22493:22495 compcert.lib.Coqlib <> zlt def
R22523:22529 compcert.lib.Integers Make modulus def
R22508:22510 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R22498:22505 compcert.lib.Integers Make unsigned def
R22511:22518 compcert.lib.Integers Make unsigned def
R22543:22555 compcert.lib.Integers Make unsigned_zero thm
R22543:22555 compcert.lib.Integers Make unsigned_zero thm
R22543:22555 compcert.lib.Integers Make unsigned_zero thm
R22579:22590 compcert.lib.Integers Make unsigned_one thm
R22579:22590 compcert.lib.Integers Make unsigned_one thm
R22579:22590 compcert.lib.Integers Make unsigned_one thm
prf 22653:22660 Make neg_repr
binder 22670:22670 <> z:210
R22685:22687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22673:22675 compcert.lib.Integers Make neg def
R22678:22681 compcert.lib.Integers Make repr def
R22683:22683 compcert.lib.Integers <> z:210 var
R22688:22691 compcert.lib.Integers Make repr def
R22694:22694 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R22695:22695 compcert.lib.Integers <> z:210 var
R22723:22725 compcert.lib.Integers Make neg def
R22734:22745 compcert.lib.Integers Make eqm_samerepr thm
R22734:22745 compcert.lib.Integers Make eqm_samerepr thm
prf 22778:22785 Make neg_zero
R22796:22798 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22788:22790 compcert.lib.Integers Make neg def
R22792:22795 compcert.lib.Integers Make zero def
R22799:22802 compcert.lib.Integers Make zero def
R22821:22823 compcert.lib.Integers Make neg def
R22834:22846 compcert.lib.Integers Make unsigned_zero thm
R22834:22846 compcert.lib.Integers Make unsigned_zero thm
R22834:22846 compcert.lib.Integers Make unsigned_zero thm
prf 22869:22882 Make neg_involutive
binder 22892:22892 <> x:211
R22906:22908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22895:22897 compcert.lib.Integers Make neg def
R22900:22902 compcert.lib.Integers Make neg def
R22904:22904 compcert.lib.Integers <> x:211 var
R22909:22909 compcert.lib.Integers <> x:211 var
R22936:22938 compcert.lib.Integers Make neg def
R22949:22959 compcert.lib.Integers Make eqm_repr_eq thm
R22949:22959 compcert.lib.Integers Make eqm_repr_eq thm
R22969:22977 compcert.lib.Integers Make eqm_trans thm
R22969:22977 compcert.lib.Integers Make eqm_trans thm
R22986:22992 compcert.lib.Integers Make eqm_neg thm
R22986:22992 compcert.lib.Integers Make eqm_neg thm
R23003:23021 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R23003:23021 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R23030:23037 compcert.lib.Integers Make eqm_refl thm
R23030:23037 compcert.lib.Integers Make eqm_refl thm
R23046:23054 compcert.lib.Integers Make eqm_refl2 thm
R23046:23054 compcert.lib.Integers Make eqm_refl2 thm
prf 23076:23088 Make neg_add_distr
binder 23098:23098 <> x:212
binder 23100:23100 <> y:213
R23115:23117 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23103:23105 compcert.lib.Integers Make neg def
R23107:23109 compcert.lib.Integers Make add def
R23113:23113 compcert.lib.Integers <> y:213 var
R23111:23111 compcert.lib.Integers <> x:212 var
R23118:23120 compcert.lib.Integers Make add def
R23131:23133 compcert.lib.Integers Make neg def
R23135:23135 compcert.lib.Integers <> y:213 var
R23123:23125 compcert.lib.Integers Make neg def
R23127:23127 compcert.lib.Integers <> x:212 var
R23163:23165 compcert.lib.Integers Make neg def
R23168:23170 compcert.lib.Integers Make add def
R23179:23190 compcert.lib.Integers Make eqm_samerepr thm
R23179:23190 compcert.lib.Integers Make eqm_samerepr thm
R23217:23219 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23243:23243 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23230:23232 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23220:23227 compcert.lib.Integers Make unsigned def
R23233:23240 compcert.lib.Integers Make unsigned def
R23201:23209 compcert.lib.Integers Make eqm_trans thm
R23217:23219 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23243:23243 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23230:23232 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23220:23227 compcert.lib.Integers Make unsigned def
R23233:23240 compcert.lib.Integers Make unsigned def
R23201:23209 compcert.lib.Integers Make eqm_trans thm
R23276:23278 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23302:23302 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23289:23291 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23279:23286 compcert.lib.Integers Make unsigned def
R23292:23299 compcert.lib.Integers Make unsigned def
R23316:23316 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23329:23333 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23346:23346 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23317:23318 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23319:23326 compcert.lib.Integers Make unsigned def
R23334:23335 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23336:23343 compcert.lib.Integers Make unsigned def
R23276:23278 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23302:23302 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23289:23291 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23279:23286 compcert.lib.Integers Make unsigned def
R23292:23299 compcert.lib.Integers Make unsigned def
R23316:23316 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23329:23333 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23346:23346 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R23317:23318 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23319:23326 compcert.lib.Integers Make unsigned def
R23334:23335 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R23336:23343 compcert.lib.Integers Make unsigned def
prf 23424:23433 Make sub_zero_l
binder 23443:23443 <> x:214
R23456:23458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23446:23448 compcert.lib.Integers Make sub def
R23452:23455 compcert.lib.Integers Make zero def
R23450:23450 compcert.lib.Integers <> x:214 var
R23459:23459 compcert.lib.Integers <> x:214 var
R23486:23488 compcert.lib.Integers Make sub def
R23499:23511 compcert.lib.Integers Make unsigned_zero thm
R23499:23511 compcert.lib.Integers Make unsigned_zero thm
R23499:23511 compcert.lib.Integers Make unsigned_zero thm
R23535:23537 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23525:23532 compcert.lib.Integers Make unsigned def
R23547:23554 compcert.lib.Integers Make unsigned def
R23535:23537 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R23525:23532 compcert.lib.Integers Make unsigned def
R23547:23554 compcert.lib.Integers Make unsigned def
R23573:23585 compcert.lib.Integers Make repr_unsigned thm
R23573:23585 compcert.lib.Integers Make repr_unsigned thm
prf 23602:23611 Make sub_zero_r
binder 23621:23621 <> x:215
R23634:23636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23624:23626 compcert.lib.Integers Make sub def
R23633:23633 compcert.lib.Integers <> x:215 var
R23628:23631 compcert.lib.Integers Make zero def
R23637:23639 compcert.lib.Integers Make neg def
R23641:23641 compcert.lib.Integers <> x:215 var
R23668:23670 compcert.lib.Integers Make sub def
R23673:23675 compcert.lib.Integers Make neg def
R23686:23698 compcert.lib.Integers Make unsigned_zero thm
R23686:23698 compcert.lib.Integers Make unsigned_zero thm
R23686:23698 compcert.lib.Integers Make unsigned_zero thm
prf 23721:23731 Make sub_add_opp
binder 23741:23741 <> x:216
binder 23743:23743 <> y:217
R23753:23755 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23746:23748 compcert.lib.Integers Make sub def
R23752:23752 compcert.lib.Integers <> y:217 var
R23750:23750 compcert.lib.Integers <> x:216 var
R23756:23758 compcert.lib.Integers Make add def
R23763:23765 compcert.lib.Integers Make neg def
R23767:23767 compcert.lib.Integers <> y:217 var
R23760:23760 compcert.lib.Integers <> x:216 var
R23795:23797 compcert.lib.Integers Make sub def
R23800:23802 compcert.lib.Integers Make add def
R23805:23807 compcert.lib.Integers Make neg def
R23816:23827 compcert.lib.Integers Make eqm_samerepr thm
R23816:23827 compcert.lib.Integers Make eqm_samerepr thm
R23838:23844 compcert.lib.Integers Make eqm_add thm
R23838:23844 compcert.lib.Integers Make eqm_add thm
prf 23877:23884 Make sub_idem
binder 23894:23894 <> x:218
R23904:23906 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23897:23899 compcert.lib.Integers Make sub def
R23903:23903 compcert.lib.Integers <> x:218 var
R23901:23901 compcert.lib.Integers <> x:218 var
R23907:23910 compcert.lib.Integers Make zero def
R23937:23939 compcert.lib.Integers Make sub def
R23949:23952 compcert.lib.Integers Make zero def
prf 23981:23989 Make sub_add_l
binder 23999:23999 <> x:219
binder 24001:24001 <> y:220
binder 24003:24003 <> z:221
R24021:24023 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24006:24008 compcert.lib.Integers Make sub def
R24020:24020 compcert.lib.Integers <> z:221 var
R24011:24013 compcert.lib.Integers Make add def
R24017:24017 compcert.lib.Integers <> y:220 var
R24015:24015 compcert.lib.Integers <> x:219 var
R24024:24026 compcert.lib.Integers Make add def
R24038:24038 compcert.lib.Integers <> y:220 var
R24029:24031 compcert.lib.Integers Make sub def
R24035:24035 compcert.lib.Integers <> z:221 var
R24033:24033 compcert.lib.Integers <> x:219 var
R24073:24083 compcert.lib.Integers Make sub_add_opp thm
R24073:24083 compcert.lib.Integers Make sub_add_opp thm
R24073:24083 compcert.lib.Integers Make sub_add_opp thm
R24073:24083 compcert.lib.Integers Make sub_add_opp thm
R24073:24083 compcert.lib.Integers Make sub_add_opp thm
R24073:24083 compcert.lib.Integers Make sub_add_opp thm
R24103:24111 compcert.lib.Integers Make add_assoc thm
R24103:24111 compcert.lib.Integers Make add_assoc thm
R24103:24111 compcert.lib.Integers Make add_assoc thm
R24103:24111 compcert.lib.Integers Make add_assoc thm
R24103:24111 compcert.lib.Integers Make add_assoc thm
R24103:24111 compcert.lib.Integers Make add_assoc thm
R24127:24136 compcert.lib.Integers Make add_commut thm
R24127:24136 compcert.lib.Integers Make add_commut thm
prf 24153:24161 Make sub_add_r
binder 24171:24171 <> x:222
binder 24173:24173 <> y:223
binder 24175:24175 <> z:224
R24193:24195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24178:24180 compcert.lib.Integers Make sub def
R24185:24187 compcert.lib.Integers Make add def
R24191:24191 compcert.lib.Integers <> z:224 var
R24189:24189 compcert.lib.Integers <> y:223 var
R24182:24182 compcert.lib.Integers <> x:222 var
R24196:24198 compcert.lib.Integers Make add def
R24211:24213 compcert.lib.Integers Make neg def
R24215:24215 compcert.lib.Integers <> y:223 var
R24201:24203 compcert.lib.Integers Make sub def
R24207:24207 compcert.lib.Integers <> z:224 var
R24205:24205 compcert.lib.Integers <> x:222 var
R24251:24261 compcert.lib.Integers Make sub_add_opp thm
R24251:24261 compcert.lib.Integers Make sub_add_opp thm
R24251:24261 compcert.lib.Integers Make sub_add_opp thm
R24251:24261 compcert.lib.Integers Make sub_add_opp thm
R24251:24261 compcert.lib.Integers Make sub_add_opp thm
R24251:24261 compcert.lib.Integers Make sub_add_opp thm
R24274:24286 compcert.lib.Integers Make neg_add_distr thm
R24274:24286 compcert.lib.Integers Make neg_add_distr thm
R24274:24286 compcert.lib.Integers Make neg_add_distr thm
R24297:24306 compcert.lib.Integers Make add_permut thm
R24297:24306 compcert.lib.Integers Make add_permut thm
R24297:24306 compcert.lib.Integers Make add_permut thm
R24315:24324 compcert.lib.Integers Make add_commut thm
R24315:24324 compcert.lib.Integers Make add_commut thm
prf 24341:24351 Make sub_shifted
binder 24363:24363 <> x:225
binder 24365:24365 <> y:226
binder 24367:24367 <> z:227
R24395:24397 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24372:24374 compcert.lib.Integers Make sub def
R24387:24389 compcert.lib.Integers Make add def
R24393:24393 compcert.lib.Integers <> z:227 var
R24391:24391 compcert.lib.Integers <> y:226 var
R24377:24379 compcert.lib.Integers Make add def
R24383:24383 compcert.lib.Integers <> z:227 var
R24381:24381 compcert.lib.Integers <> x:225 var
R24398:24400 compcert.lib.Integers Make sub def
R24404:24404 compcert.lib.Integers <> y:226 var
R24402:24402 compcert.lib.Integers <> x:225 var
R24432:24442 compcert.lib.Integers Make sub_add_opp thm
R24432:24442 compcert.lib.Integers Make sub_add_opp thm
R24432:24442 compcert.lib.Integers Make sub_add_opp thm
R24453:24465 compcert.lib.Integers Make neg_add_distr thm
R24453:24465 compcert.lib.Integers Make neg_add_distr thm
R24453:24465 compcert.lib.Integers Make neg_add_distr thm
R24478:24486 compcert.lib.Integers Make add_assoc thm
R24478:24486 compcert.lib.Integers Make add_assoc thm
R24478:24486 compcert.lib.Integers Make add_assoc thm
R24500:24509 compcert.lib.Integers Make add_commut thm
R24520:24522 compcert.lib.Integers Make neg def
R24512:24514 compcert.lib.Integers Make neg def
R24500:24509 compcert.lib.Integers Make add_commut thm
R24520:24522 compcert.lib.Integers Make neg def
R24512:24514 compcert.lib.Integers Make neg def
R24500:24509 compcert.lib.Integers Make add_commut thm
R24520:24522 compcert.lib.Integers Make neg def
R24512:24514 compcert.lib.Integers Make neg def
R24543:24551 compcert.lib.Integers Make add_assoc thm
R24543:24551 compcert.lib.Integers Make add_assoc thm
R24543:24551 compcert.lib.Integers Make add_assoc thm
R24565:24576 compcert.lib.Integers Make add_neg_zero thm
R24565:24576 compcert.lib.Integers Make add_neg_zero thm
R24565:24576 compcert.lib.Integers Make add_neg_zero thm
R24590:24599 compcert.lib.Integers Make add_commut thm
R24601:24604 compcert.lib.Integers Make zero def
R24590:24599 compcert.lib.Integers Make add_commut thm
R24601:24604 compcert.lib.Integers Make zero def
R24590:24599 compcert.lib.Integers Make add_commut thm
R24601:24604 compcert.lib.Integers Make zero def
R24616:24623 compcert.lib.Integers Make add_zero thm
R24616:24623 compcert.lib.Integers Make add_zero thm
R24616:24623 compcert.lib.Integers Make add_zero thm
R24644:24654 compcert.lib.Integers Make sub_add_opp thm
R24644:24654 compcert.lib.Integers Make sub_add_opp thm
prf 24671:24680 Make sub_signed
binder 24692:24692 <> x:228
binder 24694:24694 <> y:229
R24704:24706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24697:24699 compcert.lib.Integers Make sub def
R24703:24703 compcert.lib.Integers <> y:229 var
R24701:24701 compcert.lib.Integers <> x:228 var
R24707:24710 compcert.lib.Integers Make repr def
R24721:24723 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R24713:24718 compcert.lib.Integers Make signed def
R24720:24720 compcert.lib.Integers <> x:228 var
R24724:24729 compcert.lib.Integers Make signed def
R24731:24731 compcert.lib.Integers <> y:229 var
R24759:24761 compcert.lib.Integers Make sub def
R24770:24781 compcert.lib.Integers Make eqm_samerepr thm
R24770:24781 compcert.lib.Integers Make eqm_samerepr thm
R24792:24798 compcert.lib.Integers Make eqm_sub thm
R24807:24813 compcert.lib.Integers Make eqm_sym thm
R24822:24840 compcert.lib.Integers Make eqm_signed_unsigned thm
R24792:24798 compcert.lib.Integers Make eqm_sub thm
R24807:24813 compcert.lib.Integers Make eqm_sym thm
R24807:24813 compcert.lib.Integers Make eqm_sym thm
R24822:24840 compcert.lib.Integers Make eqm_signed_unsigned thm
R24822:24840 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 24857:24875 Make unsigned_sub_borrow
binder 24887:24887 <> x:230
binder 24889:24889 <> y:231
R24912:24914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24894:24901 compcert.lib.Integers Make unsigned def
R24904:24906 compcert.lib.Integers Make sub def
R24910:24910 compcert.lib.Integers <> y:231 var
R24908:24908 compcert.lib.Integers <> x:230 var
R24938:24940 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R24925:24927 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R24915:24922 compcert.lib.Integers Make unsigned def
R24924:24924 compcert.lib.Integers <> x:230 var
R24928:24935 compcert.lib.Integers Make unsigned def
R24937:24937 compcert.lib.Integers <> y:231 var
R24971:24973 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R24941:24948 compcert.lib.Integers Make unsigned def
R24951:24960 compcert.lib.Integers Make sub_borrow def
R24966:24969 compcert.lib.Integers Make zero def
R24964:24964 compcert.lib.Integers <> y:231 var
R24962:24962 compcert.lib.Integers <> x:230 var
R24974:24980 compcert.lib.Integers Make modulus def
R25009:25011 compcert.lib.Integers Make sub def
R25014:25023 compcert.lib.Integers Make sub_borrow def
R25034:25046 compcert.lib.Integers Make unsigned_zero thm
R25034:25046 compcert.lib.Integers Make unsigned_zero thm
R25034:25046 compcert.lib.Integers Make unsigned_zero thm
R25057:25065 Coq.ZArith.BinInt Z sub_0_r thm
R25057:25065 Coq.ZArith.BinInt Z sub_0_r thm
R25057:25065 Coq.ZArith.BinInt Z sub_0_r thm
R25078:25093 compcert.lib.Integers Make unsigned_repr_eq thm
R25078:25093 compcert.lib.Integers Make unsigned_repr_eq thm
R25078:25093 compcert.lib.Integers Make unsigned_repr_eq thm
R25110:25123 compcert.lib.Integers Make unsigned_range thm
R25129:25142 compcert.lib.Integers Make unsigned_range thm
R25110:25123 compcert.lib.Integers Make unsigned_range thm
R25129:25142 compcert.lib.Integers Make unsigned_range thm
R25168:25170 compcert.lib.Coqlib <> zlt def
R25183:25185 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25173:25180 compcert.lib.Integers Make unsigned def
R25186:25193 compcert.lib.Integers Make unsigned def
R25168:25170 compcert.lib.Coqlib <> zlt def
R25183:25185 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25173:25180 compcert.lib.Integers Make unsigned def
R25186:25193 compcert.lib.Integers Make unsigned def
R25212:25223 compcert.lib.Integers Make unsigned_one thm
R25212:25223 compcert.lib.Integers Make unsigned_one thm
R25212:25223 compcert.lib.Integers Make unsigned_one thm
R25232:25242 compcert.lib.Coqlib <> Zmod_unique thm
R25232:25242 compcert.lib.Coqlib <> Zmod_unique thm
R25275:25287 compcert.lib.Integers Make unsigned_zero thm
R25275:25287 compcert.lib.Integers Make unsigned_zero thm
R25275:25287 compcert.lib.Integers Make unsigned_zero thm
R25296:25306 compcert.lib.Coqlib <> Zmod_unique thm
R25296:25306 compcert.lib.Coqlib <> Zmod_unique thm
prf 25380:25389 Make mul_commut
binder 25399:25399 <> x:232
binder 25401:25401 <> y:233
R25411:25413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25404:25406 compcert.lib.Integers Make mul def
R25410:25410 compcert.lib.Integers <> y:233 var
R25408:25408 compcert.lib.Integers <> x:232 var
R25414:25416 compcert.lib.Integers Make mul def
R25420:25420 compcert.lib.Integers <> x:232 var
R25418:25418 compcert.lib.Integers <> y:233 var
R25447:25449 compcert.lib.Integers Make mul def
prf 25479:25486 Make mul_zero
binder 25496:25496 <> x:234
R25509:25511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25499:25501 compcert.lib.Integers Make mul def
R25505:25508 compcert.lib.Integers Make zero def
R25503:25503 compcert.lib.Integers <> x:234 var
R25512:25515 compcert.lib.Integers Make zero def
R25542:25544 compcert.lib.Integers Make mul def
R25555:25567 compcert.lib.Integers Make unsigned_zero thm
R25555:25567 compcert.lib.Integers Make unsigned_zero thm
R25555:25567 compcert.lib.Integers Make unsigned_zero thm
R25579:25582 compcert.lib.Integers Make zero def
prf 25612:25618 Make mul_one
binder 25628:25628 <> x:235
R25640:25642 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25631:25633 compcert.lib.Integers Make mul def
R25637:25639 compcert.lib.Integers Make one def
R25635:25635 compcert.lib.Integers <> x:235 var
R25643:25643 compcert.lib.Integers <> x:235 var
R25670:25672 compcert.lib.Integers Make mul def
R25683:25694 compcert.lib.Integers Make unsigned_one thm
R25683:25694 compcert.lib.Integers Make unsigned_one thm
R25683:25694 compcert.lib.Integers Make unsigned_one thm
R25713:25716 compcert.lib.Integers Make repr def
R25719:25726 compcert.lib.Integers Make unsigned def
R25713:25716 compcert.lib.Integers Make repr def
R25719:25726 compcert.lib.Integers Make unsigned def
R25754:25766 compcert.lib.Integers Make repr_unsigned thm
R25754:25766 compcert.lib.Integers Make repr_unsigned thm
prf 25783:25790 Make mul_mone
binder 25800:25800 <> x:236
R25813:25815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25803:25805 compcert.lib.Integers Make mul def
R25809:25812 compcert.lib.Integers Make mone def
R25807:25807 compcert.lib.Integers <> x:236 var
R25816:25818 compcert.lib.Integers Make neg def
R25820:25820 compcert.lib.Integers <> x:236 var
R25847:25849 compcert.lib.Integers Make mul def
R25852:25854 compcert.lib.Integers Make neg def
R25865:25877 compcert.lib.Integers Make unsigned_mone thm
R25865:25877 compcert.lib.Integers Make unsigned_mone thm
R25865:25877 compcert.lib.Integers Make unsigned_mone thm
R25888:25899 compcert.lib.Integers Make eqm_samerepr thm
R25888:25899 compcert.lib.Integers Make eqm_samerepr thm
R25913:25913 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R25914:25921 compcert.lib.Integers Make unsigned def
R25933:25935 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25936:25943 compcert.lib.Integers Make unsigned def
R25913:25913 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R25914:25921 compcert.lib.Integers Make unsigned def
R25933:25935 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25936:25943 compcert.lib.Integers Make unsigned def
R25977:25980 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25992:25992 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25967:25974 compcert.lib.Integers Make unsigned def
R25988:25990 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25981:25987 compcert.lib.Integers Make modulus def
R26021:26023 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R26011:26013 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26001:26008 compcert.lib.Integers Make unsigned def
R26014:26020 compcert.lib.Integers Make modulus def
R26024:26031 compcert.lib.Integers Make unsigned def
R25977:25980 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25992:25992 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R25967:25974 compcert.lib.Integers Make unsigned def
R25988:25990 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R25981:25987 compcert.lib.Integers Make modulus def
R26021:26023 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R26011:26013 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26001:26008 compcert.lib.Integers Make unsigned def
R26014:26020 compcert.lib.Integers Make modulus def
R26024:26031 compcert.lib.Integers Make unsigned def
R26053:26059 compcert.lib.Integers Make eqm_sub thm
R26053:26059 compcert.lib.Integers Make eqm_sub thm
R26070:26077 compcert.lib.Integers Make unsigned def
R26070:26077 compcert.lib.Integers Make unsigned def
R26094:26101 compcert.lib.Integers Make eqm_refl thm
R26094:26101 compcert.lib.Integers Make eqm_refl thm
prf 26118:26126 Make mul_assoc
binder 26136:26136 <> x:237
binder 26138:26138 <> y:238
binder 26140:26140 <> z:239
R26158:26160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26143:26145 compcert.lib.Integers Make mul def
R26157:26157 compcert.lib.Integers <> z:239 var
R26148:26150 compcert.lib.Integers Make mul def
R26154:26154 compcert.lib.Integers <> y:238 var
R26152:26152 compcert.lib.Integers <> x:237 var
R26161:26163 compcert.lib.Integers Make mul def
R26168:26170 compcert.lib.Integers Make mul def
R26174:26174 compcert.lib.Integers <> z:239 var
R26172:26172 compcert.lib.Integers <> y:238 var
R26165:26165 compcert.lib.Integers <> x:237 var
R26202:26204 compcert.lib.Integers Make mul def
R26220:26227 compcert.lib.Integers Make unsigned def
R26220:26227 compcert.lib.Integers Make unsigned def
R26246:26253 compcert.lib.Integers Make unsigned def
R26246:26253 compcert.lib.Integers Make unsigned def
R26272:26279 compcert.lib.Integers Make unsigned def
R26272:26279 compcert.lib.Integers Make unsigned def
R26293:26304 compcert.lib.Integers Make eqm_samerepr thm
R26293:26304 compcert.lib.Integers Make eqm_samerepr thm
R26329:26329 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26337:26340 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26332:26334 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26313:26321 compcert.lib.Integers Make eqm_trans thm
R26329:26329 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26337:26340 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26332:26334 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26313:26321 compcert.lib.Integers Make eqm_trans thm
R26377:26387 Coq.ZArith.BinInt Z mul_assoc thm
R26377:26387 Coq.ZArith.BinInt Z mul_assoc thm
R26377:26387 Coq.ZArith.BinInt Z mul_assoc thm
prf 26420:26434 Make mul_add_distr_l
binder 26446:26446 <> x:240
binder 26448:26448 <> y:241
binder 26450:26450 <> z:242
R26468:26470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26453:26455 compcert.lib.Integers Make mul def
R26467:26467 compcert.lib.Integers <> z:242 var
R26458:26460 compcert.lib.Integers Make add def
R26464:26464 compcert.lib.Integers <> y:241 var
R26462:26462 compcert.lib.Integers <> x:240 var
R26471:26473 compcert.lib.Integers Make add def
R26486:26488 compcert.lib.Integers Make mul def
R26492:26492 compcert.lib.Integers <> z:242 var
R26490:26490 compcert.lib.Integers <> y:241 var
R26476:26478 compcert.lib.Integers Make mul def
R26482:26482 compcert.lib.Integers <> z:242 var
R26480:26480 compcert.lib.Integers <> x:240 var
R26520:26522 compcert.lib.Integers Make mul def
R26525:26527 compcert.lib.Integers Make add def
R26538:26549 compcert.lib.Integers Make eqm_samerepr thm
R26538:26549 compcert.lib.Integers Make eqm_samerepr thm
R26565:26572 compcert.lib.Integers Make unsigned def
R26565:26572 compcert.lib.Integers Make unsigned def
R26591:26598 compcert.lib.Integers Make unsigned def
R26591:26598 compcert.lib.Integers Make unsigned def
R26617:26624 compcert.lib.Integers Make unsigned def
R26617:26624 compcert.lib.Integers Make unsigned def
R26654:26654 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26662:26665 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26657:26659 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26638:26646 compcert.lib.Integers Make eqm_trans thm
R26654:26654 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26662:26665 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26657:26659 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26638:26646 compcert.lib.Integers Make eqm_trans thm
R26700:26700 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26708:26711 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26703:26705 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26729:26731 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26724:26726 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26734:26736 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26700:26700 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26708:26711 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26703:26705 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26729:26731 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R26724:26726 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R26734:26736 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
prf 26782:26796 Make mul_add_distr_r
binder 26808:26808 <> x:243
binder 26810:26810 <> y:244
binder 26812:26812 <> z:245
R26830:26832 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26815:26817 compcert.lib.Integers Make mul def
R26822:26824 compcert.lib.Integers Make add def
R26828:26828 compcert.lib.Integers <> z:245 var
R26826:26826 compcert.lib.Integers <> y:244 var
R26819:26819 compcert.lib.Integers <> x:243 var
R26833:26835 compcert.lib.Integers Make add def
R26848:26850 compcert.lib.Integers Make mul def
R26854:26854 compcert.lib.Integers <> z:245 var
R26852:26852 compcert.lib.Integers <> x:243 var
R26838:26840 compcert.lib.Integers Make mul def
R26844:26844 compcert.lib.Integers <> y:244 var
R26842:26842 compcert.lib.Integers <> x:243 var
R26883:26892 compcert.lib.Integers Make mul_commut thm
R26883:26892 compcert.lib.Integers Make mul_commut thm
R26883:26892 compcert.lib.Integers Make mul_commut thm
R26903:26917 compcert.lib.Integers Make mul_add_distr_l thm
R26903:26917 compcert.lib.Integers Make mul_add_distr_l thm
R26903:26917 compcert.lib.Integers Make mul_add_distr_l thm
R26935:26944 compcert.lib.Integers Make mul_commut thm
R26935:26944 compcert.lib.Integers Make mul_commut thm
R26935:26944 compcert.lib.Integers Make mul_commut thm
prf 26961:26975 Make neg_mul_distr_l
binder 26987:26987 <> x:246
binder 26989:26989 <> y:247
R27004:27006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26992:26994 compcert.lib.Integers Make neg def
R26996:26998 compcert.lib.Integers Make mul def
R27002:27002 compcert.lib.Integers <> y:247 var
R27000:27000 compcert.lib.Integers <> x:246 var
R27007:27009 compcert.lib.Integers Make mul def
R27019:27019 compcert.lib.Integers <> y:247 var
R27012:27014 compcert.lib.Integers Make neg def
R27016:27016 compcert.lib.Integers <> x:246 var
R27046:27048 compcert.lib.Integers Make mul def
R27051:27053 compcert.lib.Integers Make neg def
R27069:27076 compcert.lib.Integers Make unsigned def
R27069:27076 compcert.lib.Integers Make unsigned def
R27094:27101 compcert.lib.Integers Make unsigned def
R27094:27101 compcert.lib.Integers Make unsigned def
R27115:27126 compcert.lib.Integers Make eqm_samerepr thm
R27115:27126 compcert.lib.Integers Make eqm_samerepr thm
R27151:27153 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27161:27161 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27156:27158 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27135:27143 compcert.lib.Integers Make eqm_trans thm
R27151:27153 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27161:27161 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27156:27158 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27135:27143 compcert.lib.Integers Make eqm_trans thm
R27194:27196 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27204:27204 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27199:27201 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27213:27213 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27217:27220 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27214:27214 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27194:27196 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27204:27204 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R27199:27201 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27213:27213 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27217:27220 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27214:27214 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
prf 27266:27280 Make neg_mul_distr_r
binder 27293:27293 <> x:248
binder 27295:27295 <> y:249
R27310:27312 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27298:27300 compcert.lib.Integers Make neg def
R27302:27304 compcert.lib.Integers Make mul def
R27308:27308 compcert.lib.Integers <> y:249 var
R27306:27306 compcert.lib.Integers <> x:248 var
R27313:27315 compcert.lib.Integers Make mul def
R27320:27322 compcert.lib.Integers Make neg def
R27324:27324 compcert.lib.Integers <> y:249 var
R27317:27317 compcert.lib.Integers <> x:248 var
R27354:27363 compcert.lib.Integers Make mul_commut thm
R27354:27363 compcert.lib.Integers Make mul_commut thm
R27354:27363 compcert.lib.Integers Make mul_commut thm
R27380:27389 compcert.lib.Integers Make mul_commut thm
R27394:27396 compcert.lib.Integers Make neg def
R27380:27389 compcert.lib.Integers Make mul_commut thm
R27394:27396 compcert.lib.Integers Make neg def
R27380:27389 compcert.lib.Integers Make mul_commut thm
R27394:27396 compcert.lib.Integers Make neg def
R27411:27425 compcert.lib.Integers Make neg_mul_distr_l thm
R27411:27425 compcert.lib.Integers Make neg_mul_distr_l thm
prf 27442:27451 Make mul_signed
binder 27463:27463 <> x:250
binder 27465:27465 <> y:251
R27475:27477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27468:27470 compcert.lib.Integers Make mul def
R27474:27474 compcert.lib.Integers <> y:251 var
R27472:27472 compcert.lib.Integers <> x:250 var
R27478:27481 compcert.lib.Integers Make repr def
R27492:27494 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27484:27489 compcert.lib.Integers Make signed def
R27491:27491 compcert.lib.Integers <> x:250 var
R27495:27500 compcert.lib.Integers Make signed def
R27502:27502 compcert.lib.Integers <> y:251 var
R27530:27532 compcert.lib.Integers Make mul def
R27541:27552 compcert.lib.Integers Make eqm_samerepr thm
R27541:27552 compcert.lib.Integers Make eqm_samerepr thm
R27563:27570 compcert.lib.Integers Make eqm_mult thm
R27579:27585 compcert.lib.Integers Make eqm_sym thm
R27594:27612 compcert.lib.Integers Make eqm_signed_unsigned thm
R27563:27570 compcert.lib.Integers Make eqm_mult thm
R27579:27585 compcert.lib.Integers Make eqm_sym thm
R27579:27585 compcert.lib.Integers Make eqm_sym thm
R27594:27612 compcert.lib.Integers Make eqm_signed_unsigned thm
R27594:27612 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 27673:27688 Make modu_divu_Euclid
binder 27700:27700 <> x:252
binder 27702:27702 <> y:253
R27714:27717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27719:27721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27718:27718 compcert.lib.Integers <> x:252 var
R27722:27724 compcert.lib.Integers Make add def
R27746:27749 compcert.lib.Integers Make modu def
R27753:27753 compcert.lib.Integers <> y:253 var
R27751:27751 compcert.lib.Integers <> x:252 var
R27727:27729 compcert.lib.Integers Make mul def
R27742:27742 compcert.lib.Integers <> y:253 var
R27732:27735 compcert.lib.Integers Make divu def
R27739:27739 compcert.lib.Integers <> y:253 var
R27737:27737 compcert.lib.Integers <> x:252 var
R27706:27709 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R27705:27705 compcert.lib.Integers <> y:253 var
R27710:27713 compcert.lib.Integers Make zero def
R27781:27783 compcert.lib.Integers Make add def
R27786:27788 compcert.lib.Integers Make mul def
R27791:27794 compcert.lib.Integers Make divu def
R27797:27800 compcert.lib.Integers Make modu def
R27819:27822 compcert.lib.Integers Make repr def
R27825:27832 compcert.lib.Integers Make unsigned def
R27819:27822 compcert.lib.Integers Make repr def
R27825:27832 compcert.lib.Integers Make unsigned def
R27863:27874 compcert.lib.Integers Make eqm_samerepr thm
R27863:27874 compcert.lib.Integers Make eqm_samerepr thm
R27890:27897 compcert.lib.Integers Make unsigned def
R27890:27897 compcert.lib.Integers Make unsigned def
R27914:27921 compcert.lib.Integers Make unsigned def
R27914:27921 compcert.lib.Integers Make unsigned def
R27965:27967 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27951:27951 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27959:27962 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27954:27956 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R27970:27974 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R27935:27943 compcert.lib.Integers Make eqm_trans thm
R27965:27967 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R27951:27951 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27959:27962 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R27954:27956 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R27970:27974 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R27935:27943 compcert.lib.Integers Make eqm_trans thm
R27988:27996 compcert.lib.Integers Make eqm_refl2 thm
R27988:27996 compcert.lib.Integers Make eqm_refl2 thm
R28007:28016 Coq.ZArith.BinInt Z mul_comm thm
R28007:28016 Coq.ZArith.BinInt Z mul_comm thm
R28007:28016 Coq.ZArith.BinInt Z mul_comm thm
R28025:28036 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R28025:28036 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R28053:28066 compcert.lib.Integers Make unsigned_range thm
R28053:28066 compcert.lib.Integers Make unsigned_range thm
R28099:28102 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R28089:28096 compcert.lib.Integers Make unsigned def
R28099:28102 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R28089:28096 compcert.lib.Integers Make unsigned def
R28141:28153 compcert.lib.Integers Make repr_unsigned thm
R28141:28153 compcert.lib.Integers Make repr_unsigned thm
R28141:28153 compcert.lib.Integers Make repr_unsigned thm
R28166:28169 compcert.lib.Integers Make zero def
prf 28234:28242 Make modu_divu
binder 28254:28254 <> x:254
binder 28256:28256 <> y:255
R28268:28271 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28280:28282 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28272:28275 compcert.lib.Integers Make modu def
R28279:28279 compcert.lib.Integers <> y:255 var
R28277:28277 compcert.lib.Integers <> x:254 var
R28283:28285 compcert.lib.Integers Make sub def
R28290:28292 compcert.lib.Integers Make mul def
R28305:28305 compcert.lib.Integers <> y:255 var
R28295:28298 compcert.lib.Integers Make divu def
R28302:28302 compcert.lib.Integers <> y:255 var
R28300:28300 compcert.lib.Integers <> x:254 var
R28287:28287 compcert.lib.Integers <> x:254 var
R28260:28263 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R28259:28259 compcert.lib.Integers <> y:255 var
R28264:28267 compcert.lib.Integers Make zero def
binder 28343:28343 <> a:256
binder 28345:28345 <> b:257
binder 28347:28347 <> c:258
R28361:28364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28366:28368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28365:28365 compcert.lib.Integers <> c:258 var
R28369:28371 compcert.lib.Integers Make sub def
R28375:28375 compcert.lib.Integers <> b:257 var
R28373:28373 compcert.lib.Integers <> a:256 var
R28351:28353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28350:28350 compcert.lib.Integers <> a:256 var
R28354:28356 compcert.lib.Integers Make add def
R28360:28360 compcert.lib.Integers <> c:258 var
R28358:28358 compcert.lib.Integers <> b:257 var
binder 28343:28343 <> a:259
binder 28345:28345 <> b:260
binder 28347:28347 <> c:261
R28361:28364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28366:28368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28365:28365 compcert.lib.Integers <> c:261 var
R28369:28371 compcert.lib.Integers Make sub def
R28375:28375 compcert.lib.Integers <> b:260 var
R28373:28373 compcert.lib.Integers <> a:259 var
R28351:28353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28350:28350 compcert.lib.Integers <> a:259 var
R28354:28356 compcert.lib.Integers Make add def
R28360:28360 compcert.lib.Integers <> c:261 var
R28358:28358 compcert.lib.Integers <> b:260 var
R28406:28414 compcert.lib.Integers Make sub_add_l thm
R28406:28414 compcert.lib.Integers Make sub_add_l thm
R28406:28414 compcert.lib.Integers Make sub_add_l thm
R28425:28432 compcert.lib.Integers Make sub_idem thm
R28425:28432 compcert.lib.Integers Make sub_idem thm
R28425:28432 compcert.lib.Integers Make sub_idem thm
R28445:28454 compcert.lib.Integers Make add_commut thm
R28445:28454 compcert.lib.Integers Make add_commut thm
R28445:28454 compcert.lib.Integers Make add_commut thm
R28465:28472 compcert.lib.Integers Make add_zero thm
R28465:28472 compcert.lib.Integers Make add_zero thm
R28465:28472 compcert.lib.Integers Make add_zero thm
R28499:28514 compcert.lib.Integers Make modu_divu_Euclid thm
R28499:28514 compcert.lib.Integers Make modu_divu_Euclid thm
prf 28535:28550 Make mods_divs_Euclid
binder 28562:28562 <> x:262
binder 28564:28564 <> y:263
R28568:28570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28567:28567 compcert.lib.Integers <> x:262 var
R28571:28573 compcert.lib.Integers Make add def
R28595:28598 compcert.lib.Integers Make mods def
R28602:28602 compcert.lib.Integers <> y:263 var
R28600:28600 compcert.lib.Integers <> x:262 var
R28576:28578 compcert.lib.Integers Make mul def
R28591:28591 compcert.lib.Integers <> y:263 var
R28581:28584 compcert.lib.Integers Make divs def
R28588:28588 compcert.lib.Integers <> y:263 var
R28586:28586 compcert.lib.Integers <> x:262 var
R28630:28632 compcert.lib.Integers Make add def
R28635:28637 compcert.lib.Integers Make mul def
R28640:28643 compcert.lib.Integers Make divs def
R28646:28649 compcert.lib.Integers Make mods def
R28668:28671 compcert.lib.Integers Make repr def
R28674:28679 compcert.lib.Integers Make signed def
R28668:28671 compcert.lib.Integers Make repr def
R28674:28679 compcert.lib.Integers Make signed def
R28710:28721 compcert.lib.Integers Make eqm_samerepr thm
R28710:28721 compcert.lib.Integers Make eqm_samerepr thm
R28737:28742 compcert.lib.Integers Make signed def
R28737:28742 compcert.lib.Integers Make signed def
R28759:28764 compcert.lib.Integers Make signed def
R28759:28764 compcert.lib.Integers Make signed def
R28813:28815 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28794:28794 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28807:28810 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28795:28800 Coq.ZArith.BinInt Z quot def
R28816:28820 Coq.ZArith.BinInt Z rem def
R28778:28786 compcert.lib.Integers Make eqm_trans thm
R28813:28815 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R28794:28794 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28807:28810 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R28795:28800 Coq.ZArith.BinInt Z quot def
R28816:28820 Coq.ZArith.BinInt Z rem def
R28778:28786 compcert.lib.Integers Make eqm_trans thm
R28838:28846 compcert.lib.Integers Make eqm_refl2 thm
R28838:28846 compcert.lib.Integers Make eqm_refl2 thm
R28857:28866 Coq.ZArith.BinInt Z mul_comm thm
R28857:28866 Coq.ZArith.BinInt Z mul_comm thm
R28857:28866 Coq.ZArith.BinInt Z mul_comm thm
R28875:28885 Coq.ZArith.BinInt Z quot_rem' thm
R28875:28885 Coq.ZArith.BinInt Z quot_rem' thm
R28896:28902 compcert.lib.Integers Make eqm_add thm
R28896:28902 compcert.lib.Integers Make eqm_add thm
R28929:28947 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R28929:28947 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R28956:28963 compcert.lib.Integers Make eqm_mult thm
R28956:28963 compcert.lib.Integers Make eqm_mult thm
R29001:29019 compcert.lib.Integers Make eqm_signed_unsigned thm
R29001:29019 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 29036:29044 Make mods_divs
binder 29056:29056 <> x:264
binder 29058:29058 <> y:265
R29069:29071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29061:29064 compcert.lib.Integers Make mods def
R29068:29068 compcert.lib.Integers <> y:265 var
R29066:29066 compcert.lib.Integers <> x:264 var
R29072:29074 compcert.lib.Integers Make sub def
R29079:29081 compcert.lib.Integers Make mul def
R29094:29094 compcert.lib.Integers <> y:265 var
R29084:29087 compcert.lib.Integers Make divs def
R29091:29091 compcert.lib.Integers <> y:265 var
R29089:29089 compcert.lib.Integers <> x:264 var
R29076:29076 compcert.lib.Integers <> x:264 var
binder 29132:29132 <> a:266
binder 29134:29134 <> b:267
binder 29136:29136 <> c:268
R29150:29153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29155:29157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29154:29154 compcert.lib.Integers <> c:268 var
R29158:29160 compcert.lib.Integers Make sub def
R29164:29164 compcert.lib.Integers <> b:267 var
R29162:29162 compcert.lib.Integers <> a:266 var
R29140:29142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29139:29139 compcert.lib.Integers <> a:266 var
R29143:29145 compcert.lib.Integers Make add def
R29149:29149 compcert.lib.Integers <> c:268 var
R29147:29147 compcert.lib.Integers <> b:267 var
binder 29132:29132 <> a:269
binder 29134:29134 <> b:270
binder 29136:29136 <> c:271
R29150:29153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29155:29157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29154:29154 compcert.lib.Integers <> c:271 var
R29158:29160 compcert.lib.Integers Make sub def
R29164:29164 compcert.lib.Integers <> b:270 var
R29162:29162 compcert.lib.Integers <> a:269 var
R29140:29142 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29139:29139 compcert.lib.Integers <> a:269 var
R29143:29145 compcert.lib.Integers Make add def
R29149:29149 compcert.lib.Integers <> c:271 var
R29147:29147 compcert.lib.Integers <> b:270 var
R29195:29203 compcert.lib.Integers Make sub_add_l thm
R29195:29203 compcert.lib.Integers Make sub_add_l thm
R29195:29203 compcert.lib.Integers Make sub_add_l thm
R29214:29221 compcert.lib.Integers Make sub_idem thm
R29214:29221 compcert.lib.Integers Make sub_idem thm
R29214:29221 compcert.lib.Integers Make sub_idem thm
R29234:29243 compcert.lib.Integers Make add_commut thm
R29234:29243 compcert.lib.Integers Make add_commut thm
R29234:29243 compcert.lib.Integers Make add_commut thm
R29254:29261 compcert.lib.Integers Make add_zero thm
R29254:29261 compcert.lib.Integers Make add_zero thm
R29254:29261 compcert.lib.Integers Make add_zero thm
R29287:29302 compcert.lib.Integers Make mods_divs_Euclid thm
R29287:29302 compcert.lib.Integers Make mods_divs_Euclid thm
prf 29319:29326 Make divu_one
binder 29338:29338 <> x:272
R29351:29353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29341:29344 compcert.lib.Integers Make divu def
R29348:29350 compcert.lib.Integers Make one def
R29346:29346 compcert.lib.Integers <> x:272 var
R29354:29354 compcert.lib.Integers <> x:272 var
R29373:29376 compcert.lib.Integers Make divu def
R29395:29406 compcert.lib.Integers Make unsigned_one thm
R29395:29406 compcert.lib.Integers Make unsigned_one thm
R29395:29406 compcert.lib.Integers Make unsigned_one thm
R29417:29424 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R29417:29424 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R29417:29424 Coq.ZArith.Zdiv <> Zdiv_1_r thm
R29433:29445 compcert.lib.Integers Make repr_unsigned thm
R29433:29445 compcert.lib.Integers Make repr_unsigned thm
prf 29462:29469 Make divs_one
binder 29481:29481 <> x:273
R29497:29500 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29511:29513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29501:29504 compcert.lib.Integers Make divs def
R29508:29510 compcert.lib.Integers Make one def
R29506:29506 compcert.lib.Integers <> x:273 var
R29514:29514 compcert.lib.Integers <> x:273 var
R29493:29495 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R29484:29492 compcert.lib.Integers Make zwordsize def
R29533:29536 compcert.lib.Integers Make divs def
R29555:29564 compcert.lib.Integers Make signed_one thm
R29555:29564 compcert.lib.Integers Make signed_one thm
R29555:29564 compcert.lib.Integers Make signed_one thm
R29555:29564 compcert.lib.Integers Make signed_one thm
R29575:29584 Coq.ZArith.BinInt Z quot_1_r thm
R29575:29584 Coq.ZArith.BinInt Z quot_1_r thm
R29575:29584 Coq.ZArith.BinInt Z quot_1_r thm
R29593:29603 compcert.lib.Integers Make repr_signed thm
R29593:29603 compcert.lib.Integers Make repr_signed thm
prf 29626:29633 Make modu_one
binder 29645:29645 <> x:274
R29658:29660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29648:29651 compcert.lib.Integers Make modu def
R29655:29657 compcert.lib.Integers Make one def
R29653:29653 compcert.lib.Integers <> x:274 var
R29661:29664 compcert.lib.Integers Make zero def
R29692:29700 compcert.lib.Integers Make modu_divu thm
R29692:29700 compcert.lib.Integers Make modu_divu thm
R29692:29700 compcert.lib.Integers Make modu_divu thm
R29692:29700 compcert.lib.Integers Make modu_divu thm
R29711:29718 compcert.lib.Integers Make divu_one thm
R29711:29718 compcert.lib.Integers Make divu_one thm
R29711:29718 compcert.lib.Integers Make divu_one thm
R29729:29735 compcert.lib.Integers Make mul_one thm
R29729:29735 compcert.lib.Integers Make mul_one thm
R29729:29735 compcert.lib.Integers Make mul_one thm
R29744:29751 compcert.lib.Integers Make sub_idem thm
R29744:29751 compcert.lib.Integers Make sub_idem thm
R29762:29773 compcert.lib.Integers Make one_not_zero thm
R29762:29773 compcert.lib.Integers Make one_not_zero thm
prf 29790:29798 Make divs_mone
binder 29810:29810 <> x:275
R29824:29826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29813:29816 compcert.lib.Integers Make divs def
R29820:29823 compcert.lib.Integers Make mone def
R29818:29818 compcert.lib.Integers <> x:275 var
R29827:29829 compcert.lib.Integers Make neg def
R29831:29831 compcert.lib.Integers <> x:275 var
R29850:29853 compcert.lib.Integers Make divs def
R29856:29858 compcert.lib.Integers Make neg def
R29879:29889 compcert.lib.Integers Make signed_mone thm
R29879:29889 compcert.lib.Integers Make signed_mone thm
R29879:29889 compcert.lib.Integers Make signed_mone thm
R29903:29908 Coq.ZArith.BinInt Z quot def
R29911:29916 compcert.lib.Integers Make signed def
R29933:29935 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29944:29944 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29936:29941 compcert.lib.Integers Make signed def
R29903:29908 Coq.ZArith.BinInt Z quot def
R29911:29916 compcert.lib.Integers Make signed def
R29933:29935 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29944:29944 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R29936:29941 compcert.lib.Integers Make signed def
R29956:29967 compcert.lib.Integers Make eqm_samerepr thm
R29956:29967 compcert.lib.Integers Make eqm_samerepr thm
R29976:29982 compcert.lib.Integers Make eqm_neg thm
R29976:29982 compcert.lib.Integers Make eqm_neg thm
R29991:30009 compcert.lib.Integers Make eqm_signed_unsigned thm
R29991:30009 compcert.lib.Integers Make eqm_signed_unsigned thm
R30025:30030 compcert.lib.Integers Make signed def
R30025:30030 compcert.lib.Integers Make signed def
R30074:30075 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R30074:30075 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R30090:30100 Coq.ZArith.Zquot <> Zquot_opp_r thm
R30090:30100 Coq.ZArith.Zquot <> Zquot_opp_r thm
R30090:30100 Coq.ZArith.Zquot <> Zquot_opp_r thm
R30126:30128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30113:30118 Coq.ZArith.BinInt Z quot def
R30126:30128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30113:30118 Coq.ZArith.BinInt Z quot def
R30152:30168 Coq.ZArith.Zquot <> Zquot_unique_full thm
R30152:30168 Coq.ZArith.Zquot <> Zquot_unique_full thm
R30193:30197 Coq.ZArith.BinInt Z abs def
R30193:30197 Coq.ZArith.BinInt Z abs def
R30224:30226 compcert.lib.Coqlib <> zle def
R30224:30226 compcert.lib.Coqlib <> zle def
R30267:30269 compcert.lib.Integers Make one def
prf 30306:30314 Make mods_mone
binder 30326:30326 <> x:276
R30340:30342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30329:30332 compcert.lib.Integers Make mods def
R30336:30339 compcert.lib.Integers Make mone def
R30334:30334 compcert.lib.Integers <> x:276 var
R30343:30346 compcert.lib.Integers Make zero def
R30374:30382 compcert.lib.Integers Make mods_divs thm
R30374:30382 compcert.lib.Integers Make mods_divs thm
R30374:30382 compcert.lib.Integers Make mods_divs thm
R30393:30401 compcert.lib.Integers Make divs_mone thm
R30393:30401 compcert.lib.Integers Make divs_mone thm
R30393:30401 compcert.lib.Integers Make divs_mone thm
R30417:30431 compcert.lib.Integers Make neg_mul_distr_l thm
R30417:30431 compcert.lib.Integers Make neg_mul_distr_l thm
R30417:30431 compcert.lib.Integers Make neg_mul_distr_l thm
R30442:30449 compcert.lib.Integers Make mul_mone thm
R30442:30449 compcert.lib.Integers Make mul_mone thm
R30442:30449 compcert.lib.Integers Make mul_mone thm
R30460:30473 compcert.lib.Integers Make neg_involutive thm
R30460:30473 compcert.lib.Integers Make neg_involutive thm
R30460:30473 compcert.lib.Integers Make neg_involutive thm
R30482:30489 compcert.lib.Integers Make sub_idem thm
R30482:30489 compcert.lib.Integers Make sub_idem thm
prf 30506:30523 Make divmodu2_divu_modu
binder 30535:30535 <> n:277
binder 30537:30537 <> d:278
R30551:30554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30572:30574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30555:30562 compcert.lib.Integers Make divmodu2 def
R30571:30571 compcert.lib.Integers <> d:278 var
R30569:30569 compcert.lib.Integers <> n:277 var
R30564:30567 compcert.lib.Integers Make zero def
R30575:30578 Coq.Init.Datatypes <> Some constr
R30580:30580 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30589:30590 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30599:30599 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30581:30584 compcert.lib.Integers Make divu def
R30588:30588 compcert.lib.Integers <> d:278 var
R30586:30586 compcert.lib.Integers <> n:277 var
R30591:30594 compcert.lib.Integers Make modu def
R30598:30598 compcert.lib.Integers <> d:278 var
R30596:30596 compcert.lib.Integers <> n:277 var
R30543:30546 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R30542:30542 compcert.lib.Integers <> d:278 var
R30547:30550 compcert.lib.Integers Make zero def
R30618:30625 compcert.lib.Integers Make divmodu2 def
R30628:30631 compcert.lib.Integers Make divu def
R30634:30637 compcert.lib.Integers Make modu def
R30658:30669 compcert.lib.Coqlib <> dec_eq_false thm
R30658:30669 compcert.lib.Coqlib <> dec_eq_false thm
R30658:30669 compcert.lib.Coqlib <> dec_eq_false thm
R30715:30717 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30705:30707 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30692:30699 compcert.lib.Integers Make unsigned def
R30701:30704 compcert.lib.Integers Make zero def
R30708:30714 compcert.lib.Integers Make modulus def
R30718:30725 compcert.lib.Integers Make unsigned def
R30715:30717 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R30705:30707 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R30692:30699 compcert.lib.Integers Make unsigned def
R30701:30704 compcert.lib.Integers Make zero def
R30708:30714 compcert.lib.Integers Make modulus def
R30718:30725 compcert.lib.Integers Make unsigned def
R30755:30757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30745:30752 compcert.lib.Integers Make unsigned def
R30772:30772 Coq.Numbers.BinNums <> N ind
R30783:30795 compcert.lib.Integers Make unsigned_zero thm
R30755:30757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30745:30752 compcert.lib.Integers Make unsigned def
R30783:30795 compcert.lib.Integers Make unsigned_zero thm
R30783:30795 compcert.lib.Integers Make unsigned_zero thm
R30831:30838 compcert.lib.Integers Make unsigned def
R30831:30838 compcert.lib.Integers Make unsigned def
R30857:30859 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R30875:30879 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R30857:30859 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R30875:30879 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R30912:30914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30898:30907 Coq.ZArith.BinInt Z div_eucl def
R30915:30915 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30917:30918 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30920:30920 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30912:30914 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30898:30907 Coq.ZArith.BinInt Z div_eucl def
R30915:30915 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30917:30918 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30920:30920 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30941:30945 Coq.ZArith.BinInt Z div def
R30948:30955 Coq.ZArith.BinInt Z modulo def
R30968:30977 Coq.ZArith.BinInt Z div_eucl def
R30968:30977 Coq.ZArith.BinInt Z div_eucl def
R31015:31022 compcert.lib.Coqlib <> zle_true thm
R31015:31022 compcert.lib.Coqlib <> zle_true thm
R31015:31022 compcert.lib.Coqlib <> zle_true thm
R31015:31022 compcert.lib.Coqlib <> zle_true thm
R31051:31054 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31041:31048 compcert.lib.Integers Make unsigned def
R31051:31054 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31041:31048 compcert.lib.Integers Make unsigned def
R31096:31108 compcert.lib.Integers Make repr_unsigned thm
R31096:31108 compcert.lib.Integers Make repr_unsigned thm
R31096:31108 compcert.lib.Integers Make repr_unsigned thm
R31145:31147 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R31145:31147 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R31178:31191 compcert.lib.Integers Make unsigned_range thm
R31178:31191 compcert.lib.Integers Make unsigned_range thm
R31223:31226 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31228:31231 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31232:31243 compcert.lib.Integers Make max_unsigned def
R31223:31226 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31228:31231 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R31232:31243 compcert.lib.Integers Make max_unsigned def
R31267:31281 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R31267:31281 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R31309:31324 compcert.lib.Integers Make unsigned_range_2 thm
R31309:31324 compcert.lib.Integers Make unsigned_range_2 thm
R31343:31354 compcert.lib.Integers Make max_unsigned def
R31368:31378 compcert.lib.Integers Make modulus_pos thm
R31368:31378 compcert.lib.Integers Make modulus_pos thm
prf 31412:31426 Make unsigned_signed
binder 31438:31438 <> n:279
R31451:31453 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31441:31448 compcert.lib.Integers Make unsigned def
R31450:31450 compcert.lib.Integers <> n:279 var
R31457:31458 compcert.lib.Integers Make lt def
R31462:31465 compcert.lib.Integers Make zero def
R31460:31460 compcert.lib.Integers <> n:279 var
R31496:31501 compcert.lib.Integers Make signed def
R31503:31503 compcert.lib.Integers <> n:279 var
R31480:31482 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R31472:31477 compcert.lib.Integers Make signed def
R31479:31479 compcert.lib.Integers <> n:279 var
R31483:31489 compcert.lib.Integers Make modulus def
R31530:31531 compcert.lib.Integers Make lt def
R31542:31552 compcert.lib.Integers Make signed_zero thm
R31542:31552 compcert.lib.Integers Make signed_zero thm
R31542:31552 compcert.lib.Integers Make signed_zero thm
R31562:31567 compcert.lib.Integers Make signed def
R31584:31597 compcert.lib.Integers Make unsigned_range thm
R31584:31597 compcert.lib.Integers Make unsigned_range thm
R31611:31630 compcert.lib.Integers Make half_modulus_modulus thm
R31611:31630 compcert.lib.Integers Make half_modulus_modulus thm
R31611:31630 compcert.lib.Integers Make half_modulus_modulus thm
R31653:31655 compcert.lib.Coqlib <> zlt def
R31670:31681 compcert.lib.Integers Make half_modulus def
R31658:31665 compcert.lib.Integers Make unsigned def
R31653:31655 compcert.lib.Coqlib <> zlt def
R31670:31681 compcert.lib.Integers Make half_modulus def
R31658:31665 compcert.lib.Integers Make unsigned def
R31695:31703 compcert.lib.Coqlib <> zlt_false thm
R31695:31703 compcert.lib.Coqlib <> zlt_false thm
R31695:31703 compcert.lib.Coqlib <> zlt_false thm
R31729:31736 compcert.lib.Coqlib <> zlt_true thm
R31729:31736 compcert.lib.Coqlib <> zlt_true thm
R31729:31736 compcert.lib.Coqlib <> zlt_true thm
prf 31766:31783 Make divmods2_divs_mods
binder 31795:31795 <> n:280
binder 31797:31797 <> d:281
R31811:31814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31848:31853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31901:31903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31854:31861 compcert.lib.Integers Make divmods2 def
R31900:31900 compcert.lib.Integers <> d:281 var
R31898:31898 compcert.lib.Integers <> n:280 var
R31867:31868 compcert.lib.Integers Make lt def
R31872:31875 compcert.lib.Integers Make zero def
R31870:31870 compcert.lib.Integers <> n:280 var
R31892:31895 compcert.lib.Integers Make zero def
R31882:31885 compcert.lib.Integers Make mone def
R31904:31907 Coq.Init.Datatypes <> Some constr
R31909:31909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31918:31919 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31928:31928 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31910:31913 compcert.lib.Integers Make divs def
R31917:31917 compcert.lib.Integers <> d:281 var
R31915:31915 compcert.lib.Integers <> n:280 var
R31920:31923 compcert.lib.Integers Make mods def
R31927:31927 compcert.lib.Integers <> d:281 var
R31925:31925 compcert.lib.Integers <> n:280 var
R31835:31838 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R31816:31819 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31815:31815 compcert.lib.Integers <> n:280 var
R31820:31823 compcert.lib.Integers Make repr def
R31825:31834 compcert.lib.Integers Make min_signed def
R31840:31843 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31839:31839 compcert.lib.Integers <> d:281 var
R31844:31847 compcert.lib.Integers Make mone def
R31803:31806 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31802:31802 compcert.lib.Integers <> d:281 var
R31807:31810 compcert.lib.Integers Make zero def
R31947:31954 compcert.lib.Integers Make divmods2 def
R31957:31960 compcert.lib.Integers Make divs def
R31963:31966 compcert.lib.Integers Make mods def
R31987:31998 compcert.lib.Coqlib <> dec_eq_false thm
R31987:31998 compcert.lib.Coqlib <> dec_eq_false thm
R31987:31998 compcert.lib.Coqlib <> dec_eq_false thm
R32072:32074 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32062:32064 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R32021:32026 compcert.lib.Integers Make signed def
R32032:32033 compcert.lib.Integers Make lt def
R32037:32040 compcert.lib.Integers Make zero def
R32057:32060 compcert.lib.Integers Make zero def
R32047:32050 compcert.lib.Integers Make mone def
R32065:32071 compcert.lib.Integers Make modulus def
R32075:32082 compcert.lib.Integers Make unsigned def
R32072:32074 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R32062:32064 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R32021:32026 compcert.lib.Integers Make signed def
R32032:32033 compcert.lib.Integers Make lt def
R32037:32040 compcert.lib.Integers Make zero def
R32057:32060 compcert.lib.Integers Make zero def
R32047:32050 compcert.lib.Integers Make mone def
R32065:32071 compcert.lib.Integers Make modulus def
R32075:32082 compcert.lib.Integers Make unsigned def
R32100:32105 compcert.lib.Integers Make signed def
R32100:32105 compcert.lib.Integers Make signed def
R32122:32125 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32122:32125 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32177:32187 compcert.lib.Integers Make repr_signed thm
R32177:32187 compcert.lib.Integers Make repr_signed thm
R32177:32187 compcert.lib.Integers Make repr_signed thm
R32224:32226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32227:32232 compcert.lib.Integers Make signed def
R32224:32226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32227:32232 compcert.lib.Integers Make signed def
R32249:32249 Coq.Numbers.BinNums <> N ind
R32260:32274 compcert.lib.Integers Make unsigned_signed thm
R32260:32274 compcert.lib.Integers Make unsigned_signed thm
R32260:32274 compcert.lib.Integers Make unsigned_signed thm
R32287:32288 compcert.lib.Integers Make lt def
R32292:32295 compcert.lib.Integers Make zero def
R32287:32288 compcert.lib.Integers Make lt def
R32292:32295 compcert.lib.Integers Make zero def
R32311:32321 compcert.lib.Integers Make signed_mone thm
R32311:32321 compcert.lib.Integers Make signed_mone thm
R32311:32321 compcert.lib.Integers Make signed_mone thm
R32342:32352 compcert.lib.Integers Make signed_zero thm
R32342:32352 compcert.lib.Integers Make signed_zero thm
R32342:32352 compcert.lib.Integers Make signed_zero thm
R32375:32380 Coq.ZArith.BinInt Z quot def
R32398:32402 Coq.ZArith.BinInt Z rem def
R32375:32380 Coq.ZArith.BinInt Z quot def
R32398:32402 Coq.ZArith.BinInt Z rem def
R32437:32439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32424:32432 Coq.ZArith.BinInt Z quotrem def
R32440:32440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32442:32443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32445:32445 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32437:32439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32424:32432 Coq.ZArith.BinInt Z quotrem def
R32440:32440 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32442:32443 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32445:32445 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32466:32471 Coq.ZArith.BinInt Z quot def
R32474:32478 Coq.ZArith.BinInt Z rem def
R32491:32499 Coq.ZArith.BinInt Z quotrem def
R32491:32499 Coq.ZArith.BinInt Z quotrem def
R32549:32552 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32554:32557 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32539:32548 compcert.lib.Integers Make min_signed def
R32558:32567 compcert.lib.Integers Make max_signed def
R32592:32603 compcert.lib.Integers Make signed_range thm
R32549:32552 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32554:32557 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32539:32548 compcert.lib.Integers Make min_signed def
R32558:32567 compcert.lib.Integers Make max_signed def
R32592:32603 compcert.lib.Integers Make signed_range thm
R32627:32630 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32632:32635 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32617:32626 compcert.lib.Integers Make min_signed def
R32636:32645 compcert.lib.Integers Make max_signed def
R32627:32630 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32632:32635 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R32617:32626 compcert.lib.Integers Make min_signed def
R32636:32645 compcert.lib.Integers Make max_signed def
R32673:32675 compcert.lib.Coqlib <> zeq def
R32697:32699 compcert.lib.Coqlib <> zeq def
R32673:32675 compcert.lib.Coqlib <> zeq def
R32697:32699 compcert.lib.Coqlib <> zeq def
R32750:32759 Coq.ZArith.BinInt Z quot_1_r thm
R32750:32759 Coq.ZArith.BinInt Z quot_1_r thm
R32750:32759 Coq.ZArith.BinInt Z quot_1_r thm
R32818:32822 Coq.ZArith.BinInt Z opp def
R32818:32822 Coq.ZArith.BinInt Z opp def
R32818:32822 Coq.ZArith.BinInt Z opp def
R32836:32847 Coq.ZArith.BinInt Z quot_opp_r thm
R32836:32847 Coq.ZArith.BinInt Z quot_opp_r thm
R32836:32847 Coq.ZArith.BinInt Z quot_opp_r thm
R32869:32878 Coq.ZArith.BinInt Z quot_1_r thm
R32869:32878 Coq.ZArith.BinInt Z quot_1_r thm
R32869:32878 Coq.ZArith.BinInt Z quot_1_r thm
R32894:32897 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32898:32907 compcert.lib.Integers Make min_signed def
R32894:32897 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32898:32907 compcert.lib.Integers Make min_signed def
R32970:32980 compcert.lib.Integers Make repr_signed thm
R32970:32980 compcert.lib.Integers Make repr_signed thm
R32970:32980 compcert.lib.Integers Make repr_signed thm
R33046:33056 compcert.lib.Integers Make repr_signed thm
R33046:33056 compcert.lib.Integers Make repr_signed thm
R33046:33056 compcert.lib.Integers Make repr_signed thm
R33107:33116 compcert.lib.Integers Make min_signed def
R33119:33128 compcert.lib.Integers Make max_signed def
R33189:33191 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R33171:33175 Coq.ZArith.BinInt Z abs def
R33178:33183 Coq.ZArith.BinInt Z quot def
R33192:33203 compcert.lib.Integers Make half_modulus def
R33189:33191 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R33171:33175 Coq.ZArith.BinInt Z abs def
R33178:33183 Coq.ZArith.BinInt Z quot def
R33192:33203 compcert.lib.Integers Make half_modulus def
R33224:33233 Coq.ZArith.BinInt Z quot_abs thm
R33224:33233 Coq.ZArith.BinInt Z quot_abs thm
R33224:33233 Coq.ZArith.BinInt Z quot_abs thm
R33249:33268 Coq.ZArith.Zquot <> Zquot_lt_upper_bound thm
R33249:33268 Coq.ZArith.Zquot <> Zquot_lt_upper_bound thm
R33337:33339 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R33325:33336 compcert.lib.Integers Make half_modulus def
R33305:33317 Coq.ZArith.BinInt Z le_lt_trans thm
R33337:33339 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R33325:33336 compcert.lib.Integers Make half_modulus def
R33305:33317 Coq.ZArith.BinInt Z le_lt_trans thm
R33358:33366 Coq.ZArith.BinInt Z mul_1_r thm
R33358:33366 Coq.ZArith.BinInt Z mul_1_r thm
R33358:33366 Coq.ZArith.BinInt Z mul_1_r thm
R33376:33385 compcert.lib.Integers Make min_signed def
R33388:33397 compcert.lib.Integers Make max_signed def
R33426:33442 Coq.ZArith.Zorder <> Zmult_lt_compat_l thm
R33426:33442 Coq.ZArith.Zorder <> Zmult_lt_compat_l thm
R33456:33471 compcert.lib.Integers Make half_modulus_pos thm
R33456:33471 compcert.lib.Integers Make half_modulus_pos thm
R33501:33508 Coq.ZArith.BinInt Z abs_lt thm
R33501:33508 Coq.ZArith.BinInt Z abs_lt thm
R33501:33508 Coq.ZArith.BinInt Z abs_lt thm
R33528:33537 compcert.lib.Integers Make min_signed def
R33540:33549 compcert.lib.Integers Make max_signed def
R33570:33581 compcert.lib.Coqlib <> proj_sumbool def
R33594:33601 compcert.lib.Coqlib <> zle_true thm
R33594:33601 compcert.lib.Coqlib <> zle_true thm
R33594:33601 compcert.lib.Coqlib <> zle_true thm
R33594:33601 compcert.lib.Coqlib <> zle_true thm
R33594:33601 compcert.lib.Coqlib <> zle_true thm
def 33700:33706 Make testbit
R33712:33714 compcert.lib.Integers Make int rec
binder 33709:33709 <> x:282
R33721:33721 Coq.Numbers.BinNums <> Z ind
binder 33718:33718 <> i:283
R33726:33729 Coq.Init.Datatypes <> bool ind
R33734:33742 Coq.ZArith.BinInt Z testbit def
R33757:33757 compcert.lib.Integers <> i:283 var
R33745:33752 compcert.lib.Integers Make unsigned def
R33754:33754 compcert.lib.Integers <> x:282 var
prf 33767:33778 Make testbit_repr
binder 33790:33790 <> x:284
binder 33792:33792 <> i:285
R33815:33820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33839:33841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33821:33827 compcert.lib.Integers Make testbit def
R33838:33838 compcert.lib.Integers <> i:285 var
R33830:33833 compcert.lib.Integers Make repr def
R33835:33835 compcert.lib.Integers <> x:284 var
R33842:33850 Coq.ZArith.BinInt Z testbit def
R33854:33854 compcert.lib.Integers <> i:285 var
R33852:33852 compcert.lib.Integers <> x:284 var
R33798:33801 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33803:33805 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33802:33802 compcert.lib.Integers <> i:285 var
R33802:33802 compcert.lib.Integers <> i:285 var
R33806:33814 compcert.lib.Integers Make zwordsize def
R33881:33887 compcert.lib.Integers Make testbit def
R33896:33908 compcert.lib.Integers Make same_bits_eqm thm
R33896:33908 compcert.lib.Integers Make same_bits_eqm thm
prf 33939:33950 Make same_bits_eq
binder 33962:33962 <> x:286
binder 33964:33964 <> y:287
R33969:33969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34027:34033 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34035:34037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34034:34034 compcert.lib.Integers <> x:286 var
R34038:34038 compcert.lib.Integers <> y:287 var
binder 33977:33977 <> i:288
R33998:34001 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34013:34015 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34002:34008 compcert.lib.Integers Make testbit def
R34012:34012 compcert.lib.Integers <> i:288 var
R34010:34010 compcert.lib.Integers <> x:286 var
R34016:34022 compcert.lib.Integers Make testbit def
R34026:34026 compcert.lib.Integers <> i:288 var
R34024:34024 compcert.lib.Integers <> y:287 var
R33981:33984 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33986:33988 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R33985:33985 compcert.lib.Integers <> i:288 var
R33985:33985 compcert.lib.Integers <> i:288 var
R33989:33997 compcert.lib.Integers Make zwordsize def
R34070:34082 compcert.lib.Integers Make repr_unsigned thm
R34070:34082 compcert.lib.Integers Make repr_unsigned thm
R34070:34082 compcert.lib.Integers Make repr_unsigned thm
R34100:34112 compcert.lib.Integers Make repr_unsigned thm
R34100:34112 compcert.lib.Integers Make repr_unsigned thm
R34100:34112 compcert.lib.Integers Make repr_unsigned thm
R34126:34137 compcert.lib.Integers Make eqm_samerepr thm
R34126:34137 compcert.lib.Integers Make eqm_samerepr thm
R34146:34158 compcert.lib.Integers Make eqm_same_bits thm
R34146:34158 compcert.lib.Integers Make eqm_same_bits thm
prf 34179:34188 Make bits_above
binder 34200:34200 <> x:289
binder 34202:34202 <> i:290
R34219:34222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34234:34236 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34223:34229 compcert.lib.Integers Make testbit def
R34233:34233 compcert.lib.Integers <> i:290 var
R34231:34231 compcert.lib.Integers <> x:289 var
R34237:34241 Coq.Init.Datatypes <> false constr
R34206:34209 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R34205:34205 compcert.lib.Integers <> i:290 var
R34210:34218 compcert.lib.Integers Make zwordsize def
R34287:34294 compcert.lib.Integers Make wordsize def
R34267:34280 compcert.lib.Zbits <> Ztestbit_above thm
R34287:34294 compcert.lib.Integers Make wordsize def
R34267:34280 compcert.lib.Zbits <> Ztestbit_above thm
R34309:34322 compcert.lib.Integers Make unsigned_range thm
R34309:34322 compcert.lib.Integers Make unsigned_range thm
prf 34337:34346 Make bits_below
binder 34358:34358 <> x:291
binder 34360:34360 <> i:292
R34368:34371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34383:34385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34372:34378 compcert.lib.Integers Make testbit def
R34382:34382 compcert.lib.Integers <> i:292 var
R34380:34380 compcert.lib.Integers <> x:291 var
R34386:34390 Coq.Init.Datatypes <> false constr
R34364:34366 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R34363:34363 compcert.lib.Integers <> i:292 var
R34416:34430 Coq.ZArith.BinInt Z testbit_neg_r thm
R34416:34430 Coq.ZArith.BinInt Z testbit_neg_r thm
prf 34451:34459 Make bits_zero
binder 34471:34471 <> i:293
R34488:34490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34474:34480 compcert.lib.Integers Make testbit def
R34487:34487 compcert.lib.Integers <> i:293 var
R34482:34485 compcert.lib.Integers Make zero def
R34491:34495 Coq.Init.Datatypes <> false constr
R34522:34528 compcert.lib.Integers Make testbit def
R34539:34551 compcert.lib.Integers Make unsigned_zero thm
R34539:34551 compcert.lib.Integers Make unsigned_zero thm
R34539:34551 compcert.lib.Integers Make unsigned_zero thm
R34560:34569 compcert.lib.Zbits <> Ztestbit_0 thm
R34560:34569 compcert.lib.Zbits <> Ztestbit_0 thm
prf 34585:34592 Make bits_one
binder 34602:34602 <> n:294
R34618:34620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34605:34611 compcert.lib.Integers Make testbit def
R34617:34617 compcert.lib.Integers <> n:294 var
R34613:34615 compcert.lib.Integers Make one def
R34621:34623 compcert.lib.Coqlib <> zeq def
R34625:34625 compcert.lib.Integers <> n:294 var
R34646:34652 compcert.lib.Integers Make testbit def
R34671:34682 compcert.lib.Integers Make unsigned_one thm
R34671:34682 compcert.lib.Integers Make unsigned_one thm
R34671:34682 compcert.lib.Integers Make unsigned_one thm
R34691:34700 compcert.lib.Zbits <> Ztestbit_1 thm
R34691:34700 compcert.lib.Zbits <> Ztestbit_1 thm
prf 34715:34723 Make bits_mone
binder 34735:34735 <> i:295
R34756:34759 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34774:34776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34760:34766 compcert.lib.Integers Make testbit def
R34773:34773 compcert.lib.Integers <> i:295 var
R34768:34771 compcert.lib.Integers Make mone def
R34777:34780 Coq.Init.Datatypes <> true constr
R34739:34742 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34744:34746 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R34743:34743 compcert.lib.Integers <> i:295 var
R34743:34743 compcert.lib.Integers <> i:295 var
R34747:34755 compcert.lib.Integers Make zwordsize def
R34807:34810 compcert.lib.Integers Make mone def
R34821:34832 compcert.lib.Integers Make testbit_repr thm
R34821:34832 compcert.lib.Integers Make testbit_repr thm
R34821:34832 compcert.lib.Integers Make testbit_repr thm
R34821:34832 compcert.lib.Integers Make testbit_repr thm
R34847:34857 compcert.lib.Zbits <> Ztestbit_m1 thm
R34847:34857 compcert.lib.Zbits <> Ztestbit_m1 thm
R34884:34892 compcert.lib.Integers Make bits_zero thm
R34894:34902 compcert.lib.Integers Make bits_mone thm
R34947:34958 compcert.lib.Integers Make same_bits_eq thm
prf 35015:35034 Make sign_bit_of_unsigned
binder 35046:35046 <> x:296
R35074:35076 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35049:35055 compcert.lib.Integers Make testbit def
R35069:35071 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35060:35068 compcert.lib.Integers Make zwordsize def
R35057:35057 compcert.lib.Integers <> x:296 var
R35080:35082 compcert.lib.Coqlib <> zlt def
R35097:35108 compcert.lib.Integers Make half_modulus def
R35085:35092 compcert.lib.Integers Make unsigned def
R35094:35094 compcert.lib.Integers <> x:296 var
R35126:35129 Coq.Init.Datatypes <> true constr
R35115:35119 Coq.Init.Datatypes <> false constr
R35156:35162 compcert.lib.Integers Make testbit def
R35179:35191 Coq.Init.Nat <> pred def
R35193:35200 compcert.lib.Integers Make wordsize def
R35179:35191 Coq.Init.Nat <> pred def
R35193:35200 compcert.lib.Integers Make wordsize def
R35227:35229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35223:35225 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35214:35222 compcert.lib.Integers Make zwordsize def
R35230:35237 Coq.ZArith.BinInt Z of_nat def
R35227:35229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35223:35225 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35214:35222 compcert.lib.Integers Make zwordsize def
R35230:35237 Coq.ZArith.BinInt Z of_nat def
R35256:35264 compcert.lib.Integers Make zwordsize def
R35272:35279 compcert.lib.Integers Make wordsize def
R35295:35305 compcert.lib.Integers WS wordsize defax
R35295:35305 compcert.lib.Integers WS wordsize defax
R35329:35348 compcert.lib.Integers WS wordsize_not_zero prfax
R35329:35348 compcert.lib.Integers WS wordsize_not_zero prfax
R35369:35382 Coq.ZArith.Znat Nat2Z inj_succ thm
R35369:35382 Coq.ZArith.Znat Nat2Z inj_succ thm
R35369:35382 Coq.ZArith.Znat Nat2Z inj_succ thm
R35419:35421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35407:35418 compcert.lib.Integers Make half_modulus def
R35422:35434 Coq.ZArith.Zpower <> two_power_nat def
R35419:35421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35407:35418 compcert.lib.Integers Make half_modulus def
R35422:35434 Coq.ZArith.Zpower <> two_power_nat def
R35454:35472 compcert.lib.Coqlib <> two_power_nat_two_p thm
R35454:35472 compcert.lib.Coqlib <> two_power_nat_two_p thm
R35454:35472 compcert.lib.Coqlib <> two_power_nat_two_p thm
R35495:35512 compcert.lib.Integers Make half_modulus_power thm
R35495:35512 compcert.lib.Integers Make half_modulus_power thm
R35548:35556 compcert.lib.Zbits <> Zsign_bit thm
R35548:35556 compcert.lib.Zbits <> Zsign_bit thm
R35567:35581 Coq.ZArith.Zpower <> two_power_nat_S thm
R35567:35581 Coq.ZArith.Zpower <> two_power_nat_S thm
R35567:35581 Coq.ZArith.Zpower <> two_power_nat_S thm
R35612:35631 compcert.lib.Integers Make half_modulus_modulus thm
R35612:35631 compcert.lib.Integers Make half_modulus_modulus thm
R35612:35631 compcert.lib.Integers Make half_modulus_modulus thm
R35640:35653 compcert.lib.Integers Make unsigned_range thm
R35640:35653 compcert.lib.Integers Make unsigned_range thm
prf 35668:35678 Make bits_signed
binder 35690:35690 <> x:297
binder 35692:35692 <> i:298
R35701:35706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35729:35731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35707:35715 Coq.ZArith.BinInt Z testbit def
R35728:35728 compcert.lib.Integers <> i:298 var
R35718:35723 compcert.lib.Integers Make signed def
R35725:35725 compcert.lib.Integers <> x:297 var
R35732:35738 compcert.lib.Integers Make testbit def
R35746:35748 compcert.lib.Coqlib <> zlt def
R35752:35760 compcert.lib.Integers Make zwordsize def
R35750:35750 compcert.lib.Integers <> i:298 var
R35783:35785 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R35774:35782 compcert.lib.Integers Make zwordsize def
R35767:35767 compcert.lib.Integers <> i:298 var
R35740:35740 compcert.lib.Integers <> x:297 var
R35696:35699 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R35700:35700 compcert.lib.Integers <> i:298 var
R35819:35821 compcert.lib.Coqlib <> zlt def
R35825:35833 compcert.lib.Integers Make zwordsize def
R35819:35821 compcert.lib.Coqlib <> zlt def
R35825:35833 compcert.lib.Integers Make zwordsize def
R35847:35859 compcert.lib.Integers Make same_bits_eqm thm
R35847:35859 compcert.lib.Integers Make same_bits_eqm thm
R35868:35886 compcert.lib.Integers Make eqm_signed_unsigned thm
R35868:35886 compcert.lib.Integers Make eqm_signed_unsigned thm
R35905:35910 compcert.lib.Integers Make signed def
R35921:35940 compcert.lib.Integers Make sign_bit_of_unsigned thm
R35921:35940 compcert.lib.Integers Make sign_bit_of_unsigned thm
R35921:35940 compcert.lib.Integers Make sign_bit_of_unsigned thm
R35953:35955 compcert.lib.Coqlib <> zlt def
R35970:35981 compcert.lib.Integers Make half_modulus def
R35958:35965 compcert.lib.Integers Make unsigned def
R35953:35955 compcert.lib.Coqlib <> zlt def
R35970:35981 compcert.lib.Integers Make half_modulus def
R35958:35965 compcert.lib.Integers Make unsigned def
R36017:36024 compcert.lib.Integers Make wordsize def
R35997:36010 compcert.lib.Zbits <> Ztestbit_above thm
R36017:36024 compcert.lib.Integers Make wordsize def
R35997:36010 compcert.lib.Zbits <> Ztestbit_above thm
R36033:36046 compcert.lib.Integers Make unsigned_range thm
R36033:36046 compcert.lib.Integers Make unsigned_range thm
R36091:36098 compcert.lib.Integers Make wordsize def
R36067:36084 compcert.lib.Zbits <> Ztestbit_above_neg thm
R36091:36098 compcert.lib.Integers Make wordsize def
R36067:36084 compcert.lib.Zbits <> Ztestbit_above_neg thm
R36112:36118 compcert.lib.Integers Make modulus def
R36112:36118 compcert.lib.Integers Make modulus def
R36133:36146 compcert.lib.Integers Make unsigned_range thm
R36133:36146 compcert.lib.Integers Make unsigned_range thm
prf 36175:36181 Make bits_le
binder 36193:36193 <> x:299
binder 36195:36195 <> y:300
R36200:36200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36273:36279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36290:36293 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R36280:36287 compcert.lib.Integers Make unsigned def
R36289:36289 compcert.lib.Integers <> x:299 var
R36294:36301 compcert.lib.Integers Make unsigned def
R36303:36303 compcert.lib.Integers <> y:300 var
binder 36208:36208 <> i:301
R36229:36232 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36251:36254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36266:36268 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36255:36261 compcert.lib.Integers Make testbit def
R36265:36265 compcert.lib.Integers <> i:301 var
R36263:36263 compcert.lib.Integers <> y:300 var
R36269:36272 Coq.Init.Datatypes <> true constr
R36244:36246 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36233:36239 compcert.lib.Integers Make testbit def
R36243:36243 compcert.lib.Integers <> i:301 var
R36241:36241 compcert.lib.Integers <> x:299 var
R36247:36250 Coq.Init.Datatypes <> true constr
R36212:36215 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36217:36219 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36216:36216 compcert.lib.Integers <> i:301 var
R36216:36216 compcert.lib.Integers <> i:301 var
R36220:36228 compcert.lib.Integers Make zwordsize def
R36329:36339 compcert.lib.Zbits <> Ztestbit_le thm
R36329:36339 compcert.lib.Zbits <> Ztestbit_le thm
R36354:36367 compcert.lib.Integers Make unsigned_range thm
R36354:36367 compcert.lib.Integers Make unsigned_range thm
R36394:36400 compcert.lib.Integers Make testbit def
R36394:36400 compcert.lib.Integers Make testbit def
R36418:36420 compcert.lib.Coqlib <> zlt def
R36424:36432 compcert.lib.Integers Make zwordsize def
R36418:36420 compcert.lib.Coqlib <> zlt def
R36424:36432 compcert.lib.Integers Make zwordsize def
R36466:36472 compcert.lib.Integers Make testbit def
R36466:36472 compcert.lib.Integers Make testbit def
R36494:36503 compcert.lib.Integers Make bits_above thm
R36494:36503 compcert.lib.Integers Make bits_above thm
R36494:36503 compcert.lib.Integers Make bits_above thm
R36494:36503 compcert.lib.Integers Make bits_above thm
prf 36588:36595 Make bits_and
binder 36607:36607 <> x:302
binder 36609:36609 <> y:303
binder 36611:36611 <> i:304
R36632:36637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36657:36659 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36638:36644 compcert.lib.Integers Make testbit def
R36656:36656 compcert.lib.Integers <> i:304 var
R36647:36649 compcert.lib.Integers Make and def
R36653:36653 compcert.lib.Integers <> y:303 var
R36651:36651 compcert.lib.Integers <> x:302 var
R36671:36674 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R36660:36666 compcert.lib.Integers Make testbit def
R36670:36670 compcert.lib.Integers <> i:304 var
R36668:36668 compcert.lib.Integers <> x:302 var
R36675:36681 compcert.lib.Integers Make testbit def
R36685:36685 compcert.lib.Integers <> i:304 var
R36683:36683 compcert.lib.Integers <> y:303 var
R36615:36618 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36620:36622 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36619:36619 compcert.lib.Integers <> i:304 var
R36619:36619 compcert.lib.Integers <> i:304 var
R36623:36631 compcert.lib.Integers Make zwordsize def
R36712:36714 compcert.lib.Integers Make and def
R36725:36736 compcert.lib.Integers Make testbit_repr thm
R36725:36736 compcert.lib.Integers Make testbit_repr thm
R36725:36736 compcert.lib.Integers Make testbit_repr thm
R36725:36736 compcert.lib.Integers Make testbit_repr thm
R36753:36763 Coq.ZArith.BinInt Z land_spec thm
R36753:36763 Coq.ZArith.BinInt Z land_spec thm
R36753:36763 Coq.ZArith.BinInt Z land_spec thm
prf 36789:36795 Make bits_or
binder 36807:36807 <> x:305
binder 36809:36809 <> y:306
binder 36811:36811 <> i:307
R36832:36837 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36856:36858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36838:36844 compcert.lib.Integers Make testbit def
R36855:36855 compcert.lib.Integers <> i:307 var
R36847:36848 compcert.lib.Integers Make or def
R36852:36852 compcert.lib.Integers <> y:306 var
R36850:36850 compcert.lib.Integers <> x:305 var
R36870:36873 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R36859:36865 compcert.lib.Integers Make testbit def
R36869:36869 compcert.lib.Integers <> i:307 var
R36867:36867 compcert.lib.Integers <> x:305 var
R36874:36880 compcert.lib.Integers Make testbit def
R36884:36884 compcert.lib.Integers <> i:307 var
R36882:36882 compcert.lib.Integers <> y:306 var
R36815:36818 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36820:36822 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R36819:36819 compcert.lib.Integers <> i:307 var
R36819:36819 compcert.lib.Integers <> i:307 var
R36823:36831 compcert.lib.Integers Make zwordsize def
R36911:36912 compcert.lib.Integers Make or def
R36923:36934 compcert.lib.Integers Make testbit_repr thm
R36923:36934 compcert.lib.Integers Make testbit_repr thm
R36923:36934 compcert.lib.Integers Make testbit_repr thm
R36923:36934 compcert.lib.Integers Make testbit_repr thm
R36951:36960 Coq.ZArith.BinInt Z lor_spec thm
R36951:36960 Coq.ZArith.BinInt Z lor_spec thm
R36951:36960 Coq.ZArith.BinInt Z lor_spec thm
prf 36986:36993 Make bits_xor
binder 37005:37005 <> x:308
binder 37007:37007 <> y:309
binder 37009:37009 <> i:310
R37030:37035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37055:37057 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37036:37042 compcert.lib.Integers Make testbit def
R37054:37054 compcert.lib.Integers <> i:310 var
R37045:37047 compcert.lib.Integers Make xor def
R37051:37051 compcert.lib.Integers <> y:309 var
R37049:37049 compcert.lib.Integers <> x:308 var
R37058:37061 Coq.Init.Datatypes <> xorb def
R37078:37084 compcert.lib.Integers Make testbit def
R37088:37088 compcert.lib.Integers <> i:310 var
R37086:37086 compcert.lib.Integers <> y:309 var
R37064:37070 compcert.lib.Integers Make testbit def
R37074:37074 compcert.lib.Integers <> i:310 var
R37072:37072 compcert.lib.Integers <> x:308 var
R37013:37016 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37018:37020 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37017:37017 compcert.lib.Integers <> i:310 var
R37017:37017 compcert.lib.Integers <> i:310 var
R37021:37029 compcert.lib.Integers Make zwordsize def
R37116:37118 compcert.lib.Integers Make xor def
R37129:37140 compcert.lib.Integers Make testbit_repr thm
R37129:37140 compcert.lib.Integers Make testbit_repr thm
R37129:37140 compcert.lib.Integers Make testbit_repr thm
R37129:37140 compcert.lib.Integers Make testbit_repr thm
R37157:37167 Coq.ZArith.BinInt Z lxor_spec thm
R37157:37167 Coq.ZArith.BinInt Z lxor_spec thm
R37157:37167 Coq.ZArith.BinInt Z lxor_spec thm
prf 37193:37200 Make bits_not
binder 37212:37212 <> x:311
binder 37214:37214 <> i:312
R37235:37240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37258:37260 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37241:37247 compcert.lib.Integers Make testbit def
R37257:37257 compcert.lib.Integers <> i:312 var
R37250:37252 compcert.lib.Integers Make not def
R37254:37254 compcert.lib.Integers <> x:311 var
R37261:37264 Coq.Init.Datatypes <> negb def
R37267:37273 compcert.lib.Integers Make testbit def
R37277:37277 compcert.lib.Integers <> i:312 var
R37275:37275 compcert.lib.Integers <> x:311 var
R37218:37221 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37223:37225 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R37222:37222 compcert.lib.Integers <> i:312 var
R37222:37222 compcert.lib.Integers <> i:312 var
R37226:37234 compcert.lib.Integers Make zwordsize def
R37305:37307 compcert.lib.Integers Make not def
R37318:37325 compcert.lib.Integers Make bits_xor thm
R37318:37325 compcert.lib.Integers Make bits_xor thm
R37318:37325 compcert.lib.Integers Make bits_xor thm
R37318:37325 compcert.lib.Integers Make bits_xor thm
R37342:37350 compcert.lib.Integers Make bits_mone thm
R37342:37350 compcert.lib.Integers Make bits_mone thm
R37342:37350 compcert.lib.Integers Make bits_mone thm
R37342:37350 compcert.lib.Integers Make bits_mone thm
R37378:37385 compcert.lib.Integers Make bits_and thm
R37387:37393 compcert.lib.Integers Make bits_or thm
R37395:37402 compcert.lib.Integers Make bits_xor thm
R37404:37411 compcert.lib.Integers Make bits_not thm
prf 37429:37438 Make and_commut
binder 37448:37448 <> x:313
binder 37450:37450 <> y:314
R37460:37462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37453:37455 compcert.lib.Integers Make and def
R37459:37459 compcert.lib.Integers <> y:314 var
R37457:37457 compcert.lib.Integers <> x:313 var
R37463:37465 compcert.lib.Integers Make and def
R37469:37469 compcert.lib.Integers <> x:313 var
R37467:37467 compcert.lib.Integers <> y:314 var
prf 37506:37514 Make and_assoc
binder 37524:37524 <> x:315
binder 37526:37526 <> y:316
binder 37528:37528 <> z:317
R37546:37548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37531:37533 compcert.lib.Integers Make and def
R37545:37545 compcert.lib.Integers <> z:317 var
R37536:37538 compcert.lib.Integers Make and def
R37542:37542 compcert.lib.Integers <> y:316 var
R37540:37540 compcert.lib.Integers <> x:315 var
R37549:37551 compcert.lib.Integers Make and def
R37556:37558 compcert.lib.Integers Make and def
R37562:37562 compcert.lib.Integers <> z:317 var
R37560:37560 compcert.lib.Integers <> y:316 var
R37553:37553 compcert.lib.Integers <> x:315 var
prf 37600:37607 Make and_zero
binder 37617:37617 <> x:318
R37630:37632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37620:37622 compcert.lib.Integers Make and def
R37626:37629 compcert.lib.Integers Make zero def
R37624:37624 compcert.lib.Integers <> x:318 var
R37633:37636 compcert.lib.Integers Make zero def
R37665:37676 Coq.Bool.Bool <> andb_b_false syndef
R37665:37676 Coq.Bool.Bool <> andb_b_false syndef
prf 37695:37704 Make and_zero_l
binder 37714:37714 <> x:319
R37727:37729 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37717:37719 compcert.lib.Integers Make and def
R37726:37726 compcert.lib.Integers <> x:319 var
R37721:37724 compcert.lib.Integers Make zero def
R37730:37733 compcert.lib.Integers Make zero def
R37761:37770 compcert.lib.Integers Make and_commut thm
R37761:37770 compcert.lib.Integers Make and_commut thm
R37761:37770 compcert.lib.Integers Make and_commut thm
R37779:37786 compcert.lib.Integers Make and_zero thm
R37779:37786 compcert.lib.Integers Make and_zero thm
prf 37803:37810 Make and_mone
binder 37820:37820 <> x:320
R37833:37835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37823:37825 compcert.lib.Integers Make and def
R37829:37832 compcert.lib.Integers Make mone def
R37827:37827 compcert.lib.Integers <> x:320 var
R37836:37836 compcert.lib.Integers <> x:320 var
R37865:37875 Coq.Bool.Bool <> andb_b_true syndef
R37865:37875 Coq.Bool.Bool <> andb_b_true syndef
prf 37894:37903 Make and_mone_l
binder 37913:37913 <> x:321
R37926:37928 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37916:37918 compcert.lib.Integers Make and def
R37925:37925 compcert.lib.Integers <> x:321 var
R37920:37923 compcert.lib.Integers Make mone def
R37929:37929 compcert.lib.Integers <> x:321 var
R37957:37966 compcert.lib.Integers Make and_commut thm
R37957:37966 compcert.lib.Integers Make and_commut thm
R37957:37966 compcert.lib.Integers Make and_commut thm
R37975:37982 compcert.lib.Integers Make and_mone thm
R37975:37982 compcert.lib.Integers Make and_mone thm
prf 37999:38006 Make and_idem
binder 38016:38016 <> x:322
R38026:38028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38019:38021 compcert.lib.Integers Make and def
R38025:38025 compcert.lib.Integers <> x:322 var
R38023:38023 compcert.lib.Integers <> x:322 var
R38029:38029 compcert.lib.Integers <> x:322 var
R38062:38068 compcert.lib.Integers Make testbit def
R38062:38068 compcert.lib.Integers Make testbit def
prf 38096:38104 Make or_commut
binder 38114:38114 <> x:323
binder 38116:38116 <> y:324
R38125:38127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38119:38120 compcert.lib.Integers Make or def
R38124:38124 compcert.lib.Integers <> y:324 var
R38122:38122 compcert.lib.Integers <> x:323 var
R38128:38129 compcert.lib.Integers Make or def
R38133:38133 compcert.lib.Integers <> x:323 var
R38131:38131 compcert.lib.Integers <> y:324 var
prf 38170:38177 Make or_assoc
binder 38187:38187 <> x:325
binder 38189:38189 <> y:326
binder 38191:38191 <> z:327
R38207:38209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38194:38195 compcert.lib.Integers Make or def
R38206:38206 compcert.lib.Integers <> z:327 var
R38198:38199 compcert.lib.Integers Make or def
R38203:38203 compcert.lib.Integers <> y:326 var
R38201:38201 compcert.lib.Integers <> x:325 var
R38210:38211 compcert.lib.Integers Make or def
R38216:38217 compcert.lib.Integers Make or def
R38221:38221 compcert.lib.Integers <> z:327 var
R38219:38219 compcert.lib.Integers <> y:326 var
R38213:38213 compcert.lib.Integers <> x:325 var
prf 38259:38265 Make or_zero
binder 38275:38275 <> x:328
R38287:38289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38278:38279 compcert.lib.Integers Make or def
R38283:38286 compcert.lib.Integers Make zero def
R38281:38281 compcert.lib.Integers <> x:328 var
R38290:38290 compcert.lib.Integers <> x:328 var
prf 38329:38337 Make or_zero_l
binder 38347:38347 <> x:329
R38359:38361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38350:38351 compcert.lib.Integers Make or def
R38358:38358 compcert.lib.Integers <> x:329 var
R38353:38356 compcert.lib.Integers Make zero def
R38362:38362 compcert.lib.Integers <> x:329 var
R38390:38398 compcert.lib.Integers Make or_commut thm
R38390:38398 compcert.lib.Integers Make or_commut thm
R38390:38398 compcert.lib.Integers Make or_commut thm
R38407:38413 compcert.lib.Integers Make or_zero thm
R38407:38413 compcert.lib.Integers Make or_zero thm
prf 38430:38436 Make or_mone
binder 38446:38446 <> x:330
R38458:38460 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38449:38450 compcert.lib.Integers Make or def
R38454:38457 compcert.lib.Integers Make mone def
R38452:38452 compcert.lib.Integers <> x:330 var
R38461:38464 compcert.lib.Integers Make mone def
prf 38501:38507 Make or_idem
binder 38517:38517 <> x:331
R38526:38528 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38520:38521 compcert.lib.Integers Make or def
R38525:38525 compcert.lib.Integers <> x:331 var
R38523:38523 compcert.lib.Integers <> x:331 var
R38529:38529 compcert.lib.Integers <> x:331 var
R38562:38568 compcert.lib.Integers Make testbit def
R38562:38568 compcert.lib.Integers Make testbit def
prf 38596:38609 Make and_or_distrib
binder 38621:38621 <> x:332
binder 38623:38623 <> y:333
binder 38625:38625 <> z:334
R38644:38646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38630:38632 compcert.lib.Integers Make and def
R38637:38638 compcert.lib.Integers Make or def
R38642:38642 compcert.lib.Integers <> z:334 var
R38640:38640 compcert.lib.Integers <> y:333 var
R38634:38634 compcert.lib.Integers <> x:332 var
R38647:38648 compcert.lib.Integers Make or def
R38661:38663 compcert.lib.Integers Make and def
R38667:38667 compcert.lib.Integers <> z:334 var
R38665:38665 compcert.lib.Integers <> x:332 var
R38651:38653 compcert.lib.Integers Make and def
R38657:38657 compcert.lib.Integers <> y:333 var
R38655:38655 compcert.lib.Integers <> x:332 var
R38697:38705 Coq.Bool.Bool <> demorgan1 syndef
R38697:38705 Coq.Bool.Bool <> demorgan1 syndef
prf 38724:38739 Make and_or_distrib_l
binder 38751:38751 <> x:335
binder 38753:38753 <> y:336
binder 38755:38755 <> z:337
R38774:38776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38760:38762 compcert.lib.Integers Make and def
R38773:38773 compcert.lib.Integers <> z:337 var
R38765:38766 compcert.lib.Integers Make or def
R38770:38770 compcert.lib.Integers <> y:336 var
R38768:38768 compcert.lib.Integers <> x:335 var
R38777:38778 compcert.lib.Integers Make or def
R38791:38793 compcert.lib.Integers Make and def
R38797:38797 compcert.lib.Integers <> z:337 var
R38795:38795 compcert.lib.Integers <> y:336 var
R38781:38783 compcert.lib.Integers Make and def
R38787:38787 compcert.lib.Integers <> z:337 var
R38785:38785 compcert.lib.Integers <> x:335 var
R38827:38836 compcert.lib.Integers Make and_commut thm
R38839:38840 compcert.lib.Integers Make or def
R38827:38836 compcert.lib.Integers Make and_commut thm
R38839:38840 compcert.lib.Integers Make or def
R38827:38836 compcert.lib.Integers Make and_commut thm
R38839:38840 compcert.lib.Integers Make or def
R38857:38870 compcert.lib.Integers Make and_or_distrib thm
R38857:38870 compcert.lib.Integers Make and_or_distrib thm
R38857:38870 compcert.lib.Integers Make and_or_distrib thm
R38888:38897 compcert.lib.Integers Make and_commut thm
R38888:38897 compcert.lib.Integers Make and_commut thm
R38888:38897 compcert.lib.Integers Make and_commut thm
prf 38914:38927 Make or_and_distrib
binder 38939:38939 <> x:338
binder 38941:38941 <> y:339
binder 38943:38943 <> z:340
R38962:38964 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38948:38949 compcert.lib.Integers Make or def
R38954:38956 compcert.lib.Integers Make and def
R38960:38960 compcert.lib.Integers <> z:340 var
R38958:38958 compcert.lib.Integers <> y:339 var
R38951:38951 compcert.lib.Integers <> x:338 var
R38965:38967 compcert.lib.Integers Make and def
R38979:38980 compcert.lib.Integers Make or def
R38984:38984 compcert.lib.Integers <> z:340 var
R38982:38982 compcert.lib.Integers <> x:338 var
R38970:38971 compcert.lib.Integers Make or def
R38975:38975 compcert.lib.Integers <> y:339 var
R38973:38973 compcert.lib.Integers <> x:338 var
R39014:39031 Coq.Bool.Bool <> orb_andb_distrib_r thm
R39014:39031 Coq.Bool.Bool <> orb_andb_distrib_r thm
prf 39050:39065 Make or_and_distrib_l
binder 39077:39077 <> x:341
binder 39079:39079 <> y:342
binder 39081:39081 <> z:343
R39100:39102 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39086:39087 compcert.lib.Integers Make or def
R39099:39099 compcert.lib.Integers <> z:343 var
R39090:39092 compcert.lib.Integers Make and def
R39096:39096 compcert.lib.Integers <> y:342 var
R39094:39094 compcert.lib.Integers <> x:341 var
R39103:39105 compcert.lib.Integers Make and def
R39117:39118 compcert.lib.Integers Make or def
R39122:39122 compcert.lib.Integers <> z:343 var
R39120:39120 compcert.lib.Integers <> y:342 var
R39108:39109 compcert.lib.Integers Make or def
R39113:39113 compcert.lib.Integers <> z:343 var
R39111:39111 compcert.lib.Integers <> x:341 var
R39152:39160 compcert.lib.Integers Make or_commut thm
R39163:39165 compcert.lib.Integers Make and def
R39152:39160 compcert.lib.Integers Make or_commut thm
R39163:39165 compcert.lib.Integers Make and def
R39152:39160 compcert.lib.Integers Make or_commut thm
R39163:39165 compcert.lib.Integers Make and def
R39182:39195 compcert.lib.Integers Make or_and_distrib thm
R39182:39195 compcert.lib.Integers Make or_and_distrib thm
R39182:39195 compcert.lib.Integers Make or_and_distrib thm
R39213:39221 compcert.lib.Integers Make or_commut thm
R39213:39221 compcert.lib.Integers Make or_commut thm
R39213:39221 compcert.lib.Integers Make or_commut thm
prf 39238:39250 Make and_or_absorb
binder 39260:39260 <> x:344
binder 39262:39262 <> y:345
R39279:39281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39265:39267 compcert.lib.Integers Make and def
R39272:39273 compcert.lib.Integers Make or def
R39277:39277 compcert.lib.Integers <> y:345 var
R39275:39275 compcert.lib.Integers <> x:344 var
R39269:39269 compcert.lib.Integers <> x:344 var
R39282:39282 compcert.lib.Integers <> x:344 var
binder 39322:39322 <> a:346
binder 39324:39324 <> b:347
R39340:39342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39328:39332 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39339:39339 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39327:39327 compcert.lib.Integers <> a:346 var
R39334:39337 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39333:39333 compcert.lib.Integers <> a:346 var
R39338:39338 compcert.lib.Integers <> b:347 var
R39343:39343 compcert.lib.Integers <> a:346 var
binder 39322:39322 <> a:348
binder 39324:39324 <> b:349
R39340:39342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39328:39332 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39339:39339 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39327:39327 compcert.lib.Integers <> a:348 var
R39334:39337 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39333:39333 compcert.lib.Integers <> a:348 var
R39338:39338 compcert.lib.Integers <> b:349 var
R39343:39343 compcert.lib.Integers <> a:348 var
prf 39383:39395 Make or_and_absorb
binder 39405:39405 <> x:350
binder 39407:39407 <> y:351
R39424:39426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39410:39411 compcert.lib.Integers Make or def
R39416:39418 compcert.lib.Integers Make and def
R39422:39422 compcert.lib.Integers <> y:351 var
R39420:39420 compcert.lib.Integers <> x:350 var
R39413:39413 compcert.lib.Integers <> x:350 var
R39427:39427 compcert.lib.Integers <> x:350 var
binder 39467:39467 <> a:352
binder 39469:39469 <> b:353
R39485:39487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39473:39477 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39484:39484 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39472:39472 compcert.lib.Integers <> a:352 var
R39479:39482 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39478:39478 compcert.lib.Integers <> a:352 var
R39483:39483 compcert.lib.Integers <> b:353 var
R39488:39488 compcert.lib.Integers <> a:352 var
binder 39467:39467 <> a:354
binder 39469:39469 <> b:355
R39485:39487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39473:39477 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39484:39484 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R39472:39472 compcert.lib.Integers <> a:354 var
R39479:39482 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R39478:39478 compcert.lib.Integers <> a:354 var
R39483:39483 compcert.lib.Integers <> b:355 var
R39488:39488 compcert.lib.Integers <> a:354 var
prf 39528:39537 Make xor_commut
binder 39547:39547 <> x:356
binder 39549:39549 <> y:357
R39559:39561 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39552:39554 compcert.lib.Integers Make xor def
R39558:39558 compcert.lib.Integers <> y:357 var
R39556:39556 compcert.lib.Integers <> x:356 var
R39562:39564 compcert.lib.Integers Make xor def
R39568:39568 compcert.lib.Integers <> x:356 var
R39566:39566 compcert.lib.Integers <> y:357 var
R39597:39605 Coq.Bool.Bool <> xorb_comm thm
R39597:39605 Coq.Bool.Bool <> xorb_comm thm
prf 39622:39630 Make xor_assoc
binder 39640:39640 <> x:358
binder 39642:39642 <> y:359
binder 39644:39644 <> z:360
R39662:39664 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39647:39649 compcert.lib.Integers Make xor def
R39661:39661 compcert.lib.Integers <> z:360 var
R39652:39654 compcert.lib.Integers Make xor def
R39658:39658 compcert.lib.Integers <> y:359 var
R39656:39656 compcert.lib.Integers <> x:358 var
R39665:39667 compcert.lib.Integers Make xor def
R39672:39674 compcert.lib.Integers Make xor def
R39678:39678 compcert.lib.Integers <> z:360 var
R39676:39676 compcert.lib.Integers <> y:359 var
R39669:39669 compcert.lib.Integers <> x:358 var
R39708:39717 Coq.Bool.Bool <> xorb_assoc syndef
R39708:39717 Coq.Bool.Bool <> xorb_assoc syndef
prf 39734:39741 Make xor_zero
binder 39751:39751 <> x:361
R39764:39766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39754:39756 compcert.lib.Integers Make xor def
R39760:39763 compcert.lib.Integers Make zero def
R39758:39758 compcert.lib.Integers <> x:361 var
R39767:39767 compcert.lib.Integers <> x:361 var
R39796:39805 Coq.Bool.Bool <> xorb_false syndef
R39796:39805 Coq.Bool.Bool <> xorb_false syndef
prf 39824:39833 Make xor_zero_l
binder 39843:39843 <> x:362
R39856:39858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39846:39848 compcert.lib.Integers Make xor def
R39855:39855 compcert.lib.Integers <> x:362 var
R39850:39853 compcert.lib.Integers Make zero def
R39859:39859 compcert.lib.Integers <> x:362 var
R39887:39896 compcert.lib.Integers Make xor_commut thm
R39887:39896 compcert.lib.Integers Make xor_commut thm
R39887:39896 compcert.lib.Integers Make xor_commut thm
R39905:39912 compcert.lib.Integers Make xor_zero thm
R39905:39912 compcert.lib.Integers Make xor_zero thm
prf 39929:39936 Make xor_idem
binder 39946:39946 <> x:363
R39956:39958 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39949:39951 compcert.lib.Integers Make xor def
R39955:39955 compcert.lib.Integers <> x:363 var
R39953:39953 compcert.lib.Integers <> x:363 var
R39959:39962 compcert.lib.Integers Make zero def
R39991:40004 Coq.Bool.Bool <> xorb_nilpotent thm
R39991:40004 Coq.Bool.Bool <> xorb_nilpotent thm
prf 40021:40032 Make xor_zero_one
R40047:40049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40035:40037 compcert.lib.Integers Make xor def
R40044:40046 compcert.lib.Integers Make one def
R40039:40042 compcert.lib.Integers Make zero def
R40050:40052 compcert.lib.Integers Make one def
R40070:40079 compcert.lib.Integers Make xor_commut thm
R40070:40079 compcert.lib.Integers Make xor_commut thm
R40070:40079 compcert.lib.Integers Make xor_commut thm
R40088:40095 compcert.lib.Integers Make xor_zero thm
R40088:40095 compcert.lib.Integers Make xor_zero thm
prf 40112:40122 Make xor_one_one
R40136:40138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40125:40127 compcert.lib.Integers Make xor def
R40133:40135 compcert.lib.Integers Make one def
R40129:40131 compcert.lib.Integers Make one def
R40139:40142 compcert.lib.Integers Make zero def
R40158:40165 compcert.lib.Integers Make xor_idem thm
R40158:40165 compcert.lib.Integers Make xor_idem thm
prf 40182:40195 Make xor_zero_equal
binder 40205:40205 <> x:364
binder 40207:40207 <> y:365
R40224:40227 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40229:40231 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40228:40228 compcert.lib.Integers <> x:364 var
R40232:40232 compcert.lib.Integers <> y:365 var
R40217:40219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40210:40212 compcert.lib.Integers Make xor def
R40216:40216 compcert.lib.Integers <> y:365 var
R40214:40214 compcert.lib.Integers <> x:364 var
R40220:40223 compcert.lib.Integers Make zero def
R40258:40269 compcert.lib.Integers Make same_bits_eq thm
R40258:40269 compcert.lib.Integers Make same_bits_eq thm
R40322:40324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40290:40293 Coq.Init.Datatypes <> xorb def
R40310:40316 compcert.lib.Integers Make testbit def
R40296:40302 compcert.lib.Integers Make testbit def
R40325:40329 Coq.Init.Datatypes <> false constr
R40322:40324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40290:40293 Coq.Init.Datatypes <> xorb def
R40310:40316 compcert.lib.Integers Make testbit def
R40296:40302 compcert.lib.Integers Make testbit def
R40325:40329 Coq.Init.Datatypes <> false constr
R40348:40355 compcert.lib.Integers Make bits_xor thm
R40348:40355 compcert.lib.Integers Make bits_xor thm
R40348:40355 compcert.lib.Integers Make bits_xor thm
R40348:40355 compcert.lib.Integers Make bits_xor thm
R40381:40389 compcert.lib.Integers Make bits_zero thm
R40381:40389 compcert.lib.Integers Make bits_zero thm
R40404:40410 compcert.lib.Integers Make testbit def
R40428:40434 compcert.lib.Integers Make testbit def
R40404:40410 compcert.lib.Integers Make testbit def
R40428:40434 compcert.lib.Integers Make testbit def
R40428:40434 compcert.lib.Integers Make testbit def
prf 40485:40495 Make xor_is_zero
binder 40505:40505 <> x:366
binder 40507:40507 <> y:367
R40527:40529 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40510:40511 compcert.lib.Integers Make eq def
R40523:40526 compcert.lib.Integers Make zero def
R40514:40516 compcert.lib.Integers Make xor def
R40520:40520 compcert.lib.Integers <> y:367 var
R40518:40518 compcert.lib.Integers <> x:366 var
R40530:40531 compcert.lib.Integers Make eq def
R40535:40535 compcert.lib.Integers <> y:367 var
R40533:40533 compcert.lib.Integers <> x:366 var
R40576:40578 compcert.lib.Integers Make xor def
R40564:40565 compcert.lib.Integers Make eq def
R40567:40573 compcert.lib.Integers Make eq_spec thm
R40576:40578 compcert.lib.Integers Make xor def
R40585:40588 compcert.lib.Integers Make zero def
R40599:40612 compcert.lib.Integers Make xor_zero_equal thm
R40599:40612 compcert.lib.Integers Make xor_zero_equal thm
R40637:40643 compcert.lib.Integers Make eq_true thm
R40637:40643 compcert.lib.Integers Make eq_true thm
R40637:40643 compcert.lib.Integers Make eq_true thm
R40664:40665 compcert.lib.Integers Make eq def
R40667:40673 compcert.lib.Integers Make eq_spec thm
R40705:40712 compcert.lib.Integers Make xor_idem thm
R40705:40712 compcert.lib.Integers Make xor_idem thm
prf 40739:40753 Make and_xor_distrib
binder 40765:40765 <> x:368
binder 40767:40767 <> y:369
binder 40769:40769 <> z:370
R40789:40791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40774:40776 compcert.lib.Integers Make and def
R40781:40783 compcert.lib.Integers Make xor def
R40787:40787 compcert.lib.Integers <> z:370 var
R40785:40785 compcert.lib.Integers <> y:369 var
R40778:40778 compcert.lib.Integers <> x:368 var
R40792:40794 compcert.lib.Integers Make xor def
R40807:40809 compcert.lib.Integers Make and def
R40813:40813 compcert.lib.Integers <> z:370 var
R40811:40811 compcert.lib.Integers <> x:368 var
R40797:40799 compcert.lib.Integers Make and def
R40803:40803 compcert.lib.Integers <> y:369 var
R40801:40801 compcert.lib.Integers <> x:368 var
binder 40854:40854 <> a:371
binder 40856:40856 <> b:372
binder 40858:40858 <> c:373
R40876:40878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40862:40866 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40875:40875 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40861:40861 compcert.lib.Integers <> a:371 var
R40867:40870 Coq.Init.Datatypes <> xorb def
R40874:40874 compcert.lib.Integers <> c:373 var
R40872:40872 compcert.lib.Integers <> b:372 var
R40879:40882 Coq.Init.Datatypes <> xorb def
R40895:40898 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40894:40894 compcert.lib.Integers <> a:371 var
R40899:40899 compcert.lib.Integers <> c:373 var
R40886:40889 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40885:40885 compcert.lib.Integers <> a:371 var
R40890:40890 compcert.lib.Integers <> b:372 var
binder 40854:40854 <> a:374
binder 40856:40856 <> b:375
binder 40858:40858 <> c:376
R40876:40878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40862:40866 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40875:40875 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40861:40861 compcert.lib.Integers <> a:374 var
R40867:40870 Coq.Init.Datatypes <> xorb def
R40874:40874 compcert.lib.Integers <> c:376 var
R40872:40872 compcert.lib.Integers <> b:375 var
R40879:40882 Coq.Init.Datatypes <> xorb def
R40895:40898 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40894:40894 compcert.lib.Integers <> a:374 var
R40899:40899 compcert.lib.Integers <> c:376 var
R40886:40889 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R40885:40885 compcert.lib.Integers <> a:374 var
R40890:40890 compcert.lib.Integers <> b:375 var
prf 40940:40945 Make and_le
binder 40957:40957 <> x:377
binder 40959:40959 <> y:378
R40980:40983 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R40962:40969 compcert.lib.Integers Make unsigned def
R40972:40974 compcert.lib.Integers Make and def
R40978:40978 compcert.lib.Integers <> y:378 var
R40976:40976 compcert.lib.Integers <> x:377 var
R40984:40991 compcert.lib.Integers Make unsigned def
R40993:40993 compcert.lib.Integers <> x:377 var
R41019:41025 compcert.lib.Integers Make bits_le thm
R41019:41025 compcert.lib.Integers Make bits_le thm
R41046:41053 compcert.lib.Integers Make bits_and thm
R41046:41053 compcert.lib.Integers Make bits_and thm
R41046:41053 compcert.lib.Integers Make bits_and thm
R41046:41053 compcert.lib.Integers Make bits_and thm
R41076:41088 Coq.Bool.Bool <> andb_true_iff thm
R41076:41088 Coq.Bool.Bool <> andb_true_iff thm
R41076:41088 Coq.Bool.Bool <> andb_true_iff thm
prf 41118:41122 Make or_le
binder 41134:41134 <> x:379
binder 41136:41136 <> y:380
R41149:41152 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R41139:41146 compcert.lib.Integers Make unsigned def
R41148:41148 compcert.lib.Integers <> x:379 var
R41153:41160 compcert.lib.Integers Make unsigned def
R41163:41164 compcert.lib.Integers Make or def
R41168:41168 compcert.lib.Integers <> y:380 var
R41166:41166 compcert.lib.Integers <> x:379 var
R41195:41201 compcert.lib.Integers Make bits_le thm
R41195:41201 compcert.lib.Integers Make bits_le thm
R41222:41228 compcert.lib.Integers Make bits_or thm
R41222:41228 compcert.lib.Integers Make bits_or thm
R41222:41228 compcert.lib.Integers Make bits_or thm
R41222:41228 compcert.lib.Integers Make bits_or thm
prf 41313:41326 Make not_involutive
R41342:41344 compcert.lib.Integers Make int rec
binder 41339:41339 <> x:381
R41359:41361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41348:41350 compcert.lib.Integers Make not def
R41353:41355 compcert.lib.Integers Make not def
R41357:41357 compcert.lib.Integers <> x:381 var
R41362:41362 compcert.lib.Integers <> x:381 var
R41389:41391 compcert.lib.Integers Make not def
R41402:41410 compcert.lib.Integers Make xor_assoc thm
R41402:41410 compcert.lib.Integers Make xor_assoc thm
R41402:41410 compcert.lib.Integers Make xor_assoc thm
R41421:41428 compcert.lib.Integers Make xor_idem thm
R41421:41428 compcert.lib.Integers Make xor_idem thm
R41421:41428 compcert.lib.Integers Make xor_idem thm
R41437:41444 compcert.lib.Integers Make xor_zero thm
R41437:41444 compcert.lib.Integers Make xor_zero thm
prf 41461:41468 Make not_zero
R41481:41483 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41473:41475 compcert.lib.Integers Make not def
R41477:41480 compcert.lib.Integers Make zero def
R41484:41487 compcert.lib.Integers Make mone def
R41506:41508 compcert.lib.Integers Make not def
R41519:41528 compcert.lib.Integers Make xor_commut thm
R41519:41528 compcert.lib.Integers Make xor_commut thm
R41519:41528 compcert.lib.Integers Make xor_commut thm
R41537:41544 compcert.lib.Integers Make xor_zero thm
R41537:41544 compcert.lib.Integers Make xor_zero thm
prf 41561:41568 Make not_mone
R41581:41583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41573:41575 compcert.lib.Integers Make not def
R41577:41580 compcert.lib.Integers Make mone def
R41584:41587 compcert.lib.Integers Make zero def
R41611:41624 compcert.lib.Integers Make not_involutive thm
R41626:41629 compcert.lib.Integers Make zero def
R41611:41624 compcert.lib.Integers Make not_involutive thm
R41626:41629 compcert.lib.Integers Make zero def
R41611:41624 compcert.lib.Integers Make not_involutive thm
R41626:41629 compcert.lib.Integers Make zero def
R41656:41663 compcert.lib.Integers Make not_zero thm
R41656:41663 compcert.lib.Integers Make not_zero thm
prf 41680:41693 Make not_or_and_not
binder 41705:41705 <> x:382
binder 41707:41707 <> y:383
R41722:41724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41710:41712 compcert.lib.Integers Make not def
R41715:41716 compcert.lib.Integers Make or def
R41720:41720 compcert.lib.Integers <> y:383 var
R41718:41718 compcert.lib.Integers <> x:382 var
R41725:41727 compcert.lib.Integers Make and def
R41738:41740 compcert.lib.Integers Make not def
R41742:41742 compcert.lib.Integers <> y:383 var
R41730:41732 compcert.lib.Integers Make not def
R41734:41734 compcert.lib.Integers <> x:382 var
R41772:41779 Coq.Bool.Bool <> negb_orb thm
R41772:41779 Coq.Bool.Bool <> negb_orb thm
prf 41796:41809 Make not_and_or_not
binder 41821:41821 <> x:384
binder 41823:41823 <> y:385
R41839:41841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41826:41828 compcert.lib.Integers Make not def
R41831:41833 compcert.lib.Integers Make and def
R41837:41837 compcert.lib.Integers <> y:385 var
R41835:41835 compcert.lib.Integers <> x:384 var
R41842:41843 compcert.lib.Integers Make or def
R41854:41856 compcert.lib.Integers Make not def
R41858:41858 compcert.lib.Integers <> y:385 var
R41846:41848 compcert.lib.Integers Make not def
R41850:41850 compcert.lib.Integers <> x:384 var
R41888:41896 Coq.Bool.Bool <> negb_andb thm
R41888:41896 Coq.Bool.Bool <> negb_andb thm
prf 41913:41924 Make and_not_self
binder 41936:41936 <> x:386
R41952:41954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41939:41941 compcert.lib.Integers Make and def
R41946:41948 compcert.lib.Integers Make not def
R41950:41950 compcert.lib.Integers <> x:386 var
R41943:41943 compcert.lib.Integers <> x:386 var
R41955:41958 compcert.lib.Integers Make zero def
prf 41995:42005 Make or_not_self
binder 42017:42017 <> x:387
R42032:42034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42020:42021 compcert.lib.Integers Make or def
R42026:42028 compcert.lib.Integers Make not def
R42030:42030 compcert.lib.Integers <> x:387 var
R42023:42023 compcert.lib.Integers <> x:387 var
R42035:42038 compcert.lib.Integers Make mone def
prf 42075:42086 Make xor_not_self
binder 42098:42098 <> x:388
R42114:42116 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42101:42103 compcert.lib.Integers Make xor def
R42108:42110 compcert.lib.Integers Make not def
R42112:42112 compcert.lib.Integers <> x:388 var
R42105:42105 compcert.lib.Integers <> x:388 var
R42117:42120 compcert.lib.Integers Make mone def
R42153:42159 compcert.lib.Integers Make testbit def
R42153:42159 compcert.lib.Integers Make testbit def
prf 42185:42196 Make unsigned_not
binder 42208:42208 <> x:389
R42227:42229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42211:42218 compcert.lib.Integers Make unsigned def
R42221:42223 compcert.lib.Integers Make not def
R42225:42225 compcert.lib.Integers <> x:389 var
R42242:42244 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42230:42241 compcert.lib.Integers Make max_unsigned def
R42245:42252 compcert.lib.Integers Make unsigned def
R42254:42254 compcert.lib.Integers <> x:389 var
R42288:42295 compcert.lib.Integers Make unsigned def
R42298:42301 compcert.lib.Integers Make repr def
R42314:42316 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42303:42303 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42304:42311 compcert.lib.Integers Make unsigned def
R42288:42295 compcert.lib.Integers Make unsigned def
R42298:42301 compcert.lib.Integers Make repr def
R42314:42316 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42303:42303 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42304:42311 compcert.lib.Integers Make unsigned def
R42353:42364 compcert.lib.Integers Make testbit_repr thm
R42353:42364 compcert.lib.Integers Make testbit_repr thm
R42353:42364 compcert.lib.Integers Make testbit_repr thm
R42353:42364 compcert.lib.Integers Make testbit_repr thm
R42389:42404 compcert.lib.Zbits <> Z_one_complement thm
R42389:42404 compcert.lib.Zbits <> Z_one_complement thm
R42422:42437 compcert.lib.Integers Make unsigned_repr_eq thm
R42422:42437 compcert.lib.Integers Make unsigned_repr_eq thm
R42422:42437 compcert.lib.Integers Make unsigned_repr_eq thm
R42446:42456 compcert.lib.Coqlib <> Zmod_unique thm
R42446:42456 compcert.lib.Coqlib <> Zmod_unique thm
R42478:42489 compcert.lib.Integers Make max_unsigned def
R42511:42524 compcert.lib.Integers Make unsigned_range thm
R42511:42524 compcert.lib.Integers Make unsigned_range thm
R42537:42548 compcert.lib.Integers Make max_unsigned def
prf 42570:42576 Make not_neg
binder 42588:42588 <> x:390
R42596:42598 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42591:42593 compcert.lib.Integers Make not def
R42595:42595 compcert.lib.Integers <> x:390 var
R42599:42601 compcert.lib.Integers Make add def
R42611:42614 compcert.lib.Integers Make mone def
R42604:42606 compcert.lib.Integers Make neg def
R42608:42608 compcert.lib.Integers <> x:390 var
R42651:42663 compcert.lib.Integers Make repr_unsigned thm
R42651:42663 compcert.lib.Integers Make repr_unsigned thm
R42651:42663 compcert.lib.Integers Make repr_unsigned thm
R42681:42683 compcert.lib.Integers Make add def
R42697:42708 compcert.lib.Integers Make testbit_repr thm
R42697:42708 compcert.lib.Integers Make testbit_repr thm
R42697:42708 compcert.lib.Integers Make testbit_repr thm
R42697:42708 compcert.lib.Integers Make testbit_repr thm
R42697:42708 compcert.lib.Integers Make testbit_repr thm
R42697:42708 compcert.lib.Integers Make testbit_repr thm
R42697:42708 compcert.lib.Integers Make testbit_repr thm
R42733:42741 Coq.ZArith.BinInt Z testbit def
R42755:42757 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42744:42744 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42745:42752 compcert.lib.Integers Make unsigned def
R42733:42741 Coq.ZArith.BinInt Z testbit def
R42755:42757 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42744:42744 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42745:42752 compcert.lib.Integers Make unsigned def
R42783:42798 compcert.lib.Zbits <> Z_one_complement thm
R42783:42798 compcert.lib.Zbits <> Z_one_complement thm
R42814:42826 compcert.lib.Integers Make same_bits_eqm thm
R42814:42826 compcert.lib.Integers Make same_bits_eqm thm
R42857:42859 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42846:42846 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42847:42854 compcert.lib.Integers Make unsigned def
R42880:42883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42886:42886 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42869:42869 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42870:42877 compcert.lib.Integers Make unsigned def
R42857:42859 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R42846:42846 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42847:42854 compcert.lib.Integers Make unsigned def
R42880:42883 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42886:42886 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R42869:42869 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R42870:42877 compcert.lib.Integers Make unsigned def
R42905:42911 compcert.lib.Integers Make eqm_add thm
R42905:42911 compcert.lib.Integers Make eqm_add thm
R42923:42925 compcert.lib.Integers Make neg def
R42934:42950 compcert.lib.Integers Make eqm_unsigned_repr thm
R42934:42950 compcert.lib.Integers Make eqm_unsigned_repr thm
R42963:42975 compcert.lib.Integers Make unsigned_mone thm
R42963:42975 compcert.lib.Integers Make unsigned_mone thm
R42963:42975 compcert.lib.Integers Make unsigned_mone thm
prf 43011:43017 Make neg_not
binder 43029:43029 <> x:391
R43037:43039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43032:43034 compcert.lib.Integers Make neg def
R43036:43036 compcert.lib.Integers <> x:391 var
R43040:43042 compcert.lib.Integers Make add def
R43052:43054 compcert.lib.Integers Make one def
R43045:43047 compcert.lib.Integers Make not def
R43049:43049 compcert.lib.Integers <> x:391 var
R43082:43088 compcert.lib.Integers Make not_neg thm
R43082:43088 compcert.lib.Integers Make not_neg thm
R43082:43088 compcert.lib.Integers Make not_neg thm
R43099:43107 compcert.lib.Integers Make add_assoc thm
R43099:43107 compcert.lib.Integers Make add_assoc thm
R43099:43107 compcert.lib.Integers Make add_assoc thm
R43121:43123 compcert.lib.Integers Make add def
R43130:43132 compcert.lib.Integers Make one def
R43125:43128 compcert.lib.Integers Make mone def
R43140:43143 compcert.lib.Integers Make zero def
R43121:43123 compcert.lib.Integers Make add def
R43130:43132 compcert.lib.Integers Make one def
R43125:43128 compcert.lib.Integers Make mone def
R43140:43143 compcert.lib.Integers Make zero def
R43154:43161 compcert.lib.Integers Make add_zero thm
R43154:43161 compcert.lib.Integers Make add_zero thm
R43154:43161 compcert.lib.Integers Make add_zero thm
R43178:43189 compcert.lib.Integers Make eqm_samerepr thm
R43178:43189 compcert.lib.Integers Make eqm_samerepr thm
R43200:43212 compcert.lib.Integers Make unsigned_mone thm
R43200:43212 compcert.lib.Integers Make unsigned_mone thm
R43200:43212 compcert.lib.Integers Make unsigned_mone thm
R43223:43234 compcert.lib.Integers Make unsigned_one thm
R43223:43234 compcert.lib.Integers Make unsigned_one thm
R43223:43234 compcert.lib.Integers Make unsigned_one thm
prf 43272:43282 Make sub_add_not
binder 43294:43294 <> x:392
binder 43296:43296 <> y:393
R43306:43308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43299:43301 compcert.lib.Integers Make sub def
R43305:43305 compcert.lib.Integers <> y:393 var
R43303:43303 compcert.lib.Integers <> x:392 var
R43309:43311 compcert.lib.Integers Make add def
R43329:43331 compcert.lib.Integers Make one def
R43314:43316 compcert.lib.Integers Make add def
R43321:43323 compcert.lib.Integers Make not def
R43325:43325 compcert.lib.Integers <> y:393 var
R43318:43318 compcert.lib.Integers <> x:392 var
R43359:43369 compcert.lib.Integers Make sub_add_opp thm
R43359:43369 compcert.lib.Integers Make sub_add_opp thm
R43359:43369 compcert.lib.Integers Make sub_add_opp thm
R43380:43386 compcert.lib.Integers Make neg_not thm
R43380:43386 compcert.lib.Integers Make neg_not thm
R43380:43386 compcert.lib.Integers Make neg_not thm
R43401:43409 compcert.lib.Integers Make add_assoc thm
R43401:43409 compcert.lib.Integers Make add_assoc thm
R43401:43409 compcert.lib.Integers Make add_assoc thm
R43401:43409 compcert.lib.Integers Make add_assoc thm
prf 43432:43444 Make sub_add_not_3
binder 43456:43456 <> x:394
binder 43458:43458 <> y:395
binder 43460:43460 <> b:396
R43484:43489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43505:43507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43490:43492 compcert.lib.Integers Make sub def
R43504:43504 compcert.lib.Integers <> b:396 var
R43495:43497 compcert.lib.Integers Make sub def
R43501:43501 compcert.lib.Integers <> y:395 var
R43499:43499 compcert.lib.Integers <> x:394 var
R43508:43510 compcert.lib.Integers Make add def
R43529:43531 compcert.lib.Integers Make xor def
R43535:43537 compcert.lib.Integers Make one def
R43533:43533 compcert.lib.Integers <> b:396 var
R43513:43515 compcert.lib.Integers Make add def
R43520:43522 compcert.lib.Integers Make not def
R43524:43524 compcert.lib.Integers <> y:395 var
R43517:43517 compcert.lib.Integers <> x:394 var
R43473:43476 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R43466:43468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43465:43465 compcert.lib.Integers <> b:396 var
R43469:43472 compcert.lib.Integers Make zero def
R43478:43480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43477:43477 compcert.lib.Integers <> b:396 var
R43481:43483 compcert.lib.Integers Make one def
R43568:43578 compcert.lib.Integers Make sub_add_not thm
R43568:43578 compcert.lib.Integers Make sub_add_not thm
R43568:43578 compcert.lib.Integers Make sub_add_not thm
R43568:43578 compcert.lib.Integers Make sub_add_not thm
R43568:43578 compcert.lib.Integers Make sub_add_not thm
R43591:43599 compcert.lib.Integers Make add_assoc thm
R43591:43599 compcert.lib.Integers Make add_assoc thm
R43591:43599 compcert.lib.Integers Make add_assoc thm
R43591:43599 compcert.lib.Integers Make add_assoc thm
R43591:43599 compcert.lib.Integers Make add_assoc thm
R43591:43599 compcert.lib.Integers Make add_assoc thm
R43591:43599 compcert.lib.Integers Make add_assoc thm
R43633:43639 compcert.lib.Integers Make neg_not thm
R43633:43639 compcert.lib.Integers Make neg_not thm
R43633:43639 compcert.lib.Integers Make neg_not thm
R43653:43663 compcert.lib.Integers Make sub_add_opp thm
R43653:43663 compcert.lib.Integers Make sub_add_opp thm
R43653:43663 compcert.lib.Integers Make sub_add_opp thm
R43697:43706 compcert.lib.Integers Make xor_zero_l thm
R43697:43706 compcert.lib.Integers Make xor_zero_l thm
R43697:43706 compcert.lib.Integers Make xor_zero_l thm
R43717:43726 compcert.lib.Integers Make sub_zero_l thm
R43717:43726 compcert.lib.Integers Make sub_zero_l thm
R43717:43726 compcert.lib.Integers Make sub_zero_l thm
R43745:43752 compcert.lib.Integers Make xor_idem thm
R43745:43752 compcert.lib.Integers Make xor_idem thm
R43745:43752 compcert.lib.Integers Make xor_idem thm
R43763:43770 compcert.lib.Integers Make sub_idem thm
R43763:43770 compcert.lib.Integers Make sub_idem thm
R43763:43770 compcert.lib.Integers Make sub_idem thm
prf 43793:43812 Make sub_borrow_add_carry
binder 43824:43824 <> x:397
binder 43826:43826 <> y:398
binder 43828:43828 <> b:399
R43852:43857 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43874:43876 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43858:43867 compcert.lib.Integers Make sub_borrow def
R43873:43873 compcert.lib.Integers <> b:399 var
R43871:43871 compcert.lib.Integers <> y:398 var
R43869:43869 compcert.lib.Integers <> x:397 var
R43877:43879 compcert.lib.Integers Make xor def
R43915:43917 compcert.lib.Integers Make one def
R43882:43890 compcert.lib.Integers Make add_carry def
R43903:43905 compcert.lib.Integers Make xor def
R43909:43911 compcert.lib.Integers Make one def
R43907:43907 compcert.lib.Integers <> b:399 var
R43895:43897 compcert.lib.Integers Make not def
R43899:43899 compcert.lib.Integers <> y:398 var
R43892:43892 compcert.lib.Integers <> x:397 var
R43841:43844 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R43834:43836 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43833:43833 compcert.lib.Integers <> b:399 var
R43837:43840 compcert.lib.Integers Make zero def
R43846:43848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43845:43845 compcert.lib.Integers <> b:399 var
R43849:43851 compcert.lib.Integers Make one def
R43944:43953 compcert.lib.Integers Make sub_borrow def
R43956:43964 compcert.lib.Integers Make add_carry def
R43975:43986 compcert.lib.Integers Make unsigned_not thm
R43975:43986 compcert.lib.Integers Make unsigned_not thm
R43975:43986 compcert.lib.Integers Make unsigned_not thm
R44000:44007 compcert.lib.Integers Make unsigned def
R44010:44012 compcert.lib.Integers Make xor def
R44016:44018 compcert.lib.Integers Make one def
R44029:44031 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44032:44039 compcert.lib.Integers Make unsigned def
R44000:44007 compcert.lib.Integers Make unsigned def
R44010:44012 compcert.lib.Integers Make xor def
R44016:44018 compcert.lib.Integers Make one def
R44029:44031 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44032:44039 compcert.lib.Integers Make unsigned def
R44057:44059 compcert.lib.Coqlib <> zlt def
R44085:44087 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44072:44074 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44062:44069 compcert.lib.Integers Make unsigned def
R44075:44082 compcert.lib.Integers Make unsigned def
R44088:44095 compcert.lib.Integers Make unsigned def
R44057:44059 compcert.lib.Coqlib <> zlt def
R44085:44087 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44072:44074 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R44062:44069 compcert.lib.Integers Make unsigned def
R44075:44082 compcert.lib.Integers Make unsigned def
R44088:44095 compcert.lib.Integers Make unsigned def
R44112:44119 compcert.lib.Coqlib <> zlt_true thm
R44112:44119 compcert.lib.Coqlib <> zlt_true thm
R44112:44119 compcert.lib.Coqlib <> zlt_true thm
R44112:44119 compcert.lib.Coqlib <> zlt_true thm
R44130:44139 compcert.lib.Integers Make xor_zero_l thm
R44130:44139 compcert.lib.Integers Make xor_zero_l thm
R44130:44139 compcert.lib.Integers Make xor_zero_l thm
R44157:44168 compcert.lib.Integers Make max_unsigned def
R44186:44194 compcert.lib.Coqlib <> zlt_false thm
R44186:44194 compcert.lib.Coqlib <> zlt_false thm
R44186:44194 compcert.lib.Coqlib <> zlt_false thm
R44186:44194 compcert.lib.Coqlib <> zlt_false thm
R44205:44212 compcert.lib.Integers Make xor_idem thm
R44205:44212 compcert.lib.Integers Make xor_idem thm
R44205:44212 compcert.lib.Integers Make xor_idem thm
R44230:44241 compcert.lib.Integers Make max_unsigned def
R44282:44291 compcert.lib.Integers Make xor_zero_l thm
R44282:44291 compcert.lib.Integers Make xor_zero_l thm
R44282:44291 compcert.lib.Integers Make xor_zero_l thm
R44302:44313 compcert.lib.Integers Make unsigned_one thm
R44316:44328 compcert.lib.Integers Make unsigned_zero thm
R44302:44313 compcert.lib.Integers Make unsigned_one thm
R44302:44313 compcert.lib.Integers Make unsigned_one thm
R44316:44328 compcert.lib.Integers Make unsigned_zero thm
R44316:44328 compcert.lib.Integers Make unsigned_zero thm
R44347:44354 compcert.lib.Integers Make xor_idem thm
R44347:44354 compcert.lib.Integers Make xor_idem thm
R44347:44354 compcert.lib.Integers Make xor_idem thm
R44365:44376 compcert.lib.Integers Make unsigned_one thm
R44379:44391 compcert.lib.Integers Make unsigned_zero thm
R44365:44376 compcert.lib.Integers Make unsigned_one thm
R44365:44376 compcert.lib.Integers Make unsigned_one thm
R44379:44391 compcert.lib.Integers Make unsigned_zero thm
R44379:44391 compcert.lib.Integers Make unsigned_zero thm
prf 44481:44491 Make Z_add_is_or
binder 44503:44503 <> i:400
R44512:44517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 44525:44525 <> x:401
binder 44527:44527 <> y:402
R44532:44532 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44596:44602 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44622:44624 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44603:44611 Coq.ZArith.BinInt Z testbit def
R44621:44621 compcert.lib.Integers <> i:400 var
R44615:44617 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R44614:44614 compcert.lib.Integers <> x:401 var
R44618:44618 compcert.lib.Integers <> y:402 var
R44638:44641 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R44625:44633 Coq.ZArith.BinInt Z testbit def
R44637:44637 compcert.lib.Integers <> i:400 var
R44635:44635 compcert.lib.Integers <> x:401 var
R44642:44650 Coq.ZArith.BinInt Z testbit def
R44654:44654 compcert.lib.Integers <> i:400 var
R44652:44652 compcert.lib.Integers <> y:402 var
binder 44540:44540 <> j:403
R44554:44557 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44588:44590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44571:44574 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R44558:44566 Coq.ZArith.BinInt Z testbit def
R44570:44570 compcert.lib.Integers <> j:403 var
R44568:44568 compcert.lib.Integers <> x:401 var
R44575:44583 Coq.ZArith.BinInt Z testbit def
R44587:44587 compcert.lib.Integers <> j:403 var
R44585:44585 compcert.lib.Integers <> y:402 var
R44591:44595 Coq.Init.Datatypes <> false constr
R44544:44547 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R44549:44552 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R44548:44548 compcert.lib.Integers <> j:403 var
R44548:44548 compcert.lib.Integers <> j:403 var
R44553:44553 compcert.lib.Integers <> i:400 var
R44507:44510 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R44511:44511 compcert.lib.Integers <> i:400 var
R44700:44708 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R44700:44708 Coq.ZArith.Wf_Z <> Zlt_0_ind thm
R44757:44763 compcert.lib.Zbits <> Zdecomp thm
R44757:44763 compcert.lib.Zbits <> Zdecomp thm
R44757:44763 compcert.lib.Zbits <> Zdecomp thm
R44783:44789 compcert.lib.Zbits <> Zdecomp thm
R44783:44789 compcert.lib.Zbits <> Zdecomp thm
R44783:44789 compcert.lib.Zbits <> Zdecomp thm
R44816:44824 Coq.ZArith.BinInt Z testbit def
R44827:44834 compcert.lib.Zbits <> Zshiftin def
R44866:44868 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R44858:44863 Coq.ZArith.BinInt Z div2 def
R44869:44874 Coq.ZArith.BinInt Z div2 def
R44844:44847 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R44837:44841 Coq.ZArith.BinInt Z odd def
R44848:44852 Coq.ZArith.BinInt Z odd def
R44816:44824 Coq.ZArith.BinInt Z testbit def
R44827:44834 compcert.lib.Zbits <> Zshiftin def
R44866:44868 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R44858:44863 Coq.ZArith.BinInt Z div2 def
R44869:44874 Coq.ZArith.BinInt Z div2 def
R44844:44847 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R44837:44841 Coq.ZArith.BinInt Z odd def
R44848:44852 Coq.ZArith.BinInt Z odd def
R44906:44918 compcert.lib.Zbits <> Zshiftin_spec thm
R44906:44918 compcert.lib.Zbits <> Zshiftin_spec thm
R44906:44918 compcert.lib.Zbits <> Zshiftin_spec thm
R44906:44918 compcert.lib.Zbits <> Zshiftin_spec thm
R44906:44918 compcert.lib.Zbits <> Zshiftin_spec thm
R44906:44918 compcert.lib.Zbits <> Zshiftin_spec thm
R44957:44977 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44957:44977 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44957:44977 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44957:44977 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44957:44977 compcert.lib.Zbits <> Ztestbit_shiftin_base thm
R44995:44999 Coq.ZArith.BinInt Z mul def
R45016:45020 Coq.ZArith.BinInt Z odd def
R45036:45040 Coq.ZArith.BinInt Z odd def
R45016:45020 Coq.ZArith.BinInt Z odd def
R45036:45040 Coq.ZArith.BinInt Z odd def
R45036:45040 Coq.ZArith.BinInt Z odd def
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45093:45108 compcert.lib.Zbits <> Ztestbit_shiftin thm
R45131:45133 compcert.lib.Coqlib <> zeq def
R45131:45133 compcert.lib.Coqlib <> zeq def
R45204:45209 Coq.ZArith.BinInt Z succ def
R45204:45209 Coq.ZArith.BinInt Z succ def
R45236:45256 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45236:45256 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45236:45256 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45236:45256 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45236:45256 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45236:45256 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R45236:45256 compcert.lib.Zbits <> Ztestbit_shiftin_succ thm
R44995:44999 Coq.ZArith.BinInt Z mul def
prf 45295:45303 Make add_is_or
binder 45315:45315 <> x:404
binder 45317:45317 <> y:405
R45336:45341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45349:45351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45342:45344 compcert.lib.Integers Make add def
R45348:45348 compcert.lib.Integers <> y:405 var
R45346:45346 compcert.lib.Integers <> x:404 var
R45352:45353 compcert.lib.Integers Make or def
R45357:45357 compcert.lib.Integers <> y:405 var
R45355:45355 compcert.lib.Integers <> x:404 var
R45329:45331 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45322:45324 compcert.lib.Integers Make and def
R45328:45328 compcert.lib.Integers <> y:405 var
R45326:45326 compcert.lib.Integers <> x:404 var
R45332:45335 compcert.lib.Integers Make zero def
R45387:45389 compcert.lib.Integers Make add def
R45400:45411 compcert.lib.Integers Make testbit_repr thm
R45400:45411 compcert.lib.Integers Make testbit_repr thm
R45400:45411 compcert.lib.Integers Make testbit_repr thm
R45400:45411 compcert.lib.Integers Make testbit_repr thm
R45428:45438 compcert.lib.Integers Make Z_add_is_or thm
R45428:45438 compcert.lib.Integers Make Z_add_is_or thm
R45485:45487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45466:45472 compcert.lib.Integers Make testbit def
R45475:45477 compcert.lib.Integers Make and def
R45488:45494 compcert.lib.Integers Make testbit def
R45496:45499 compcert.lib.Integers Make zero def
R45485:45487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45466:45472 compcert.lib.Integers Make testbit def
R45475:45477 compcert.lib.Integers Make and def
R45488:45494 compcert.lib.Integers Make testbit def
R45496:45499 compcert.lib.Integers Make zero def
prf 45581:45589 Make xor_is_or
binder 45601:45601 <> x:406
binder 45603:45603 <> y:407
R45620:45623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45631:45633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45624:45626 compcert.lib.Integers Make xor def
R45630:45630 compcert.lib.Integers <> y:407 var
R45628:45628 compcert.lib.Integers <> x:406 var
R45634:45635 compcert.lib.Integers Make or def
R45639:45639 compcert.lib.Integers <> y:407 var
R45637:45637 compcert.lib.Integers <> x:406 var
R45613:45615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45606:45608 compcert.lib.Integers Make and def
R45612:45612 compcert.lib.Integers <> y:407 var
R45610:45610 compcert.lib.Integers <> x:406 var
R45616:45619 compcert.lib.Integers Make zero def
R45691:45693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45672:45678 compcert.lib.Integers Make testbit def
R45681:45683 compcert.lib.Integers Make and def
R45694:45700 compcert.lib.Integers Make testbit def
R45702:45705 compcert.lib.Integers Make zero def
R45691:45693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45672:45678 compcert.lib.Integers Make testbit def
R45681:45683 compcert.lib.Integers Make and def
R45694:45700 compcert.lib.Integers Make testbit def
R45702:45705 compcert.lib.Integers Make zero def
R45774:45780 compcert.lib.Integers Make testbit def
R45798:45804 compcert.lib.Integers Make testbit def
R45774:45780 compcert.lib.Integers Make testbit def
R45798:45804 compcert.lib.Integers Make testbit def
R45798:45804 compcert.lib.Integers Make testbit def
prf 45850:45859 Make add_is_xor
binder 45871:45871 <> x:408
binder 45873:45873 <> y:409
R45892:45897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45905:45907 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45898:45900 compcert.lib.Integers Make add def
R45904:45904 compcert.lib.Integers <> y:409 var
R45902:45902 compcert.lib.Integers <> x:408 var
R45908:45910 compcert.lib.Integers Make xor def
R45914:45914 compcert.lib.Integers <> y:409 var
R45912:45912 compcert.lib.Integers <> x:408 var
R45885:45887 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45878:45880 compcert.lib.Integers Make and def
R45884:45884 compcert.lib.Integers <> y:409 var
R45882:45882 compcert.lib.Integers <> x:408 var
R45888:45891 compcert.lib.Integers Make zero def
R45942:45950 compcert.lib.Integers Make xor_is_or thm
R45942:45950 compcert.lib.Integers Make xor_is_or thm
R45942:45950 compcert.lib.Integers Make xor_is_or thm
R45942:45950 compcert.lib.Integers Make xor_is_or thm
R45965:45973 compcert.lib.Integers Make add_is_or thm
R45965:45973 compcert.lib.Integers Make add_is_or thm
prf 45996:46002 Make add_and
binder 46014:46014 <> x:410
binder 46016:46016 <> y:411
binder 46018:46018 <> z:412
R46037:46042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46066:46068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46043:46045 compcert.lib.Integers Make add def
R46058:46060 compcert.lib.Integers Make and def
R46064:46064 compcert.lib.Integers <> z:412 var
R46062:46062 compcert.lib.Integers <> x:410 var
R46048:46050 compcert.lib.Integers Make and def
R46054:46054 compcert.lib.Integers <> y:411 var
R46052:46052 compcert.lib.Integers <> x:410 var
R46069:46071 compcert.lib.Integers Make and def
R46076:46077 compcert.lib.Integers Make or def
R46081:46081 compcert.lib.Integers <> z:412 var
R46079:46079 compcert.lib.Integers <> y:411 var
R46073:46073 compcert.lib.Integers <> x:410 var
R46030:46032 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46023:46025 compcert.lib.Integers Make and def
R46029:46029 compcert.lib.Integers <> z:412 var
R46027:46027 compcert.lib.Integers <> y:411 var
R46033:46036 compcert.lib.Integers Make zero def
R46110:46118 compcert.lib.Integers Make add_is_or thm
R46110:46118 compcert.lib.Integers Make add_is_or thm
R46110:46118 compcert.lib.Integers Make add_is_or thm
R46110:46118 compcert.lib.Integers Make add_is_or thm
R46131:46144 compcert.lib.Integers Make and_or_distrib thm
R46131:46144 compcert.lib.Integers Make and_or_distrib thm
R46131:46144 compcert.lib.Integers Make and_or_distrib thm
R46164:46173 compcert.lib.Integers Make and_commut thm
R46164:46173 compcert.lib.Integers Make and_commut thm
R46164:46173 compcert.lib.Integers Make and_commut thm
R46191:46199 compcert.lib.Integers Make and_assoc thm
R46191:46199 compcert.lib.Integers Make and_assoc thm
R46191:46199 compcert.lib.Integers Make and_assoc thm
R46223:46231 compcert.lib.Integers Make and_assoc thm
R46223:46231 compcert.lib.Integers Make and_assoc thm
R46223:46231 compcert.lib.Integers Make and_assoc thm
R46223:46231 compcert.lib.Integers Make and_assoc thm
R46248:46257 compcert.lib.Integers Make and_commut thm
R46260:46262 compcert.lib.Integers Make and def
R46248:46257 compcert.lib.Integers Make and_commut thm
R46260:46262 compcert.lib.Integers Make and def
R46248:46257 compcert.lib.Integers Make and_commut thm
R46260:46262 compcert.lib.Integers Make and def
R46284:46292 compcert.lib.Integers Make and_assoc thm
R46284:46292 compcert.lib.Integers Make and_assoc thm
R46284:46292 compcert.lib.Integers Make and_assoc thm
R46316:46325 compcert.lib.Integers Make and_commut thm
R46316:46325 compcert.lib.Integers Make and_commut thm
R46316:46325 compcert.lib.Integers Make and_commut thm
R46334:46341 compcert.lib.Integers Make and_zero thm
R46334:46341 compcert.lib.Integers Make and_zero thm
prf 46388:46395 Make bits_shl
binder 46407:46407 <> x:413
binder 46409:46409 <> y:414
binder 46411:46411 <> i:415
R46434:46439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46459:46463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46440:46446 compcert.lib.Integers Make testbit def
R46458:46458 compcert.lib.Integers <> i:415 var
R46449:46451 compcert.lib.Integers Make shl def
R46455:46455 compcert.lib.Integers <> y:414 var
R46453:46453 compcert.lib.Integers <> x:413 var
R46467:46469 compcert.lib.Coqlib <> zlt def
R46474:46481 compcert.lib.Integers Make unsigned def
R46483:46483 compcert.lib.Integers <> y:414 var
R46471:46471 compcert.lib.Integers <> i:415 var
R46502:46508 compcert.lib.Integers Make testbit def
R46514:46516 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R46513:46513 compcert.lib.Integers <> i:415 var
R46517:46524 compcert.lib.Integers Make unsigned def
R46526:46526 compcert.lib.Integers <> y:414 var
R46510:46510 compcert.lib.Integers <> x:413 var
R46491:46495 Coq.Init.Datatypes <> false constr
R46417:46420 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46422:46424 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46421:46421 compcert.lib.Integers <> i:415 var
R46421:46421 compcert.lib.Integers <> i:415 var
R46425:46433 compcert.lib.Integers Make zwordsize def
R46554:46556 compcert.lib.Integers Make shl def
R46567:46578 compcert.lib.Integers Make testbit_repr thm
R46567:46578 compcert.lib.Integers Make testbit_repr thm
R46567:46578 compcert.lib.Integers Make testbit_repr thm
R46567:46578 compcert.lib.Integers Make testbit_repr thm
R46599:46601 compcert.lib.Coqlib <> zlt def
R46606:46613 compcert.lib.Integers Make unsigned def
R46599:46601 compcert.lib.Coqlib <> zlt def
R46606:46613 compcert.lib.Integers Make unsigned def
R46628:46644 Coq.ZArith.BinInt Z shiftl_spec_low thm
R46628:46644 Coq.ZArith.BinInt Z shiftl_spec_low thm
R46661:46678 Coq.ZArith.BinInt Z shiftl_spec_high thm
R46661:46678 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 46703:46711 Make bits_shru
binder 46723:46723 <> x:416
binder 46725:46725 <> y:417
binder 46727:46727 <> i:418
R46750:46755 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46776:46780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46756:46762 compcert.lib.Integers Make testbit def
R46775:46775 compcert.lib.Integers <> i:418 var
R46765:46768 compcert.lib.Integers Make shru def
R46772:46772 compcert.lib.Integers <> y:417 var
R46770:46770 compcert.lib.Integers <> x:416 var
R46784:46786 compcert.lib.Coqlib <> zlt def
R46805:46813 compcert.lib.Integers Make zwordsize def
R46790:46792 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46789:46789 compcert.lib.Integers <> i:418 var
R46793:46800 compcert.lib.Integers Make unsigned def
R46802:46802 compcert.lib.Integers <> y:417 var
R46852:46856 Coq.Init.Datatypes <> false constr
R46820:46826 compcert.lib.Integers Make testbit def
R46832:46834 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46831:46831 compcert.lib.Integers <> i:418 var
R46835:46842 compcert.lib.Integers Make unsigned def
R46844:46844 compcert.lib.Integers <> y:417 var
R46828:46828 compcert.lib.Integers <> x:416 var
R46733:46736 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46738:46740 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R46737:46737 compcert.lib.Integers <> i:418 var
R46737:46737 compcert.lib.Integers <> i:418 var
R46741:46749 compcert.lib.Integers Make zwordsize def
R46883:46886 compcert.lib.Integers Make shru def
R46897:46908 compcert.lib.Integers Make testbit_repr thm
R46897:46908 compcert.lib.Integers Make testbit_repr thm
R46897:46908 compcert.lib.Integers Make testbit_repr thm
R46897:46908 compcert.lib.Integers Make testbit_repr thm
R46927:46939 Coq.ZArith.BinInt Z shiftr_spec thm
R46927:46939 Coq.ZArith.BinInt Z shiftr_spec thm
R46927:46939 Coq.ZArith.BinInt Z shiftr_spec thm
R46927:46939 Coq.ZArith.BinInt Z shiftr_spec thm
R46948:46954 compcert.lib.Integers Make testbit def
R46960:46962 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46963:46970 compcert.lib.Integers Make unsigned def
R46948:46954 compcert.lib.Integers Make testbit def
R46960:46962 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46963:46970 compcert.lib.Integers Make unsigned def
R46989:46991 compcert.lib.Coqlib <> zlt def
R47010:47018 compcert.lib.Integers Make zwordsize def
R46995:46997 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46998:47005 compcert.lib.Integers Make unsigned def
R46989:46991 compcert.lib.Coqlib <> zlt def
R47010:47018 compcert.lib.Integers Make zwordsize def
R46995:46997 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R46998:47005 compcert.lib.Integers Make unsigned def
R47038:47047 compcert.lib.Integers Make bits_above thm
R47038:47047 compcert.lib.Integers Make bits_above thm
prf 47075:47082 Make bits_shr
binder 47094:47094 <> x:419
binder 47096:47096 <> y:420
binder 47098:47098 <> i:421
R47121:47126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47146:47150 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47127:47133 compcert.lib.Integers Make testbit def
R47145:47145 compcert.lib.Integers <> i:421 var
R47136:47138 compcert.lib.Integers Make shr def
R47142:47142 compcert.lib.Integers <> y:420 var
R47140:47140 compcert.lib.Integers <> x:419 var
R47151:47157 compcert.lib.Integers Make testbit def
R47165:47167 compcert.lib.Coqlib <> zlt def
R47186:47194 compcert.lib.Integers Make zwordsize def
R47171:47173 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47170:47170 compcert.lib.Integers <> i:421 var
R47174:47181 compcert.lib.Integers Make unsigned def
R47183:47183 compcert.lib.Integers <> y:420 var
R47230:47232 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R47221:47229 compcert.lib.Integers Make zwordsize def
R47202:47204 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R47201:47201 compcert.lib.Integers <> i:421 var
R47205:47212 compcert.lib.Integers Make unsigned def
R47214:47214 compcert.lib.Integers <> y:420 var
R47159:47159 compcert.lib.Integers <> x:419 var
R47104:47107 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47109:47111 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47108:47108 compcert.lib.Integers <> i:421 var
R47108:47108 compcert.lib.Integers <> i:421 var
R47112:47120 compcert.lib.Integers Make zwordsize def
R47261:47263 compcert.lib.Integers Make shr def
R47274:47285 compcert.lib.Integers Make testbit_repr thm
R47274:47285 compcert.lib.Integers Make testbit_repr thm
R47274:47285 compcert.lib.Integers Make testbit_repr thm
R47274:47285 compcert.lib.Integers Make testbit_repr thm
R47304:47316 Coq.ZArith.BinInt Z shiftr_spec thm
R47304:47316 Coq.ZArith.BinInt Z shiftr_spec thm
R47304:47316 Coq.ZArith.BinInt Z shiftr_spec thm
R47304:47316 Coq.ZArith.BinInt Z shiftr_spec thm
R47325:47335 compcert.lib.Integers Make bits_signed thm
R47325:47335 compcert.lib.Integers Make bits_signed thm
R47352:47365 compcert.lib.Integers Make unsigned_range thm
R47352:47365 compcert.lib.Integers Make unsigned_range thm
R47402:47409 compcert.lib.Integers Make bits_shl thm
R47411:47419 compcert.lib.Integers Make bits_shru thm
R47421:47428 compcert.lib.Integers Make bits_shr thm
prf 47446:47453 Make shl_zero
binder 47463:47463 <> x:422
R47476:47478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47466:47468 compcert.lib.Integers Make shl def
R47472:47475 compcert.lib.Integers Make zero def
R47470:47470 compcert.lib.Integers <> x:422 var
R47479:47479 compcert.lib.Integers <> x:422 var
R47510:47522 compcert.lib.Integers Make unsigned_zero thm
R47510:47522 compcert.lib.Integers Make unsigned_zero thm
R47510:47522 compcert.lib.Integers Make unsigned_zero thm
R47533:47541 compcert.lib.Coqlib <> zlt_false thm
R47533:47541 compcert.lib.Coqlib <> zlt_false thm
R47533:47541 compcert.lib.Coqlib <> zlt_false thm
R47533:47541 compcert.lib.Coqlib <> zlt_false thm
prf 47575:47591 Make bitwise_binop_shl
binder 47603:47603 <> f:423
binder 47605:47606 <> f':424
binder 47608:47608 <> x:425
binder 47610:47610 <> y:426
binder 47612:47612 <> n:427
R47617:47617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47704:47710 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47733:47738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47760:47762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47739:47739 compcert.lib.Integers <> f:423 var
R47752:47754 compcert.lib.Integers Make shl def
R47758:47758 compcert.lib.Integers <> n:427 var
R47756:47756 compcert.lib.Integers <> y:426 var
R47742:47744 compcert.lib.Integers Make shl def
R47748:47748 compcert.lib.Integers <> n:427 var
R47746:47746 compcert.lib.Integers <> x:425 var
R47763:47765 compcert.lib.Integers Make shl def
R47775:47775 compcert.lib.Integers <> n:427 var
R47768:47768 compcert.lib.Integers <> f:423 var
R47772:47772 compcert.lib.Integers <> y:426 var
R47770:47770 compcert.lib.Integers <> x:425 var
R47725:47727 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47711:47712 compcert.lib.Integers <> f':424 var
R47720:47724 Coq.Init.Datatypes <> false constr
R47714:47718 Coq.Init.Datatypes <> false constr
R47728:47732 Coq.Init.Datatypes <> false constr
binder 47625:47625 <> x:428
binder 47627:47627 <> y:429
binder 47629:47629 <> i:430
R47650:47653 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47671:47673 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47654:47660 compcert.lib.Integers Make testbit def
R47670:47670 compcert.lib.Integers <> i:430 var
R47663:47663 compcert.lib.Integers <> f:423 var
R47667:47667 compcert.lib.Integers <> y:429 var
R47665:47665 compcert.lib.Integers <> x:428 var
R47674:47675 compcert.lib.Integers <> f':424 var
R47692:47698 compcert.lib.Integers Make testbit def
R47702:47702 compcert.lib.Integers <> i:430 var
R47700:47700 compcert.lib.Integers <> y:429 var
R47678:47684 compcert.lib.Integers Make testbit def
R47688:47688 compcert.lib.Integers <> i:430 var
R47686:47686 compcert.lib.Integers <> x:428 var
R47633:47636 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47638:47640 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R47637:47637 compcert.lib.Integers <> i:430 var
R47637:47637 compcert.lib.Integers <> i:430 var
R47641:47649 compcert.lib.Integers Make zwordsize def
R47801:47812 compcert.lib.Integers Make same_bits_eq thm
R47801:47812 compcert.lib.Integers Make same_bits_eq thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47851:47858 compcert.lib.Integers Make bits_shl thm
R47879:47881 compcert.lib.Coqlib <> zlt def
R47886:47893 compcert.lib.Integers Make unsigned def
R47879:47881 compcert.lib.Coqlib <> zlt def
R47886:47893 compcert.lib.Integers Make unsigned def
R47937:47950 compcert.lib.Integers Make unsigned_range thm
R47937:47950 compcert.lib.Integers Make unsigned_range thm
prf 47975:47981 Make and_shl
binder 47993:47993 <> x:431
binder 47995:47995 <> y:432
binder 47997:47997 <> n:433
R48025:48027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48002:48004 compcert.lib.Integers Make and def
R48017:48019 compcert.lib.Integers Make shl def
R48023:48023 compcert.lib.Integers <> n:433 var
R48021:48021 compcert.lib.Integers <> y:432 var
R48007:48009 compcert.lib.Integers Make shl def
R48013:48013 compcert.lib.Integers <> n:433 var
R48011:48011 compcert.lib.Integers <> x:431 var
R48028:48030 compcert.lib.Integers Make shl def
R48042:48042 compcert.lib.Integers <> n:433 var
R48033:48035 compcert.lib.Integers Make and def
R48039:48039 compcert.lib.Integers <> y:432 var
R48037:48037 compcert.lib.Integers <> x:431 var
R48091:48094 Coq.Init.Datatypes <> andb def
R48068:48084 compcert.lib.Integers Make bitwise_binop_shl thm
R48091:48094 Coq.Init.Datatypes <> andb def
R48068:48084 compcert.lib.Integers Make bitwise_binop_shl thm
R48103:48110 compcert.lib.Integers Make bits_and thm
R48103:48110 compcert.lib.Integers Make bits_and thm
prf 48133:48138 Make or_shl
binder 48150:48150 <> x:434
binder 48152:48152 <> y:435
binder 48154:48154 <> n:436
R48181:48183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48159:48160 compcert.lib.Integers Make or def
R48173:48175 compcert.lib.Integers Make shl def
R48179:48179 compcert.lib.Integers <> n:436 var
R48177:48177 compcert.lib.Integers <> y:435 var
R48163:48165 compcert.lib.Integers Make shl def
R48169:48169 compcert.lib.Integers <> n:436 var
R48167:48167 compcert.lib.Integers <> x:434 var
R48184:48186 compcert.lib.Integers Make shl def
R48197:48197 compcert.lib.Integers <> n:436 var
R48189:48190 compcert.lib.Integers Make or def
R48194:48194 compcert.lib.Integers <> y:435 var
R48192:48192 compcert.lib.Integers <> x:434 var
R48246:48248 Coq.Init.Datatypes <> orb def
R48223:48239 compcert.lib.Integers Make bitwise_binop_shl thm
R48246:48248 Coq.Init.Datatypes <> orb def
R48223:48239 compcert.lib.Integers Make bitwise_binop_shl thm
R48257:48263 compcert.lib.Integers Make bits_or thm
R48257:48263 compcert.lib.Integers Make bits_or thm
prf 48286:48292 Make xor_shl
binder 48304:48304 <> x:437
binder 48306:48306 <> y:438
binder 48308:48308 <> n:439
R48336:48338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48313:48315 compcert.lib.Integers Make xor def
R48328:48330 compcert.lib.Integers Make shl def
R48334:48334 compcert.lib.Integers <> n:439 var
R48332:48332 compcert.lib.Integers <> y:438 var
R48318:48320 compcert.lib.Integers Make shl def
R48324:48324 compcert.lib.Integers <> n:439 var
R48322:48322 compcert.lib.Integers <> x:437 var
R48339:48341 compcert.lib.Integers Make shl def
R48353:48353 compcert.lib.Integers <> n:439 var
R48344:48346 compcert.lib.Integers Make xor def
R48350:48350 compcert.lib.Integers <> y:438 var
R48348:48348 compcert.lib.Integers <> x:437 var
R48402:48405 Coq.Init.Datatypes <> xorb def
R48379:48395 compcert.lib.Integers Make bitwise_binop_shl thm
R48402:48405 Coq.Init.Datatypes <> xorb def
R48379:48395 compcert.lib.Integers Make bitwise_binop_shl thm
R48414:48421 compcert.lib.Integers Make bits_xor thm
R48414:48421 compcert.lib.Integers Make bits_xor thm
prf 48442:48448 Make ltu_inv
binder 48460:48460 <> x:440
binder 48462:48462 <> y:441
R48479:48482 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48484:48487 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48498:48500 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48488:48495 compcert.lib.Integers Make unsigned def
R48497:48497 compcert.lib.Integers <> x:440 var
R48488:48495 compcert.lib.Integers Make unsigned def
R48497:48497 compcert.lib.Integers <> x:440 var
R48501:48508 compcert.lib.Integers Make unsigned def
R48510:48510 compcert.lib.Integers <> y:441 var
R48472:48474 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48465:48467 compcert.lib.Integers Make ltu def
R48471:48471 compcert.lib.Integers <> y:441 var
R48469:48469 compcert.lib.Integers <> x:440 var
R48475:48478 Coq.Init.Datatypes <> true constr
R48529:48531 compcert.lib.Integers Make ltu def
R48552:48554 compcert.lib.Coqlib <> zlt def
R48570:48577 compcert.lib.Integers Make unsigned def
R48557:48564 compcert.lib.Integers Make unsigned def
R48552:48554 compcert.lib.Coqlib <> zlt def
R48570:48577 compcert.lib.Integers Make unsigned def
R48557:48564 compcert.lib.Integers Make unsigned def
R48611:48624 compcert.lib.Integers Make unsigned_range thm
R48611:48624 compcert.lib.Integers Make unsigned_range thm
prf 48663:48679 Make ltu_iwordsize_inv
binder 48691:48691 <> x:442
R48716:48719 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48721:48724 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48735:48737 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R48725:48732 compcert.lib.Integers Make unsigned def
R48734:48734 compcert.lib.Integers <> x:442 var
R48725:48732 compcert.lib.Integers Make unsigned def
R48734:48734 compcert.lib.Integers <> x:442 var
R48738:48746 compcert.lib.Integers Make zwordsize def
R48709:48711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48694:48696 compcert.lib.Integers Make ltu def
R48700:48708 compcert.lib.Integers Make iwordsize def
R48698:48698 compcert.lib.Integers <> x:442 var
R48712:48715 Coq.Init.Datatypes <> true constr
R48778:48784 compcert.lib.Integers Make ltu_inv thm
R48778:48784 compcert.lib.Integers Make ltu_inv thm
R48802:48823 compcert.lib.Integers Make unsigned_repr_wordsize thm
R48802:48823 compcert.lib.Integers Make unsigned_repr_wordsize thm
R48802:48823 compcert.lib.Integers Make unsigned_repr_wordsize thm
prf 48846:48852 Make shl_shl
binder 48864:48864 <> x:443
binder 48866:48866 <> y:444
binder 48868:48868 <> z:445
R48895:48900 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48923:48928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48959:48964 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48980:48982 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48965:48967 compcert.lib.Integers Make shl def
R48979:48979 compcert.lib.Integers <> z:445 var
R48970:48972 compcert.lib.Integers Make shl def
R48976:48976 compcert.lib.Integers <> y:444 var
R48974:48974 compcert.lib.Integers <> x:443 var
R48983:48985 compcert.lib.Integers Make shl def
R48990:48992 compcert.lib.Integers Make add def
R48996:48996 compcert.lib.Integers <> z:445 var
R48994:48994 compcert.lib.Integers <> y:444 var
R48987:48987 compcert.lib.Integers <> x:443 var
R48952:48954 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48929:48931 compcert.lib.Integers Make ltu def
R48943:48951 compcert.lib.Integers Make iwordsize def
R48934:48936 compcert.lib.Integers Make add def
R48940:48940 compcert.lib.Integers <> z:445 var
R48938:48938 compcert.lib.Integers <> y:444 var
R48955:48958 Coq.Init.Datatypes <> true constr
R48916:48918 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48901:48903 compcert.lib.Integers Make ltu def
R48907:48915 compcert.lib.Integers Make iwordsize def
R48905:48905 compcert.lib.Integers <> z:445 var
R48919:48922 Coq.Init.Datatypes <> true constr
R48888:48890 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48873:48875 compcert.lib.Integers Make ltu def
R48879:48887 compcert.lib.Integers Make iwordsize def
R48877:48877 compcert.lib.Integers <> y:444 var
R48891:48894 Coq.Init.Datatypes <> true constr
R49031:49047 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49055:49071 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49031:49047 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49055:49071 compcert.lib.Integers Make ltu_iwordsize_inv thm
R49116:49118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49098:49105 compcert.lib.Integers Make unsigned def
R49108:49110 compcert.lib.Integers Make add def
R49129:49131 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R49119:49126 compcert.lib.Integers Make unsigned def
R49132:49139 compcert.lib.Integers Make unsigned def
R49116:49118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49098:49105 compcert.lib.Integers Make unsigned def
R49108:49110 compcert.lib.Integers Make add def
R49129:49131 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R49119:49126 compcert.lib.Integers Make unsigned def
R49132:49139 compcert.lib.Integers Make unsigned def
R49156:49158 compcert.lib.Integers Make add def
R49167:49179 compcert.lib.Integers Make unsigned_repr thm
R49167:49179 compcert.lib.Integers Make unsigned_repr thm
R49197:49221 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R49197:49221 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R49237:49248 compcert.lib.Integers Make same_bits_eq thm
R49237:49248 compcert.lib.Integers Make same_bits_eq thm
R49269:49276 compcert.lib.Integers Make bits_shl thm
R49269:49276 compcert.lib.Integers Make bits_shl thm
R49269:49276 compcert.lib.Integers Make bits_shl thm
R49269:49276 compcert.lib.Integers Make bits_shl thm
R49297:49299 compcert.lib.Coqlib <> zlt def
R49304:49311 compcert.lib.Integers Make unsigned def
R49297:49299 compcert.lib.Coqlib <> zlt def
R49304:49311 compcert.lib.Integers Make unsigned def
R49330:49337 compcert.lib.Integers Make bits_shl thm
R49330:49337 compcert.lib.Integers Make bits_shl thm
R49330:49337 compcert.lib.Integers Make bits_shl thm
R49330:49337 compcert.lib.Integers Make bits_shl thm
R49354:49361 compcert.lib.Coqlib <> zlt_true thm
R49354:49361 compcert.lib.Coqlib <> zlt_true thm
R49354:49361 compcert.lib.Coqlib <> zlt_true thm
R49354:49361 compcert.lib.Coqlib <> zlt_true thm
R49387:49394 compcert.lib.Integers Make bits_shl thm
R49387:49394 compcert.lib.Integers Make bits_shl thm
R49387:49394 compcert.lib.Integers Make bits_shl thm
R49387:49394 compcert.lib.Integers Make bits_shl thm
R49407:49409 compcert.lib.Coqlib <> zlt def
R49429:49436 compcert.lib.Integers Make unsigned def
R49413:49415 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49416:49423 compcert.lib.Integers Make unsigned def
R49407:49409 compcert.lib.Coqlib <> zlt def
R49429:49436 compcert.lib.Integers Make unsigned def
R49413:49415 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49416:49423 compcert.lib.Integers Make unsigned def
R49457:49464 compcert.lib.Integers Make bits_shl thm
R49457:49464 compcert.lib.Integers Make bits_shl thm
R49457:49464 compcert.lib.Integers Make bits_shl thm
R49457:49464 compcert.lib.Integers Make bits_shl thm
R49481:49488 compcert.lib.Coqlib <> zlt_true thm
R49481:49488 compcert.lib.Coqlib <> zlt_true thm
R49481:49488 compcert.lib.Coqlib <> zlt_true thm
R49481:49488 compcert.lib.Coqlib <> zlt_true thm
R49516:49523 compcert.lib.Integers Make bits_shl thm
R49516:49523 compcert.lib.Integers Make bits_shl thm
R49516:49523 compcert.lib.Integers Make bits_shl thm
R49516:49523 compcert.lib.Integers Make bits_shl thm
R49540:49548 compcert.lib.Coqlib <> zlt_false thm
R49540:49548 compcert.lib.Coqlib <> zlt_false thm
R49540:49548 compcert.lib.Coqlib <> zlt_false thm
R49540:49548 compcert.lib.Coqlib <> zlt_false thm
prf 49595:49601 Make sub_ltu
binder 49613:49613 <> x:446
binder 49615:49615 <> y:447
R49636:49643 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49645:49648 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R49672:49675 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R49659:49661 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49649:49656 compcert.lib.Integers Make unsigned def
R49658:49658 compcert.lib.Integers <> y:447 var
R49662:49669 compcert.lib.Integers Make unsigned def
R49671:49671 compcert.lib.Integers <> x:446 var
R49659:49661 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R49649:49656 compcert.lib.Integers Make unsigned def
R49658:49658 compcert.lib.Integers <> y:447 var
R49662:49669 compcert.lib.Integers Make unsigned def
R49671:49671 compcert.lib.Integers <> x:446 var
R49676:49683 compcert.lib.Integers Make unsigned def
R49685:49685 compcert.lib.Integers <> y:447 var
R49629:49631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49622:49624 compcert.lib.Integers Make ltu def
R49628:49628 compcert.lib.Integers <> y:447 var
R49626:49626 compcert.lib.Integers <> x:446 var
R49632:49635 Coq.Init.Datatypes <> true constr
R49719:49725 compcert.lib.Integers Make ltu_inv thm
R49719:49725 compcert.lib.Integers Make ltu_inv thm
prf 49777:49785 Make shru_zero
binder 49795:49795 <> x:448
R49809:49811 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49798:49801 compcert.lib.Integers Make shru def
R49805:49808 compcert.lib.Integers Make zero def
R49803:49803 compcert.lib.Integers <> x:448 var
R49812:49812 compcert.lib.Integers <> x:448 var
R49843:49855 compcert.lib.Integers Make unsigned_zero thm
R49843:49855 compcert.lib.Integers Make unsigned_zero thm
R49843:49855 compcert.lib.Integers Make unsigned_zero thm
R49866:49873 compcert.lib.Coqlib <> zlt_true thm
R49866:49873 compcert.lib.Coqlib <> zlt_true thm
R49866:49873 compcert.lib.Coqlib <> zlt_true thm
R49866:49873 compcert.lib.Coqlib <> zlt_true thm
prf 49907:49924 Make bitwise_binop_shru
binder 49936:49936 <> f:449
binder 49938:49939 <> f':450
binder 49941:49941 <> x:451
binder 49943:49943 <> y:452
binder 49945:49945 <> n:453
R49950:49950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50037:50043 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50066:50071 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50095:50097 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50072:50072 compcert.lib.Integers <> f:449 var
R50086:50089 compcert.lib.Integers Make shru def
R50093:50093 compcert.lib.Integers <> n:453 var
R50091:50091 compcert.lib.Integers <> y:452 var
R50075:50078 compcert.lib.Integers Make shru def
R50082:50082 compcert.lib.Integers <> n:453 var
R50080:50080 compcert.lib.Integers <> x:451 var
R50098:50101 compcert.lib.Integers Make shru def
R50111:50111 compcert.lib.Integers <> n:453 var
R50104:50104 compcert.lib.Integers <> f:449 var
R50108:50108 compcert.lib.Integers <> y:452 var
R50106:50106 compcert.lib.Integers <> x:451 var
R50058:50060 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50044:50045 compcert.lib.Integers <> f':450 var
R50053:50057 Coq.Init.Datatypes <> false constr
R50047:50051 Coq.Init.Datatypes <> false constr
R50061:50065 Coq.Init.Datatypes <> false constr
binder 49958:49958 <> x:454
binder 49960:49960 <> y:455
binder 49962:49962 <> i:456
R49983:49986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50004:50006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49987:49993 compcert.lib.Integers Make testbit def
R50003:50003 compcert.lib.Integers <> i:456 var
R49996:49996 compcert.lib.Integers <> f:449 var
R50000:50000 compcert.lib.Integers <> y:455 var
R49998:49998 compcert.lib.Integers <> x:454 var
R50007:50008 compcert.lib.Integers <> f':450 var
R50025:50031 compcert.lib.Integers Make testbit def
R50035:50035 compcert.lib.Integers <> i:456 var
R50033:50033 compcert.lib.Integers <> y:455 var
R50011:50017 compcert.lib.Integers Make testbit def
R50021:50021 compcert.lib.Integers <> i:456 var
R50019:50019 compcert.lib.Integers <> x:454 var
R49966:49969 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R49971:49973 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R49970:49970 compcert.lib.Integers <> i:456 var
R49970:49970 compcert.lib.Integers <> i:456 var
R49974:49982 compcert.lib.Integers Make zwordsize def
R50137:50148 compcert.lib.Integers Make same_bits_eq thm
R50137:50148 compcert.lib.Integers Make same_bits_eq thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50187:50195 compcert.lib.Integers Make bits_shru thm
R50216:50218 compcert.lib.Coqlib <> zlt def
R50237:50245 compcert.lib.Integers Make zwordsize def
R50222:50224 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50225:50232 compcert.lib.Integers Make unsigned def
R50216:50218 compcert.lib.Coqlib <> zlt def
R50237:50245 compcert.lib.Integers Make zwordsize def
R50222:50224 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R50225:50232 compcert.lib.Integers Make unsigned def
R50286:50299 compcert.lib.Integers Make unsigned_range thm
R50286:50299 compcert.lib.Integers Make unsigned_range thm
prf 50324:50331 Make and_shru
binder 50343:50343 <> x:457
binder 50345:50345 <> y:458
binder 50347:50347 <> n:459
R50377:50379 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50352:50354 compcert.lib.Integers Make and def
R50368:50371 compcert.lib.Integers Make shru def
R50375:50375 compcert.lib.Integers <> n:459 var
R50373:50373 compcert.lib.Integers <> y:458 var
R50357:50360 compcert.lib.Integers Make shru def
R50364:50364 compcert.lib.Integers <> n:459 var
R50362:50362 compcert.lib.Integers <> x:457 var
R50380:50383 compcert.lib.Integers Make shru def
R50395:50395 compcert.lib.Integers <> n:459 var
R50386:50388 compcert.lib.Integers Make and def
R50392:50392 compcert.lib.Integers <> y:458 var
R50390:50390 compcert.lib.Integers <> x:457 var
R50445:50448 Coq.Init.Datatypes <> andb def
R50421:50438 compcert.lib.Integers Make bitwise_binop_shru thm
R50445:50448 Coq.Init.Datatypes <> andb def
R50421:50438 compcert.lib.Integers Make bitwise_binop_shru thm
R50463:50470 compcert.lib.Integers Make bits_and thm
R50463:50470 compcert.lib.Integers Make bits_and thm
prf 50487:50493 Make or_shru
binder 50505:50505 <> x:460
binder 50507:50507 <> y:461
binder 50509:50509 <> n:462
R50538:50540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50514:50515 compcert.lib.Integers Make or def
R50529:50532 compcert.lib.Integers Make shru def
R50536:50536 compcert.lib.Integers <> n:462 var
R50534:50534 compcert.lib.Integers <> y:461 var
R50518:50521 compcert.lib.Integers Make shru def
R50525:50525 compcert.lib.Integers <> n:462 var
R50523:50523 compcert.lib.Integers <> x:460 var
R50541:50544 compcert.lib.Integers Make shru def
R50555:50555 compcert.lib.Integers <> n:462 var
R50547:50548 compcert.lib.Integers Make or def
R50552:50552 compcert.lib.Integers <> y:461 var
R50550:50550 compcert.lib.Integers <> x:460 var
R50605:50607 Coq.Init.Datatypes <> orb def
R50581:50598 compcert.lib.Integers Make bitwise_binop_shru thm
R50605:50607 Coq.Init.Datatypes <> orb def
R50581:50598 compcert.lib.Integers Make bitwise_binop_shru thm
R50622:50628 compcert.lib.Integers Make bits_or thm
R50622:50628 compcert.lib.Integers Make bits_or thm
prf 50645:50652 Make xor_shru
binder 50664:50664 <> x:463
binder 50666:50666 <> y:464
binder 50668:50668 <> n:465
R50698:50700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50673:50675 compcert.lib.Integers Make xor def
R50689:50692 compcert.lib.Integers Make shru def
R50696:50696 compcert.lib.Integers <> n:465 var
R50694:50694 compcert.lib.Integers <> y:464 var
R50678:50681 compcert.lib.Integers Make shru def
R50685:50685 compcert.lib.Integers <> n:465 var
R50683:50683 compcert.lib.Integers <> x:463 var
R50701:50704 compcert.lib.Integers Make shru def
R50716:50716 compcert.lib.Integers <> n:465 var
R50707:50709 compcert.lib.Integers Make xor def
R50713:50713 compcert.lib.Integers <> y:464 var
R50711:50711 compcert.lib.Integers <> x:463 var
R50766:50769 Coq.Init.Datatypes <> xorb def
R50742:50759 compcert.lib.Integers Make bitwise_binop_shru thm
R50766:50769 Coq.Init.Datatypes <> xorb def
R50742:50759 compcert.lib.Integers Make bitwise_binop_shru thm
R50784:50791 compcert.lib.Integers Make bits_xor thm
R50784:50791 compcert.lib.Integers Make bits_xor thm
prf 50808:50816 Make shru_shru
binder 50828:50828 <> x:466
binder 50830:50830 <> y:467
binder 50832:50832 <> z:468
R50859:50864 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50887:50892 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50923:50928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50946:50948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50929:50932 compcert.lib.Integers Make shru def
R50945:50945 compcert.lib.Integers <> z:468 var
R50935:50938 compcert.lib.Integers Make shru def
R50942:50942 compcert.lib.Integers <> y:467 var
R50940:50940 compcert.lib.Integers <> x:466 var
R50949:50952 compcert.lib.Integers Make shru def
R50957:50959 compcert.lib.Integers Make add def
R50963:50963 compcert.lib.Integers <> z:468 var
R50961:50961 compcert.lib.Integers <> y:467 var
R50954:50954 compcert.lib.Integers <> x:466 var
R50916:50918 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50893:50895 compcert.lib.Integers Make ltu def
R50907:50915 compcert.lib.Integers Make iwordsize def
R50898:50900 compcert.lib.Integers Make add def
R50904:50904 compcert.lib.Integers <> z:468 var
R50902:50902 compcert.lib.Integers <> y:467 var
R50919:50922 Coq.Init.Datatypes <> true constr
R50880:50882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50865:50867 compcert.lib.Integers Make ltu def
R50871:50879 compcert.lib.Integers Make iwordsize def
R50869:50869 compcert.lib.Integers <> z:468 var
R50883:50886 Coq.Init.Datatypes <> true constr
R50852:50854 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50837:50839 compcert.lib.Integers Make ltu def
R50843:50851 compcert.lib.Integers Make iwordsize def
R50841:50841 compcert.lib.Integers <> y:467 var
R50855:50858 Coq.Init.Datatypes <> true constr
R50998:51014 compcert.lib.Integers Make ltu_iwordsize_inv thm
R51022:51038 compcert.lib.Integers Make ltu_iwordsize_inv thm
R50998:51014 compcert.lib.Integers Make ltu_iwordsize_inv thm
R51022:51038 compcert.lib.Integers Make ltu_iwordsize_inv thm
R51083:51085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51065:51072 compcert.lib.Integers Make unsigned def
R51075:51077 compcert.lib.Integers Make add def
R51096:51098 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51086:51093 compcert.lib.Integers Make unsigned def
R51099:51106 compcert.lib.Integers Make unsigned def
R51083:51085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51065:51072 compcert.lib.Integers Make unsigned def
R51075:51077 compcert.lib.Integers Make add def
R51096:51098 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51086:51093 compcert.lib.Integers Make unsigned def
R51099:51106 compcert.lib.Integers Make unsigned def
R51123:51125 compcert.lib.Integers Make add def
R51134:51146 compcert.lib.Integers Make unsigned_repr thm
R51134:51146 compcert.lib.Integers Make unsigned_repr thm
R51164:51188 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R51164:51188 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R51204:51215 compcert.lib.Integers Make same_bits_eq thm
R51204:51215 compcert.lib.Integers Make same_bits_eq thm
R51236:51244 compcert.lib.Integers Make bits_shru thm
R51236:51244 compcert.lib.Integers Make bits_shru thm
R51236:51244 compcert.lib.Integers Make bits_shru thm
R51236:51244 compcert.lib.Integers Make bits_shru thm
R51265:51267 compcert.lib.Coqlib <> zlt def
R51286:51294 compcert.lib.Integers Make zwordsize def
R51271:51273 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51274:51281 compcert.lib.Integers Make unsigned def
R51265:51267 compcert.lib.Coqlib <> zlt def
R51286:51294 compcert.lib.Integers Make zwordsize def
R51271:51273 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51274:51281 compcert.lib.Integers Make unsigned def
R51310:51318 compcert.lib.Integers Make bits_shru thm
R51310:51318 compcert.lib.Integers Make bits_shru thm
R51310:51318 compcert.lib.Integers Make bits_shru thm
R51310:51318 compcert.lib.Integers Make bits_shru thm
R51331:51333 compcert.lib.Coqlib <> zlt def
R51365:51373 compcert.lib.Integers Make zwordsize def
R51350:51352 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51337:51339 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51340:51347 compcert.lib.Integers Make unsigned def
R51353:51360 compcert.lib.Integers Make unsigned def
R51331:51333 compcert.lib.Coqlib <> zlt def
R51365:51373 compcert.lib.Integers Make zwordsize def
R51350:51352 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51337:51339 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R51340:51347 compcert.lib.Integers Make unsigned def
R51353:51360 compcert.lib.Integers Make unsigned def
R51391:51399 compcert.lib.Integers Make bits_shru thm
R51391:51399 compcert.lib.Integers Make bits_shru thm
R51391:51399 compcert.lib.Integers Make bits_shru thm
R51391:51399 compcert.lib.Integers Make bits_shru thm
R51416:51423 compcert.lib.Coqlib <> zlt_true thm
R51416:51423 compcert.lib.Coqlib <> zlt_true thm
R51416:51423 compcert.lib.Coqlib <> zlt_true thm
R51416:51423 compcert.lib.Coqlib <> zlt_true thm
R51459:51467 compcert.lib.Integers Make bits_shru thm
R51459:51467 compcert.lib.Integers Make bits_shru thm
R51459:51467 compcert.lib.Integers Make bits_shru thm
R51459:51467 compcert.lib.Integers Make bits_shru thm
R51484:51492 compcert.lib.Coqlib <> zlt_false thm
R51484:51492 compcert.lib.Coqlib <> zlt_false thm
R51484:51492 compcert.lib.Coqlib <> zlt_false thm
R51484:51492 compcert.lib.Coqlib <> zlt_false thm
R51529:51537 compcert.lib.Integers Make bits_shru thm
R51529:51537 compcert.lib.Integers Make bits_shru thm
R51529:51537 compcert.lib.Integers Make bits_shru thm
R51529:51537 compcert.lib.Integers Make bits_shru thm
R51554:51562 compcert.lib.Coqlib <> zlt_false thm
R51554:51562 compcert.lib.Coqlib <> zlt_false thm
R51554:51562 compcert.lib.Coqlib <> zlt_false thm
R51554:51562 compcert.lib.Coqlib <> zlt_false thm
prf 51590:51597 Make shr_zero
binder 51607:51607 <> x:469
R51620:51622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51610:51612 compcert.lib.Integers Make shr def
R51616:51619 compcert.lib.Integers Make zero def
R51614:51614 compcert.lib.Integers <> x:469 var
R51623:51623 compcert.lib.Integers <> x:469 var
R51654:51666 compcert.lib.Integers Make unsigned_zero thm
R51654:51666 compcert.lib.Integers Make unsigned_zero thm
R51654:51666 compcert.lib.Integers Make unsigned_zero thm
R51677:51684 compcert.lib.Coqlib <> zlt_true thm
R51677:51684 compcert.lib.Coqlib <> zlt_true thm
R51677:51684 compcert.lib.Coqlib <> zlt_true thm
R51677:51684 compcert.lib.Coqlib <> zlt_true thm
prf 51718:51734 Make bitwise_binop_shr
binder 51746:51746 <> f:470
binder 51748:51749 <> f':471
binder 51751:51751 <> x:472
binder 51753:51753 <> y:473
binder 51755:51755 <> n:474
R51760:51760 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51847:51853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51875:51877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51854:51854 compcert.lib.Integers <> f:470 var
R51867:51869 compcert.lib.Integers Make shr def
R51873:51873 compcert.lib.Integers <> n:474 var
R51871:51871 compcert.lib.Integers <> y:473 var
R51857:51859 compcert.lib.Integers Make shr def
R51863:51863 compcert.lib.Integers <> n:474 var
R51861:51861 compcert.lib.Integers <> x:472 var
R51878:51880 compcert.lib.Integers Make shr def
R51890:51890 compcert.lib.Integers <> n:474 var
R51883:51883 compcert.lib.Integers <> f:470 var
R51887:51887 compcert.lib.Integers <> y:473 var
R51885:51885 compcert.lib.Integers <> x:472 var
binder 51768:51768 <> x:475
binder 51770:51770 <> y:476
binder 51772:51772 <> i:477
R51793:51796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51814:51816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51797:51803 compcert.lib.Integers Make testbit def
R51813:51813 compcert.lib.Integers <> i:477 var
R51806:51806 compcert.lib.Integers <> f:470 var
R51810:51810 compcert.lib.Integers <> y:476 var
R51808:51808 compcert.lib.Integers <> x:475 var
R51817:51818 compcert.lib.Integers <> f':471 var
R51835:51841 compcert.lib.Integers Make testbit def
R51845:51845 compcert.lib.Integers <> i:477 var
R51843:51843 compcert.lib.Integers <> y:476 var
R51821:51827 compcert.lib.Integers Make testbit def
R51831:51831 compcert.lib.Integers <> i:477 var
R51829:51829 compcert.lib.Integers <> x:475 var
R51776:51779 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R51781:51783 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R51780:51780 compcert.lib.Integers <> i:477 var
R51780:51780 compcert.lib.Integers <> i:477 var
R51784:51792 compcert.lib.Integers Make zwordsize def
R51916:51927 compcert.lib.Integers Make same_bits_eq thm
R51916:51927 compcert.lib.Integers Make same_bits_eq thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R51966:51973 compcert.lib.Integers Make bits_shr thm
R52013:52015 compcert.lib.Coqlib <> zlt def
R52034:52042 compcert.lib.Integers Make zwordsize def
R52019:52021 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52022:52029 compcert.lib.Integers Make unsigned def
R52013:52015 compcert.lib.Coqlib <> zlt def
R52034:52042 compcert.lib.Integers Make zwordsize def
R52019:52021 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52022:52029 compcert.lib.Integers Make unsigned def
R52060:52073 compcert.lib.Integers Make unsigned_range thm
R52060:52073 compcert.lib.Integers Make unsigned_range thm
prf 52105:52111 Make and_shr
binder 52123:52123 <> x:478
binder 52125:52125 <> y:479
binder 52127:52127 <> n:480
R52155:52157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52132:52134 compcert.lib.Integers Make and def
R52147:52149 compcert.lib.Integers Make shr def
R52153:52153 compcert.lib.Integers <> n:480 var
R52151:52151 compcert.lib.Integers <> y:479 var
R52137:52139 compcert.lib.Integers Make shr def
R52143:52143 compcert.lib.Integers <> n:480 var
R52141:52141 compcert.lib.Integers <> x:478 var
R52158:52160 compcert.lib.Integers Make shr def
R52172:52172 compcert.lib.Integers <> n:480 var
R52163:52165 compcert.lib.Integers Make and def
R52169:52169 compcert.lib.Integers <> y:479 var
R52167:52167 compcert.lib.Integers <> x:478 var
R52221:52224 Coq.Init.Datatypes <> andb def
R52198:52214 compcert.lib.Integers Make bitwise_binop_shr thm
R52221:52224 Coq.Init.Datatypes <> andb def
R52198:52214 compcert.lib.Integers Make bitwise_binop_shr thm
R52233:52240 compcert.lib.Integers Make bits_and thm
R52233:52240 compcert.lib.Integers Make bits_and thm
prf 52257:52262 Make or_shr
binder 52274:52274 <> x:481
binder 52276:52276 <> y:482
binder 52278:52278 <> n:483
R52305:52307 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52283:52284 compcert.lib.Integers Make or def
R52297:52299 compcert.lib.Integers Make shr def
R52303:52303 compcert.lib.Integers <> n:483 var
R52301:52301 compcert.lib.Integers <> y:482 var
R52287:52289 compcert.lib.Integers Make shr def
R52293:52293 compcert.lib.Integers <> n:483 var
R52291:52291 compcert.lib.Integers <> x:481 var
R52308:52310 compcert.lib.Integers Make shr def
R52321:52321 compcert.lib.Integers <> n:483 var
R52313:52314 compcert.lib.Integers Make or def
R52318:52318 compcert.lib.Integers <> y:482 var
R52316:52316 compcert.lib.Integers <> x:481 var
R52370:52372 Coq.Init.Datatypes <> orb def
R52347:52363 compcert.lib.Integers Make bitwise_binop_shr thm
R52370:52372 Coq.Init.Datatypes <> orb def
R52347:52363 compcert.lib.Integers Make bitwise_binop_shr thm
R52381:52387 compcert.lib.Integers Make bits_or thm
R52381:52387 compcert.lib.Integers Make bits_or thm
prf 52404:52410 Make xor_shr
binder 52422:52422 <> x:484
binder 52424:52424 <> y:485
binder 52426:52426 <> n:486
R52454:52456 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52431:52433 compcert.lib.Integers Make xor def
R52446:52448 compcert.lib.Integers Make shr def
R52452:52452 compcert.lib.Integers <> n:486 var
R52450:52450 compcert.lib.Integers <> y:485 var
R52436:52438 compcert.lib.Integers Make shr def
R52442:52442 compcert.lib.Integers <> n:486 var
R52440:52440 compcert.lib.Integers <> x:484 var
R52457:52459 compcert.lib.Integers Make shr def
R52471:52471 compcert.lib.Integers <> n:486 var
R52462:52464 compcert.lib.Integers Make xor def
R52468:52468 compcert.lib.Integers <> y:485 var
R52466:52466 compcert.lib.Integers <> x:484 var
R52520:52523 Coq.Init.Datatypes <> xorb def
R52497:52513 compcert.lib.Integers Make bitwise_binop_shr thm
R52520:52523 Coq.Init.Datatypes <> xorb def
R52497:52513 compcert.lib.Integers Make bitwise_binop_shr thm
R52532:52539 compcert.lib.Integers Make bits_xor thm
R52532:52539 compcert.lib.Integers Make bits_xor thm
prf 52556:52562 Make shr_shr
binder 52574:52574 <> x:487
binder 52576:52576 <> y:488
binder 52578:52578 <> z:489
R52605:52610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52633:52638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52669:52674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52690:52692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52675:52677 compcert.lib.Integers Make shr def
R52689:52689 compcert.lib.Integers <> z:489 var
R52680:52682 compcert.lib.Integers Make shr def
R52686:52686 compcert.lib.Integers <> y:488 var
R52684:52684 compcert.lib.Integers <> x:487 var
R52693:52695 compcert.lib.Integers Make shr def
R52700:52702 compcert.lib.Integers Make add def
R52706:52706 compcert.lib.Integers <> z:489 var
R52704:52704 compcert.lib.Integers <> y:488 var
R52697:52697 compcert.lib.Integers <> x:487 var
R52662:52664 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52639:52641 compcert.lib.Integers Make ltu def
R52653:52661 compcert.lib.Integers Make iwordsize def
R52644:52646 compcert.lib.Integers Make add def
R52650:52650 compcert.lib.Integers <> z:489 var
R52648:52648 compcert.lib.Integers <> y:488 var
R52665:52668 Coq.Init.Datatypes <> true constr
R52626:52628 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52611:52613 compcert.lib.Integers Make ltu def
R52617:52625 compcert.lib.Integers Make iwordsize def
R52615:52615 compcert.lib.Integers <> z:489 var
R52629:52632 Coq.Init.Datatypes <> true constr
R52598:52600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52583:52585 compcert.lib.Integers Make ltu def
R52589:52597 compcert.lib.Integers Make iwordsize def
R52587:52587 compcert.lib.Integers <> y:488 var
R52601:52604 Coq.Init.Datatypes <> true constr
R52741:52757 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52765:52781 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52741:52757 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52765:52781 compcert.lib.Integers Make ltu_iwordsize_inv thm
R52826:52828 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52808:52815 compcert.lib.Integers Make unsigned def
R52818:52820 compcert.lib.Integers Make add def
R52839:52841 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52829:52836 compcert.lib.Integers Make unsigned def
R52842:52849 compcert.lib.Integers Make unsigned def
R52826:52828 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52808:52815 compcert.lib.Integers Make unsigned def
R52818:52820 compcert.lib.Integers Make add def
R52839:52841 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R52829:52836 compcert.lib.Integers Make unsigned def
R52842:52849 compcert.lib.Integers Make unsigned def
R52866:52868 compcert.lib.Integers Make add def
R52877:52889 compcert.lib.Integers Make unsigned_repr thm
R52877:52889 compcert.lib.Integers Make unsigned_repr thm
R52907:52931 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R52907:52931 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R52947:52958 compcert.lib.Integers Make same_bits_eq thm
R52947:52958 compcert.lib.Integers Make same_bits_eq thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R52980:52987 compcert.lib.Integers Make bits_shr thm
R53017:53019 compcert.lib.Coqlib <> zlt def
R53038:53046 compcert.lib.Integers Make zwordsize def
R53023:53025 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53026:53033 compcert.lib.Integers Make unsigned def
R53017:53019 compcert.lib.Coqlib <> zlt def
R53038:53046 compcert.lib.Integers Make zwordsize def
R53023:53025 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53026:53033 compcert.lib.Integers Make unsigned def
R53074:53077 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53101:53101 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53088:53090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53078:53085 compcert.lib.Integers Make unsigned def
R53091:53098 compcert.lib.Integers Make unsigned def
R53124:53126 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53111:53113 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53114:53121 compcert.lib.Integers Make unsigned def
R53127:53134 compcert.lib.Integers Make unsigned def
R53074:53077 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53101:53101 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53088:53090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53078:53085 compcert.lib.Integers Make unsigned def
R53091:53098 compcert.lib.Integers Make unsigned def
R53124:53126 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53111:53113 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53114:53121 compcert.lib.Integers Make unsigned def
R53127:53134 compcert.lib.Integers Make unsigned def
R53164:53172 compcert.lib.Coqlib <> zlt_false thm
R53178:53180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53181:53188 compcert.lib.Integers Make unsigned def
R53191:53193 compcert.lib.Integers Make add def
R53164:53172 compcert.lib.Coqlib <> zlt_false thm
R53178:53180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53181:53188 compcert.lib.Integers Make unsigned def
R53191:53193 compcert.lib.Integers Make add def
R53164:53172 compcert.lib.Coqlib <> zlt_false thm
R53178:53180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53181:53188 compcert.lib.Integers Make unsigned def
R53191:53193 compcert.lib.Integers Make add def
R53164:53172 compcert.lib.Coqlib <> zlt_false thm
R53178:53180 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53181:53188 compcert.lib.Integers Make unsigned def
R53191:53193 compcert.lib.Integers Make add def
R53215:53217 compcert.lib.Coqlib <> zlt def
R53248:53256 compcert.lib.Integers Make zwordsize def
R53233:53235 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53229:53231 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53220:53228 compcert.lib.Integers Make zwordsize def
R53236:53243 compcert.lib.Integers Make unsigned def
R53215:53217 compcert.lib.Coqlib <> zlt def
R53248:53256 compcert.lib.Integers Make zwordsize def
R53233:53235 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53229:53231 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53220:53228 compcert.lib.Integers Make zwordsize def
R53236:53243 compcert.lib.Integers Make unsigned def
R53284:53286 compcert.lib.Coqlib <> zlt def
R53305:53313 compcert.lib.Integers Make zwordsize def
R53290:53292 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53293:53300 compcert.lib.Integers Make unsigned def
R53284:53286 compcert.lib.Coqlib <> zlt def
R53305:53313 compcert.lib.Integers Make zwordsize def
R53290:53292 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53293:53300 compcert.lib.Integers Make unsigned def
prf 53336:53347 Make and_shr_shru
binder 53359:53359 <> x:490
binder 53361:53361 <> y:491
binder 53363:53363 <> z:492
R53392:53394 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53368:53370 compcert.lib.Integers Make and def
R53383:53386 compcert.lib.Integers Make shru def
R53390:53390 compcert.lib.Integers <> z:492 var
R53388:53388 compcert.lib.Integers <> y:491 var
R53373:53375 compcert.lib.Integers Make shr def
R53379:53379 compcert.lib.Integers <> z:492 var
R53377:53377 compcert.lib.Integers <> x:490 var
R53395:53398 compcert.lib.Integers Make shru def
R53410:53410 compcert.lib.Integers <> z:492 var
R53401:53403 compcert.lib.Integers Make and def
R53407:53407 compcert.lib.Integers <> y:491 var
R53405:53405 compcert.lib.Integers <> x:490 var
R53436:53447 compcert.lib.Integers Make same_bits_eq thm
R53436:53447 compcert.lib.Integers Make same_bits_eq thm
R53468:53475 compcert.lib.Integers Make bits_and thm
R53468:53475 compcert.lib.Integers Make bits_and thm
R53468:53475 compcert.lib.Integers Make bits_and thm
R53468:53475 compcert.lib.Integers Make bits_and thm
R53492:53499 compcert.lib.Integers Make bits_shr thm
R53492:53499 compcert.lib.Integers Make bits_shr thm
R53492:53499 compcert.lib.Integers Make bits_shr thm
R53492:53499 compcert.lib.Integers Make bits_shr thm
R53517:53525 compcert.lib.Integers Make bits_shru thm
R53517:53525 compcert.lib.Integers Make bits_shru thm
R53517:53525 compcert.lib.Integers Make bits_shru thm
R53517:53525 compcert.lib.Integers Make bits_shru thm
R53517:53525 compcert.lib.Integers Make bits_shru thm
R53517:53525 compcert.lib.Integers Make bits_shru thm
R53517:53525 compcert.lib.Integers Make bits_shru thm
R53546:53548 compcert.lib.Coqlib <> zlt def
R53567:53575 compcert.lib.Integers Make zwordsize def
R53552:53554 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53555:53562 compcert.lib.Integers Make unsigned def
R53546:53548 compcert.lib.Coqlib <> zlt def
R53567:53575 compcert.lib.Integers Make zwordsize def
R53552:53554 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R53555:53562 compcert.lib.Integers Make unsigned def
R53591:53598 compcert.lib.Integers Make bits_and thm
R53591:53598 compcert.lib.Integers Make bits_and thm
R53591:53598 compcert.lib.Integers Make bits_and thm
R53591:53598 compcert.lib.Integers Make bits_and thm
R53619:53632 compcert.lib.Integers Make unsigned_range thm
R53619:53632 compcert.lib.Integers Make unsigned_range thm
R53653:53664 Coq.Bool.Bool <> andb_false_r thm
R53653:53664 Coq.Bool.Bool <> andb_false_r thm
prf 53681:53696 Make shr_and_shru_and
binder 53708:53708 <> x:493
binder 53710:53710 <> y:494
binder 53712:53712 <> z:495
R53737:53742 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53758:53760 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53743:53745 compcert.lib.Integers Make and def
R53757:53757 compcert.lib.Integers <> z:495 var
R53748:53750 compcert.lib.Integers Make shr def
R53754:53754 compcert.lib.Integers <> y:494 var
R53752:53752 compcert.lib.Integers <> x:493 var
R53761:53763 compcert.lib.Integers Make and def
R53776:53776 compcert.lib.Integers <> z:495 var
R53766:53769 compcert.lib.Integers Make shru def
R53773:53773 compcert.lib.Integers <> y:494 var
R53771:53771 compcert.lib.Integers <> x:493 var
R53733:53735 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53717:53720 compcert.lib.Integers Make shru def
R53732:53732 compcert.lib.Integers <> y:494 var
R53723:53725 compcert.lib.Integers Make shl def
R53729:53729 compcert.lib.Integers <> y:494 var
R53727:53727 compcert.lib.Integers <> z:495 var
R53736:53736 compcert.lib.Integers <> z:495 var
R53822:53829 compcert.lib.Integers Make and_shru thm
R53822:53829 compcert.lib.Integers Make and_shru thm
R53822:53829 compcert.lib.Integers Make and_shru thm
R53840:53851 compcert.lib.Integers Make and_shr_shru thm
R53840:53851 compcert.lib.Integers Make and_shr_shru thm
R53840:53851 compcert.lib.Integers Make and_shr_shru thm
prf 53874:53885 Make shru_lt_zero
binder 53897:53897 <> x:496
R53931:53933 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53902:53905 compcert.lib.Integers Make shru def
R53910:53913 compcert.lib.Integers Make repr def
R53925:53927 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R53916:53924 compcert.lib.Integers Make zwordsize def
R53907:53907 compcert.lib.Integers <> x:496 var
R53937:53938 compcert.lib.Integers Make lt def
R53942:53945 compcert.lib.Integers Make zero def
R53940:53940 compcert.lib.Integers <> x:496 var
R53961:53964 compcert.lib.Integers Make zero def
R53952:53954 compcert.lib.Integers Make one def
R53990:54001 compcert.lib.Integers Make same_bits_eq thm
R53990:54001 compcert.lib.Integers Make same_bits_eq thm
R54022:54030 compcert.lib.Integers Make bits_shru thm
R54022:54030 compcert.lib.Integers Make bits_shru thm
R54022:54030 compcert.lib.Integers Make bits_shru thm
R54022:54030 compcert.lib.Integers Make bits_shru thm
R54049:54061 compcert.lib.Integers Make unsigned_repr thm
R54049:54061 compcert.lib.Integers Make unsigned_repr thm
R54049:54061 compcert.lib.Integers Make unsigned_repr thm
R54049:54061 compcert.lib.Integers Make unsigned_repr thm
R54076:54078 compcert.lib.Coqlib <> zeq def
R54076:54078 compcert.lib.Coqlib <> zeq def
R54105:54113 Coq.ZArith.BinInt Z add_0_l thm
R54105:54113 Coq.ZArith.BinInt Z add_0_l thm
R54105:54113 Coq.ZArith.BinInt Z add_0_l thm
R54124:54131 compcert.lib.Coqlib <> zlt_true thm
R54124:54131 compcert.lib.Coqlib <> zlt_true thm
R54124:54131 compcert.lib.Coqlib <> zlt_true thm
R54124:54131 compcert.lib.Coqlib <> zlt_true thm
R54144:54163 compcert.lib.Integers Make sign_bit_of_unsigned thm
R54144:54163 compcert.lib.Integers Make sign_bit_of_unsigned thm
R54144:54163 compcert.lib.Integers Make sign_bit_of_unsigned thm
R54175:54176 compcert.lib.Integers Make lt def
R54187:54197 compcert.lib.Integers Make signed_zero thm
R54187:54197 compcert.lib.Integers Make signed_zero thm
R54187:54197 compcert.lib.Integers Make signed_zero thm
R54207:54212 compcert.lib.Integers Make signed def
R54227:54229 compcert.lib.Coqlib <> zlt def
R54244:54255 compcert.lib.Integers Make half_modulus def
R54232:54239 compcert.lib.Integers Make unsigned def
R54227:54229 compcert.lib.Coqlib <> zlt def
R54244:54255 compcert.lib.Integers Make half_modulus def
R54232:54239 compcert.lib.Integers Make unsigned def
R54269:54277 compcert.lib.Coqlib <> zlt_false thm
R54269:54277 compcert.lib.Coqlib <> zlt_false thm
R54269:54277 compcert.lib.Coqlib <> zlt_false thm
R54269:54277 compcert.lib.Coqlib <> zlt_false thm
R54298:54311 compcert.lib.Integers Make unsigned_range thm
R54298:54311 compcert.lib.Integers Make unsigned_range thm
R54332:54339 compcert.lib.Coqlib <> zlt_true thm
R54332:54339 compcert.lib.Coqlib <> zlt_true thm
R54332:54339 compcert.lib.Coqlib <> zlt_true thm
R54332:54339 compcert.lib.Coqlib <> zlt_true thm
R54349:54351 compcert.lib.Integers Make one def
R54362:54373 compcert.lib.Integers Make testbit_repr thm
R54362:54373 compcert.lib.Integers Make testbit_repr thm
R54362:54373 compcert.lib.Integers Make testbit_repr thm
R54362:54373 compcert.lib.Integers Make testbit_repr thm
R54396:54409 compcert.lib.Integers Make unsigned_range thm
R54396:54409 compcert.lib.Integers Make unsigned_range thm
R54437:54445 compcert.lib.Coqlib <> zlt_false thm
R54437:54445 compcert.lib.Coqlib <> zlt_false thm
R54437:54445 compcert.lib.Coqlib <> zlt_false thm
R54437:54445 compcert.lib.Coqlib <> zlt_false thm
R54457:54463 compcert.lib.Integers Make testbit def
R54474:54484 compcert.lib.Zbits <> Ztestbit_eq thm
R54474:54484 compcert.lib.Zbits <> Ztestbit_eq thm
R54474:54484 compcert.lib.Zbits <> Ztestbit_eq thm
R54474:54484 compcert.lib.Zbits <> Ztestbit_eq thm
R54495:54503 compcert.lib.Coqlib <> zeq_false thm
R54495:54503 compcert.lib.Coqlib <> zeq_false thm
R54495:54503 compcert.lib.Coqlib <> zeq_false thm
R54495:54503 compcert.lib.Coqlib <> zeq_false thm
R54518:54519 compcert.lib.Integers Make lt def
R54523:54526 compcert.lib.Integers Make zero def
R54518:54519 compcert.lib.Integers Make lt def
R54523:54526 compcert.lib.Integers Make zero def
R54540:54551 compcert.lib.Integers Make unsigned_one thm
R54540:54551 compcert.lib.Integers Make unsigned_one thm
R54540:54551 compcert.lib.Integers Make unsigned_one thm
R54576:54588 Coq.ZArith.BinInt Z testbit_0_l thm
R54576:54588 Coq.ZArith.BinInt Z testbit_0_l thm
R54576:54588 Coq.ZArith.BinInt Z testbit_0_l thm
R54607:54619 compcert.lib.Integers Make unsigned_zero thm
R54607:54619 compcert.lib.Integers Make unsigned_zero thm
R54607:54619 compcert.lib.Integers Make unsigned_zero thm
R54644:54656 Coq.ZArith.BinInt Z testbit_0_l thm
R54644:54656 Coq.ZArith.BinInt Z testbit_0_l thm
R54644:54656 Coq.ZArith.BinInt Z testbit_0_l thm
R54696:54716 compcert.lib.Integers Make wordsize_max_unsigned thm
R54696:54716 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 54738:54748 Make shr_lt_zero
binder 54760:54760 <> x:497
R54793:54795 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54765:54767 compcert.lib.Integers Make shr def
R54772:54775 compcert.lib.Integers Make repr def
R54787:54789 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R54778:54786 compcert.lib.Integers Make zwordsize def
R54769:54769 compcert.lib.Integers <> x:497 var
R54799:54800 compcert.lib.Integers Make lt def
R54804:54807 compcert.lib.Integers Make zero def
R54802:54802 compcert.lib.Integers <> x:497 var
R54824:54827 compcert.lib.Integers Make zero def
R54814:54817 compcert.lib.Integers Make mone def
R54853:54864 compcert.lib.Integers Make same_bits_eq thm
R54853:54864 compcert.lib.Integers Make same_bits_eq thm
R54885:54892 compcert.lib.Integers Make bits_shr thm
R54885:54892 compcert.lib.Integers Make bits_shr thm
R54885:54892 compcert.lib.Integers Make bits_shr thm
R54885:54892 compcert.lib.Integers Make bits_shr thm
R54911:54923 compcert.lib.Integers Make unsigned_repr thm
R54911:54923 compcert.lib.Integers Make unsigned_repr thm
R54911:54923 compcert.lib.Integers Make unsigned_repr thm
R54911:54923 compcert.lib.Integers Make unsigned_repr thm
R54942:54948 compcert.lib.Integers Make testbit def
R54962:54964 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R54953:54961 compcert.lib.Integers Make zwordsize def
R54942:54948 compcert.lib.Integers Make testbit def
R54962:54964 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R54953:54961 compcert.lib.Integers Make zwordsize def
R54991:54993 compcert.lib.Coqlib <> zlt def
R55017:55025 compcert.lib.Integers Make zwordsize def
R54997:55000 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55014:55014 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55010:55012 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55001:55009 compcert.lib.Integers Make zwordsize def
R54991:54993 compcert.lib.Coqlib <> zlt def
R55017:55025 compcert.lib.Integers Make zwordsize def
R54997:55000 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55014:55014 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R55010:55012 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55001:55009 compcert.lib.Integers Make zwordsize def
R55044:55063 compcert.lib.Integers Make sign_bit_of_unsigned thm
R55044:55063 compcert.lib.Integers Make sign_bit_of_unsigned thm
R55044:55063 compcert.lib.Integers Make sign_bit_of_unsigned thm
R55075:55076 compcert.lib.Integers Make lt def
R55087:55097 compcert.lib.Integers Make signed_zero thm
R55087:55097 compcert.lib.Integers Make signed_zero thm
R55087:55097 compcert.lib.Integers Make signed_zero thm
R55107:55112 compcert.lib.Integers Make signed def
R55127:55129 compcert.lib.Coqlib <> zlt def
R55144:55155 compcert.lib.Integers Make half_modulus def
R55132:55139 compcert.lib.Integers Make unsigned def
R55127:55129 compcert.lib.Coqlib <> zlt def
R55144:55155 compcert.lib.Integers Make half_modulus def
R55132:55139 compcert.lib.Integers Make unsigned def
R55169:55177 compcert.lib.Coqlib <> zlt_false thm
R55169:55177 compcert.lib.Coqlib <> zlt_false thm
R55169:55177 compcert.lib.Coqlib <> zlt_false thm
R55169:55177 compcert.lib.Coqlib <> zlt_false thm
R55188:55196 compcert.lib.Integers Make bits_zero thm
R55188:55196 compcert.lib.Integers Make bits_zero thm
R55188:55196 compcert.lib.Integers Make bits_zero thm
R55217:55230 compcert.lib.Integers Make unsigned_range thm
R55217:55230 compcert.lib.Integers Make unsigned_range thm
R55251:55258 compcert.lib.Coqlib <> zlt_true thm
R55251:55258 compcert.lib.Coqlib <> zlt_true thm
R55251:55258 compcert.lib.Coqlib <> zlt_true thm
R55251:55258 compcert.lib.Coqlib <> zlt_true thm
R55269:55277 compcert.lib.Integers Make bits_mone thm
R55269:55277 compcert.lib.Integers Make bits_mone thm
R55269:55277 compcert.lib.Integers Make bits_mone thm
R55269:55277 compcert.lib.Integers Make bits_mone thm
R55298:55311 compcert.lib.Integers Make unsigned_range thm
R55298:55311 compcert.lib.Integers Make unsigned_range thm
R55335:55355 compcert.lib.Integers Make wordsize_max_unsigned thm
R55335:55355 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 55410:55417 Make bits_rol
binder 55429:55429 <> x:498
binder 55431:55431 <> y:499
binder 55433:55433 <> i:500
R55456:55461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55481:55483 Coq.Init.Logic <> ::type_scope:x_'='_x not
R55462:55468 compcert.lib.Integers Make testbit def
R55480:55480 compcert.lib.Integers <> i:500 var
R55471:55473 compcert.lib.Integers Make rol def
R55477:55477 compcert.lib.Integers <> y:499 var
R55475:55475 compcert.lib.Integers <> x:498 var
R55484:55490 compcert.lib.Integers Make testbit def
R55495:55495 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55510:55515 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55497:55499 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R55496:55496 compcert.lib.Integers <> i:500 var
R55500:55507 compcert.lib.Integers Make unsigned def
R55509:55509 compcert.lib.Integers <> y:499 var
R55516:55524 compcert.lib.Integers Make zwordsize def
R55492:55492 compcert.lib.Integers <> x:498 var
R55439:55442 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R55444:55446 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R55443:55443 compcert.lib.Integers <> i:500 var
R55443:55443 compcert.lib.Integers <> i:500 var
R55447:55455 compcert.lib.Integers Make zwordsize def
R55552:55554 compcert.lib.Integers Make rol def
R55568:55579 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R55594:55602 compcert.lib.Integers Make zwordsize def
R55582:55589 compcert.lib.Integers Make unsigned def
R55568:55579 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R55594:55602 compcert.lib.Integers Make zwordsize def
R55582:55589 compcert.lib.Integers Make unsigned def
R55612:55623 compcert.lib.Integers Make wordsize_pos thm
R55612:55623 compcert.lib.Integers Make wordsize_pos thm
R55648:55652 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55638:55645 compcert.lib.Integers Make unsigned def
R55653:55661 compcert.lib.Integers Make zwordsize def
R55648:55652 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R55638:55645 compcert.lib.Integers Make unsigned def
R55653:55661 compcert.lib.Integers Make zwordsize def
R55685:55687 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R55675:55682 compcert.lib.Integers Make unsigned def
R55688:55696 compcert.lib.Integers Make zwordsize def
R55685:55687 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R55675:55682 compcert.lib.Integers Make unsigned def
R55688:55696 compcert.lib.Integers Make zwordsize def
R55724:55731 Coq.ZArith.Zdiv <> Z_mod_lt thm
R55746:55754 compcert.lib.Integers Make zwordsize def
R55734:55741 compcert.lib.Integers Make unsigned def
R55724:55731 Coq.ZArith.Zdiv <> Z_mod_lt thm
R55746:55754 compcert.lib.Integers Make zwordsize def
R55734:55741 compcert.lib.Integers Make unsigned def
R55764:55775 compcert.lib.Integers Make wordsize_pos thm
R55764:55775 compcert.lib.Integers Make wordsize_pos thm
R55812:55823 compcert.lib.Integers Make testbit_repr thm
R55812:55823 compcert.lib.Integers Make testbit_repr thm
R55812:55823 compcert.lib.Integers Make testbit_repr thm
R55812:55823 compcert.lib.Integers Make testbit_repr thm
R55842:55851 Coq.ZArith.BinInt Z lor_spec thm
R55842:55851 Coq.ZArith.BinInt Z lor_spec thm
R55842:55851 Coq.ZArith.BinInt Z lor_spec thm
R55862:55874 Coq.ZArith.BinInt Z shiftr_spec thm
R55862:55874 Coq.ZArith.BinInt Z shiftr_spec thm
R55862:55874 Coq.ZArith.BinInt Z shiftr_spec thm
R55862:55874 Coq.ZArith.BinInt Z shiftr_spec thm
R55897:55899 compcert.lib.Coqlib <> zlt def
R55897:55899 compcert.lib.Coqlib <> zlt def
R55919:55935 Coq.ZArith.BinInt Z shiftl_spec_low thm
R55919:55935 Coq.ZArith.BinInt Z shiftl_spec_low thm
R55919:55935 Coq.ZArith.BinInt Z shiftl_spec_low thm
R55919:55935 Coq.ZArith.BinInt Z shiftl_spec_low thm
R55962:55968 compcert.lib.Integers Make testbit def
R56020:56022 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56018:56018 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56000:56010 compcert.lib.Coqlib <> Zmod_unique thm
R56020:56022 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56018:56018 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56000:56010 compcert.lib.Coqlib <> Zmod_unique thm
R56070:56087 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56070:56087 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56070:56087 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56070:56087 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56070:56087 Coq.ZArith.BinInt Z shiftl_spec_high thm
R56100:56106 compcert.lib.Integers Make testbit def
R56112:56115 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56129:56129 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56125:56127 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56116:56124 compcert.lib.Integers Make zwordsize def
R56100:56106 compcert.lib.Integers Make testbit def
R56112:56115 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56129:56129 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56125:56127 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56116:56124 compcert.lib.Integers Make zwordsize def
R56146:56155 compcert.lib.Integers Make bits_above thm
R56146:56155 compcert.lib.Integers Make bits_above thm
R56146:56155 compcert.lib.Integers Make bits_above thm
R56146:56155 compcert.lib.Integers Make bits_above thm
R56166:56176 Coq.Bool.Bool <> orb_false_r thm
R56166:56176 Coq.Bool.Bool <> orb_false_r thm
R56166:56176 Coq.Bool.Bool <> orb_false_r thm
R56189:56195 compcert.lib.Integers Make testbit def
R56201:56203 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56189:56195 compcert.lib.Integers Make testbit def
R56201:56203 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R56256:56256 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56238:56248 compcert.lib.Coqlib <> Zmod_unique thm
R56256:56256 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R56238:56248 compcert.lib.Coqlib <> Zmod_unique thm
prf 56319:56326 Make bits_ror
binder 56338:56338 <> x:501
binder 56340:56340 <> y:502
binder 56342:56342 <> i:503
R56365:56370 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56390:56392 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56371:56377 compcert.lib.Integers Make testbit def
R56389:56389 compcert.lib.Integers <> i:503 var
R56380:56382 compcert.lib.Integers Make ror def
R56386:56386 compcert.lib.Integers <> y:502 var
R56384:56384 compcert.lib.Integers <> x:501 var
R56393:56399 compcert.lib.Integers Make testbit def
R56404:56404 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56419:56424 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56406:56408 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56405:56405 compcert.lib.Integers <> i:503 var
R56409:56416 compcert.lib.Integers Make unsigned def
R56418:56418 compcert.lib.Integers <> y:502 var
R56425:56433 compcert.lib.Integers Make zwordsize def
R56401:56401 compcert.lib.Integers <> x:501 var
R56348:56351 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R56353:56355 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R56352:56352 compcert.lib.Integers <> i:503 var
R56352:56352 compcert.lib.Integers <> i:503 var
R56356:56364 compcert.lib.Integers Make zwordsize def
R56461:56463 compcert.lib.Integers Make ror def
R56477:56488 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R56503:56511 compcert.lib.Integers Make zwordsize def
R56491:56498 compcert.lib.Integers Make unsigned def
R56477:56488 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R56503:56511 compcert.lib.Integers Make zwordsize def
R56491:56498 compcert.lib.Integers Make unsigned def
R56521:56532 compcert.lib.Integers Make wordsize_pos thm
R56521:56532 compcert.lib.Integers Make wordsize_pos thm
R56557:56561 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56547:56554 compcert.lib.Integers Make unsigned def
R56562:56570 compcert.lib.Integers Make zwordsize def
R56557:56561 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R56547:56554 compcert.lib.Integers Make unsigned def
R56562:56570 compcert.lib.Integers Make zwordsize def
R56594:56596 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R56584:56591 compcert.lib.Integers Make unsigned def
R56597:56605 compcert.lib.Integers Make zwordsize def
R56594:56596 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R56584:56591 compcert.lib.Integers Make unsigned def
R56597:56605 compcert.lib.Integers Make zwordsize def
R56633:56640 Coq.ZArith.Zdiv <> Z_mod_lt thm
R56655:56663 compcert.lib.Integers Make zwordsize def
R56643:56650 compcert.lib.Integers Make unsigned def
R56633:56640 Coq.ZArith.Zdiv <> Z_mod_lt thm
R56655:56663 compcert.lib.Integers Make zwordsize def
R56643:56650 compcert.lib.Integers Make unsigned def
R56673:56684 compcert.lib.Integers Make wordsize_pos thm
R56673:56684 compcert.lib.Integers Make wordsize_pos thm
R56721:56732 compcert.lib.Integers Make testbit_repr thm
R56721:56732 compcert.lib.Integers Make testbit_repr thm
R56721:56732 compcert.lib.Integers Make testbit_repr thm
R56721:56732 compcert.lib.Integers Make testbit_repr thm
R56751:56760 Coq.ZArith.BinInt Z lor_spec thm
R56751:56760 Coq.ZArith.BinInt Z lor_spec thm
R56751:56760 Coq.ZArith.BinInt Z lor_spec thm
R56771:56783 Coq.ZArith.BinInt Z shiftr_spec thm
R56771:56783 Coq.ZArith.BinInt Z shiftr_spec thm
R56771:56783 Coq.ZArith.BinInt Z shiftr_spec thm
R56771:56783 Coq.ZArith.BinInt Z shiftr_spec thm
R56806:56808 compcert.lib.Coqlib <> zlt def
R56818:56826 compcert.lib.Integers Make zwordsize def
R56812:56814 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56806:56808 compcert.lib.Coqlib <> zlt def
R56818:56826 compcert.lib.Integers Make zwordsize def
R56812:56814 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R56842:56858 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56842:56858 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56842:56858 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56842:56858 Coq.ZArith.BinInt Z shiftl_spec_low thm
R56875:56885 Coq.Bool.Bool <> orb_false_r thm
R56875:56885 Coq.Bool.Bool <> orb_false_r thm
R56875:56885 Coq.Bool.Bool <> orb_false_r thm
R56899:56905 compcert.lib.Integers Make testbit def
R56937:56947 compcert.lib.Coqlib <> Zmod_unique thm
R56937:56947 compcert.lib.Coqlib <> Zmod_unique thm
R57005:57022 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57005:57022 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57005:57022 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57005:57022 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57005:57022 Coq.ZArith.BinInt Z shiftl_spec_high thm
R57035:57041 compcert.lib.Integers Make testbit def
R57047:57049 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57035:57041 compcert.lib.Integers Make testbit def
R57047:57049 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57067:57076 compcert.lib.Integers Make bits_above thm
R57067:57076 compcert.lib.Integers Make bits_above thm
R57067:57076 compcert.lib.Integers Make bits_above thm
R57067:57076 compcert.lib.Integers Make bits_above thm
R57097:57103 compcert.lib.Integers Make testbit def
R57154:57156 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57135:57145 compcert.lib.Coqlib <> Zmod_unique thm
R57154:57156 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R57135:57145 compcert.lib.Coqlib <> Zmod_unique thm
R57226:57233 compcert.lib.Integers Make bits_rol thm
R57235:57242 compcert.lib.Integers Make bits_ror thm
prf 57260:57267 Make shl_rolm
binder 57279:57279 <> x:504
binder 57281:57281 <> n:505
R57308:57313 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57321:57323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57314:57316 compcert.lib.Integers Make shl def
R57320:57320 compcert.lib.Integers <> n:505 var
R57318:57318 compcert.lib.Integers <> x:504 var
R57324:57327 compcert.lib.Integers Make rolm def
R57334:57336 compcert.lib.Integers Make shl def
R57343:57343 compcert.lib.Integers <> n:505 var
R57338:57341 compcert.lib.Integers Make mone def
R57331:57331 compcert.lib.Integers <> n:505 var
R57329:57329 compcert.lib.Integers <> x:504 var
R57301:57303 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57286:57288 compcert.lib.Integers Make ltu def
R57292:57300 compcert.lib.Integers Make iwordsize def
R57290:57290 compcert.lib.Integers <> n:505 var
R57304:57307 Coq.Init.Datatypes <> true constr
R57376:57382 compcert.lib.Integers Make ltu_inv thm
R57376:57382 compcert.lib.Integers Make ltu_inv thm
R57400:57421 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57400:57421 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57400:57421 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57441:57444 compcert.lib.Integers Make rolm def
R57453:57464 compcert.lib.Integers Make same_bits_eq thm
R57453:57464 compcert.lib.Integers Make same_bits_eq thm
R57485:57492 compcert.lib.Integers Make bits_and thm
R57485:57492 compcert.lib.Integers Make bits_and thm
R57485:57492 compcert.lib.Integers Make bits_and thm
R57485:57492 compcert.lib.Integers Make bits_and thm
R57510:57517 compcert.lib.Integers Make bits_shl thm
R57510:57517 compcert.lib.Integers Make bits_shl thm
R57510:57517 compcert.lib.Integers Make bits_shl thm
R57510:57517 compcert.lib.Integers Make bits_shl thm
R57510:57517 compcert.lib.Integers Make bits_shl thm
R57510:57517 compcert.lib.Integers Make bits_shl thm
R57510:57517 compcert.lib.Integers Make bits_shl thm
R57534:57541 compcert.lib.Integers Make bits_rol thm
R57534:57541 compcert.lib.Integers Make bits_rol thm
R57534:57541 compcert.lib.Integers Make bits_rol thm
R57534:57541 compcert.lib.Integers Make bits_rol thm
R57562:57564 compcert.lib.Coqlib <> zlt def
R57569:57576 compcert.lib.Integers Make unsigned def
R57562:57564 compcert.lib.Coqlib <> zlt def
R57569:57576 compcert.lib.Integers Make unsigned def
R57595:57606 Coq.Bool.Bool <> andb_false_r thm
R57595:57606 Coq.Bool.Bool <> andb_false_r thm
R57595:57606 Coq.Bool.Bool <> andb_false_r thm
R57631:57644 compcert.lib.Integers Make unsigned_range thm
R57631:57644 compcert.lib.Integers Make unsigned_range thm
R57670:57678 compcert.lib.Integers Make bits_mone thm
R57670:57678 compcert.lib.Integers Make bits_mone thm
R57670:57678 compcert.lib.Integers Make bits_mone thm
R57670:57678 compcert.lib.Integers Make bits_mone thm
R57689:57699 Coq.Bool.Bool <> andb_true_r thm
R57689:57699 Coq.Bool.Bool <> andb_true_r thm
R57689:57699 Coq.Bool.Bool <> andb_true_r thm
R57731:57741 Coq.ZArith.BinInt Z mod_small thm
R57731:57741 Coq.ZArith.BinInt Z mod_small thm
prf 57772:57780 Make shru_rolm
binder 57792:57792 <> x:506
binder 57794:57794 <> n:507
R57821:57826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57835:57837 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57827:57830 compcert.lib.Integers Make shru def
R57834:57834 compcert.lib.Integers <> n:507 var
R57832:57832 compcert.lib.Integers <> x:506 var
R57838:57841 compcert.lib.Integers Make rolm def
R57864:57867 compcert.lib.Integers Make shru def
R57874:57874 compcert.lib.Integers <> n:507 var
R57869:57872 compcert.lib.Integers Make mone def
R57846:57848 compcert.lib.Integers Make sub def
R57860:57860 compcert.lib.Integers <> n:507 var
R57850:57858 compcert.lib.Integers Make iwordsize def
R57843:57843 compcert.lib.Integers <> x:506 var
R57814:57816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57799:57801 compcert.lib.Integers Make ltu def
R57805:57813 compcert.lib.Integers Make iwordsize def
R57803:57803 compcert.lib.Integers <> n:507 var
R57817:57820 Coq.Init.Datatypes <> true constr
R57907:57913 compcert.lib.Integers Make ltu_inv thm
R57907:57913 compcert.lib.Integers Make ltu_inv thm
R57931:57952 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57931:57952 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57931:57952 compcert.lib.Integers Make unsigned_repr_wordsize thm
R57972:57975 compcert.lib.Integers Make rolm def
R57984:57995 compcert.lib.Integers Make same_bits_eq thm
R57984:57995 compcert.lib.Integers Make same_bits_eq thm
R58016:58023 compcert.lib.Integers Make bits_and thm
R58016:58023 compcert.lib.Integers Make bits_and thm
R58016:58023 compcert.lib.Integers Make bits_and thm
R58016:58023 compcert.lib.Integers Make bits_and thm
R58041:58049 compcert.lib.Integers Make bits_shru thm
R58041:58049 compcert.lib.Integers Make bits_shru thm
R58041:58049 compcert.lib.Integers Make bits_shru thm
R58041:58049 compcert.lib.Integers Make bits_shru thm
R58041:58049 compcert.lib.Integers Make bits_shru thm
R58041:58049 compcert.lib.Integers Make bits_shru thm
R58041:58049 compcert.lib.Integers Make bits_shru thm
R58066:58073 compcert.lib.Integers Make bits_rol thm
R58066:58073 compcert.lib.Integers Make bits_rol thm
R58066:58073 compcert.lib.Integers Make bits_rol thm
R58066:58073 compcert.lib.Integers Make bits_rol thm
R58094:58096 compcert.lib.Coqlib <> zlt def
R58115:58123 compcert.lib.Integers Make zwordsize def
R58100:58102 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R58103:58110 compcert.lib.Integers Make unsigned def
R58094:58096 compcert.lib.Coqlib <> zlt def
R58115:58123 compcert.lib.Integers Make zwordsize def
R58100:58102 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R58103:58110 compcert.lib.Integers Make unsigned def
R58143:58156 compcert.lib.Integers Make unsigned_range thm
R58143:58156 compcert.lib.Integers Make unsigned_range thm
R58182:58190 compcert.lib.Integers Make bits_mone thm
R58182:58190 compcert.lib.Integers Make bits_mone thm
R58182:58190 compcert.lib.Integers Make bits_mone thm
R58182:58190 compcert.lib.Integers Make bits_mone thm
R58201:58211 Coq.Bool.Bool <> andb_true_r thm
R58201:58211 Coq.Bool.Bool <> andb_true_r thm
R58201:58211 Coq.Bool.Bool <> andb_true_r thm
R58234:58236 compcert.lib.Integers Make sub def
R58247:58259 compcert.lib.Integers Make unsigned_repr thm
R58247:58259 compcert.lib.Integers Make unsigned_repr thm
R58247:58259 compcert.lib.Integers Make unsigned_repr thm
R58247:58259 compcert.lib.Integers Make unsigned_repr thm
R58270:58291 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58270:58291 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58270:58291 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58314:58324 compcert.lib.Coqlib <> Zmod_unique thm
R58314:58324 compcert.lib.Coqlib <> Zmod_unique thm
R58360:58381 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58360:58381 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58360:58381 compcert.lib.Integers Make unsigned_repr_wordsize thm
R58395:58415 compcert.lib.Integers Make wordsize_max_unsigned thm
R58395:58415 compcert.lib.Integers Make wordsize_max_unsigned thm
R58444:58455 Coq.Bool.Bool <> andb_false_r thm
R58444:58455 Coq.Bool.Bool <> andb_false_r thm
R58444:58455 Coq.Bool.Bool <> andb_false_r thm
prf 58478:58485 Make rol_zero
binder 58497:58497 <> x:508
R58512:58514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58502:58504 compcert.lib.Integers Make rol def
R58508:58511 compcert.lib.Integers Make zero def
R58506:58506 compcert.lib.Integers <> x:508 var
R58515:58515 compcert.lib.Integers <> x:508 var
R58555:58567 compcert.lib.Integers Make unsigned_zero thm
R58555:58567 compcert.lib.Integers Make unsigned_zero thm
R58555:58567 compcert.lib.Integers Make unsigned_zero thm
R58578:58586 Coq.ZArith.BinInt Z sub_0_r thm
R58578:58586 Coq.ZArith.BinInt Z sub_0_r thm
R58578:58586 Coq.ZArith.BinInt Z sub_0_r thm
R58597:58607 Coq.ZArith.BinInt Z mod_small thm
R58597:58607 Coq.ZArith.BinInt Z mod_small thm
prf 58628:58644 Make bitwise_binop_rol
binder 58656:58656 <> f:509
binder 58658:58659 <> f':510
binder 58661:58661 <> x:511
binder 58663:58663 <> y:512
binder 58665:58665 <> n:513
R58670:58670 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58757:58763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58777:58779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58764:58766 compcert.lib.Integers Make rol def
R58776:58776 compcert.lib.Integers <> n:513 var
R58769:58769 compcert.lib.Integers <> f:509 var
R58773:58773 compcert.lib.Integers <> y:512 var
R58771:58771 compcert.lib.Integers <> x:511 var
R58780:58780 compcert.lib.Integers <> f:509 var
R58793:58795 compcert.lib.Integers Make rol def
R58799:58799 compcert.lib.Integers <> n:513 var
R58797:58797 compcert.lib.Integers <> y:512 var
R58783:58785 compcert.lib.Integers Make rol def
R58789:58789 compcert.lib.Integers <> n:513 var
R58787:58787 compcert.lib.Integers <> x:511 var
binder 58678:58678 <> x:514
binder 58680:58680 <> y:515
binder 58682:58682 <> i:516
R58703:58706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58724:58726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58707:58713 compcert.lib.Integers Make testbit def
R58723:58723 compcert.lib.Integers <> i:516 var
R58716:58716 compcert.lib.Integers <> f:509 var
R58720:58720 compcert.lib.Integers <> y:515 var
R58718:58718 compcert.lib.Integers <> x:514 var
R58727:58728 compcert.lib.Integers <> f':510 var
R58745:58751 compcert.lib.Integers Make testbit def
R58755:58755 compcert.lib.Integers <> i:516 var
R58753:58753 compcert.lib.Integers <> y:515 var
R58731:58737 compcert.lib.Integers Make testbit def
R58741:58741 compcert.lib.Integers <> i:516 var
R58739:58739 compcert.lib.Integers <> x:514 var
R58686:58689 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R58691:58693 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R58690:58690 compcert.lib.Integers <> i:516 var
R58690:58690 compcert.lib.Integers <> i:516 var
R58694:58702 compcert.lib.Integers Make zwordsize def
R58826:58837 compcert.lib.Integers Make same_bits_eq thm
R58826:58837 compcert.lib.Integers Make same_bits_eq thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58876:58883 compcert.lib.Integers Make bits_rol thm
R58917:58924 Coq.ZArith.Zdiv <> Z_mod_lt thm
R58917:58924 Coq.ZArith.Zdiv <> Z_mod_lt thm
R58933:58944 compcert.lib.Integers Make wordsize_pos thm
R58933:58944 compcert.lib.Integers Make wordsize_pos thm
prf 58961:58967 Make rol_and
binder 58979:58979 <> x:517
binder 58981:58981 <> y:518
binder 58983:58983 <> n:519
R59003:59005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58988:58990 compcert.lib.Integers Make rol def
R59002:59002 compcert.lib.Integers <> n:519 var
R58993:58995 compcert.lib.Integers Make and def
R58999:58999 compcert.lib.Integers <> y:518 var
R58997:58997 compcert.lib.Integers <> x:517 var
R59006:59008 compcert.lib.Integers Make and def
R59021:59023 compcert.lib.Integers Make rol def
R59027:59027 compcert.lib.Integers <> n:519 var
R59025:59025 compcert.lib.Integers <> y:518 var
R59011:59013 compcert.lib.Integers Make rol def
R59017:59017 compcert.lib.Integers <> n:519 var
R59015:59015 compcert.lib.Integers <> x:517 var
R59077:59080 Coq.Init.Datatypes <> andb def
R59054:59070 compcert.lib.Integers Make bitwise_binop_rol thm
R59077:59080 Coq.Init.Datatypes <> andb def
R59054:59070 compcert.lib.Integers Make bitwise_binop_rol thm
R59089:59096 compcert.lib.Integers Make bits_and thm
R59089:59096 compcert.lib.Integers Make bits_and thm
prf 59113:59118 Make rol_or
binder 59130:59130 <> x:520
binder 59132:59132 <> y:521
binder 59134:59134 <> n:522
R59153:59155 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59139:59141 compcert.lib.Integers Make rol def
R59152:59152 compcert.lib.Integers <> n:522 var
R59144:59145 compcert.lib.Integers Make or def
R59149:59149 compcert.lib.Integers <> y:521 var
R59147:59147 compcert.lib.Integers <> x:520 var
R59156:59157 compcert.lib.Integers Make or def
R59170:59172 compcert.lib.Integers Make rol def
R59176:59176 compcert.lib.Integers <> n:522 var
R59174:59174 compcert.lib.Integers <> y:521 var
R59160:59162 compcert.lib.Integers Make rol def
R59166:59166 compcert.lib.Integers <> n:522 var
R59164:59164 compcert.lib.Integers <> x:520 var
R59226:59228 Coq.Init.Datatypes <> orb def
R59203:59219 compcert.lib.Integers Make bitwise_binop_rol thm
R59226:59228 Coq.Init.Datatypes <> orb def
R59203:59219 compcert.lib.Integers Make bitwise_binop_rol thm
R59237:59243 compcert.lib.Integers Make bits_or thm
R59237:59243 compcert.lib.Integers Make bits_or thm
prf 59260:59266 Make rol_xor
binder 59278:59278 <> x:523
binder 59280:59280 <> y:524
binder 59282:59282 <> n:525
R59302:59304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59287:59289 compcert.lib.Integers Make rol def
R59301:59301 compcert.lib.Integers <> n:525 var
R59292:59294 compcert.lib.Integers Make xor def
R59298:59298 compcert.lib.Integers <> y:524 var
R59296:59296 compcert.lib.Integers <> x:523 var
R59305:59307 compcert.lib.Integers Make xor def
R59320:59322 compcert.lib.Integers Make rol def
R59326:59326 compcert.lib.Integers <> n:525 var
R59324:59324 compcert.lib.Integers <> y:524 var
R59310:59312 compcert.lib.Integers Make rol def
R59316:59316 compcert.lib.Integers <> n:525 var
R59314:59314 compcert.lib.Integers <> x:523 var
R59376:59379 Coq.Init.Datatypes <> xorb def
R59353:59369 compcert.lib.Integers Make bitwise_binop_rol thm
R59376:59379 Coq.Init.Datatypes <> xorb def
R59353:59369 compcert.lib.Integers Make bitwise_binop_rol thm
R59388:59395 compcert.lib.Integers Make bits_xor thm
R59388:59395 compcert.lib.Integers Make bits_xor thm
prf 59412:59418 Make rol_rol
binder 59430:59430 <> x:526
binder 59432:59432 <> n:527
binder 59434:59434 <> m:528
R59465:59470 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59486:59488 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59471:59473 compcert.lib.Integers Make rol def
R59485:59485 compcert.lib.Integers <> m:528 var
R59476:59478 compcert.lib.Integers Make rol def
R59482:59482 compcert.lib.Integers <> n:527 var
R59480:59480 compcert.lib.Integers <> x:526 var
R59489:59491 compcert.lib.Integers Make rol def
R59496:59499 compcert.lib.Integers Make modu def
R59511:59519 compcert.lib.Integers Make iwordsize def
R59502:59504 compcert.lib.Integers Make add def
R59508:59508 compcert.lib.Integers <> m:528 var
R59506:59506 compcert.lib.Integers <> n:527 var
R59493:59493 compcert.lib.Integers <> x:526 var
R59439:59446 Coq.ZArith.BinInt Z divide def
R59458:59464 compcert.lib.Integers Make modulus def
R59448:59456 compcert.lib.Integers Make zwordsize def
R59558:59569 compcert.lib.Zbits <> eqmod_mod_eq thm
R59558:59569 compcert.lib.Zbits <> eqmod_mod_eq thm
R59578:59589 compcert.lib.Integers Make wordsize_pos thm
R59578:59589 compcert.lib.Integers Make wordsize_pos thm
R59604:59611 compcert.lib.Integers Make unsigned def
R59627:59634 compcert.lib.Integers Make unsigned def
R59604:59611 compcert.lib.Integers Make unsigned def
R59627:59634 compcert.lib.Integers Make unsigned def
R59671:59673 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59667:59669 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59648:59658 compcert.lib.Zbits <> eqmod_trans thm
R59671:59673 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59667:59669 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59648:59658 compcert.lib.Zbits <> eqmod_trans thm
R59686:59694 compcert.lib.Zbits <> eqmod_sub thm
R59686:59694 compcert.lib.Zbits <> eqmod_sub thm
R59705:59713 compcert.lib.Zbits <> eqmod_sym thm
R59705:59713 compcert.lib.Zbits <> eqmod_sym thm
R59722:59730 compcert.lib.Zbits <> eqmod_mod thm
R59722:59730 compcert.lib.Zbits <> eqmod_mod thm
R59739:59750 compcert.lib.Integers Make wordsize_pos thm
R59739:59750 compcert.lib.Integers Make wordsize_pos thm
R59761:59770 compcert.lib.Zbits <> eqmod_refl thm
R59761:59770 compcert.lib.Zbits <> eqmod_refl thm
R59789:59791 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59785:59787 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59802:59805 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59811:59811 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59807:59809 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59789:59791 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59785:59787 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59802:59805 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59811:59811 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R59807:59809 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59830:59838 compcert.lib.Zbits <> eqmod_sub thm
R59830:59838 compcert.lib.Zbits <> eqmod_sub thm
R59849:59858 compcert.lib.Zbits <> eqmod_refl thm
R59849:59858 compcert.lib.Zbits <> eqmod_refl thm
R59887:59894 Coq.ZArith.BinInt Z modulo def
R59922:59930 compcert.lib.Integers Make zwordsize def
R59907:59909 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59897:59904 compcert.lib.Integers Make unsigned def
R59910:59917 compcert.lib.Integers Make unsigned def
R59869:59879 compcert.lib.Zbits <> eqmod_trans thm
R59887:59894 Coq.ZArith.BinInt Z modulo def
R59922:59930 compcert.lib.Integers Make zwordsize def
R59907:59909 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59897:59904 compcert.lib.Integers Make unsigned def
R59910:59917 compcert.lib.Integers Make unsigned def
R59869:59879 compcert.lib.Zbits <> eqmod_trans thm
R59946:59948 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59959:59961 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59946:59948 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59959:59961 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R59979:59987 compcert.lib.Zbits <> eqmod_mod thm
R59979:59987 compcert.lib.Zbits <> eqmod_mod thm
R59996:60007 compcert.lib.Integers Make wordsize_pos thm
R59996:60007 compcert.lib.Integers Make wordsize_pos thm
R60019:60022 compcert.lib.Integers Make modu def
R60025:60027 compcert.lib.Integers Make add def
R60054:60075 compcert.lib.Integers Make unsigned_repr_wordsize thm
R60054:60075 compcert.lib.Integers Make unsigned_repr_wordsize thm
R60054:60075 compcert.lib.Integers Make unsigned_repr_wordsize thm
binder 60095:60095 <> a:529
R60098:60102 compcert.lib.Zbits <> eqmod def
R60117:60124 compcert.lib.Integers Make unsigned def
R60127:60130 compcert.lib.Integers Make repr def
R60132:60132 compcert.lib.Integers <> a:529 var
R60114:60114 compcert.lib.Integers <> a:529 var
R60104:60112 compcert.lib.Integers Make zwordsize def
binder 60095:60095 <> a:530
R60098:60102 compcert.lib.Zbits <> eqmod def
R60117:60124 compcert.lib.Integers Make unsigned def
R60127:60130 compcert.lib.Integers Make repr def
R60132:60132 compcert.lib.Integers <> a:530 var
R60114:60114 compcert.lib.Integers <> a:530 var
R60104:60112 compcert.lib.Integers Make zwordsize def
R60157:60169 compcert.lib.Zbits <> eqmod_divides thm
R60157:60169 compcert.lib.Zbits <> eqmod_divides thm
R60178:60194 compcert.lib.Integers Make eqm_unsigned_repr thm
R60178:60194 compcert.lib.Integers Make eqm_unsigned_repr thm
R60218:60228 compcert.lib.Zbits <> eqmod_trans thm
R60218:60228 compcert.lib.Zbits <> eqmod_trans thm
R60252:60262 compcert.lib.Zbits <> eqmod_refl2 thm
R60252:60262 compcert.lib.Zbits <> eqmod_refl2 thm
R60271:60282 compcert.lib.Zbits <> eqmod_mod_eq thm
R60271:60282 compcert.lib.Zbits <> eqmod_mod_eq thm
R60291:60302 compcert.lib.Integers Make wordsize_pos thm
R60291:60302 compcert.lib.Integers Make wordsize_pos thm
R60319:60326 Coq.ZArith.Zdiv <> Z_mod_lt thm
R60319:60326 Coq.ZArith.Zdiv <> Z_mod_lt thm
R60335:60346 compcert.lib.Integers Make wordsize_pos thm
R60335:60346 compcert.lib.Integers Make wordsize_pos thm
prf 60363:60371 Make rolm_zero
binder 60383:60383 <> x:531
binder 60385:60385 <> m:532
R60403:60405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60390:60393 compcert.lib.Integers Make rolm def
R60402:60402 compcert.lib.Integers <> m:532 var
R60397:60400 compcert.lib.Integers Make zero def
R60395:60395 compcert.lib.Integers <> x:531 var
R60406:60408 compcert.lib.Integers Make and def
R60412:60412 compcert.lib.Integers <> m:532 var
R60410:60410 compcert.lib.Integers <> x:531 var
R60439:60442 compcert.lib.Integers Make rolm def
R60453:60460 compcert.lib.Integers Make rol_zero thm
R60453:60460 compcert.lib.Integers Make rol_zero thm
R60453:60460 compcert.lib.Integers Make rol_zero thm
prf 60483:60491 Make rolm_rolm
binder 60503:60503 <> x:533
binder 60505:60506 <> n1:534
binder 60508:60509 <> m1:535
binder 60511:60512 <> n2:536
binder 60514:60515 <> m2:537
R60546:60551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60577:60583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60552:60555 compcert.lib.Integers Make rolm def
R60575:60576 compcert.lib.Integers <> m2:537 var
R60572:60573 compcert.lib.Integers <> n2:536 var
R60558:60561 compcert.lib.Integers Make rolm def
R60568:60569 compcert.lib.Integers <> m1:535 var
R60565:60566 compcert.lib.Integers <> n1:534 var
R60563:60563 compcert.lib.Integers <> x:533 var
R60584:60587 compcert.lib.Integers Make rolm def
R60632:60634 compcert.lib.Integers Make and def
R60648:60649 compcert.lib.Integers <> m2:537 var
R60637:60639 compcert.lib.Integers Make rol def
R60644:60645 compcert.lib.Integers <> n2:536 var
R60641:60642 compcert.lib.Integers <> m1:535 var
R60592:60595 compcert.lib.Integers Make modu def
R60609:60617 compcert.lib.Integers Make iwordsize def
R60598:60600 compcert.lib.Integers Make add def
R60605:60606 compcert.lib.Integers <> n2:536 var
R60602:60603 compcert.lib.Integers <> n1:534 var
R60589:60589 compcert.lib.Integers <> x:533 var
R60520:60527 Coq.ZArith.BinInt Z divide def
R60539:60545 compcert.lib.Integers Make modulus def
R60529:60537 compcert.lib.Integers Make zwordsize def
R60679:60682 compcert.lib.Integers Make rolm def
R60693:60699 compcert.lib.Integers Make rol_and thm
R60693:60699 compcert.lib.Integers Make rol_and thm
R60693:60699 compcert.lib.Integers Make rol_and thm
R60710:60718 compcert.lib.Integers Make and_assoc thm
R60710:60718 compcert.lib.Integers Make and_assoc thm
R60710:60718 compcert.lib.Integers Make and_assoc thm
R60731:60737 compcert.lib.Integers Make rol_rol thm
R60731:60737 compcert.lib.Integers Make rol_rol thm
R60731:60737 compcert.lib.Integers Make rol_rol thm
R60731:60737 compcert.lib.Integers Make rol_rol thm
prf 60773:60779 Make or_rolm
binder 60791:60791 <> x:538
binder 60793:60793 <> n:539
binder 60795:60796 <> m1:540
binder 60798:60799 <> m2:541
R60834:60836 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60804:60805 compcert.lib.Integers Make or def
R60822:60825 compcert.lib.Integers Make rolm def
R60831:60832 compcert.lib.Integers <> m2:541 var
R60829:60829 compcert.lib.Integers <> n:539 var
R60827:60827 compcert.lib.Integers <> x:538 var
R60808:60811 compcert.lib.Integers Make rolm def
R60817:60818 compcert.lib.Integers <> m1:540 var
R60815:60815 compcert.lib.Integers <> n:539 var
R60813:60813 compcert.lib.Integers <> x:538 var
R60837:60840 compcert.lib.Integers Make rolm def
R60847:60848 compcert.lib.Integers Make or def
R60853:60854 compcert.lib.Integers <> m2:541 var
R60850:60851 compcert.lib.Integers <> m1:540 var
R60844:60844 compcert.lib.Integers <> n:539 var
R60842:60842 compcert.lib.Integers <> x:538 var
R60882:60885 compcert.lib.Integers Make rolm def
R60904:60917 compcert.lib.Integers Make and_or_distrib thm
R60904:60917 compcert.lib.Integers Make and_or_distrib thm
prf 60934:60940 Make ror_rol
binder 60952:60952 <> x:542
binder 60954:60954 <> y:543
R60981:60986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60994:60996 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60987:60989 compcert.lib.Integers Make ror def
R60993:60993 compcert.lib.Integers <> y:543 var
R60991:60991 compcert.lib.Integers <> x:542 var
R60997:60999 compcert.lib.Integers Make rol def
R61004:61006 compcert.lib.Integers Make sub def
R61018:61018 compcert.lib.Integers <> y:543 var
R61008:61016 compcert.lib.Integers Make iwordsize def
R61001:61001 compcert.lib.Integers <> x:542 var
R60974:60976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60959:60961 compcert.lib.Integers Make ltu def
R60965:60973 compcert.lib.Integers Make iwordsize def
R60963:60963 compcert.lib.Integers <> y:543 var
R60977:60980 Coq.Init.Datatypes <> true constr
R61053:61069 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61053:61069 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61093:61104 compcert.lib.Integers Make same_bits_eq thm
R61093:61104 compcert.lib.Integers Make same_bits_eq thm
R61125:61132 compcert.lib.Integers Make bits_ror thm
R61125:61132 compcert.lib.Integers Make bits_ror thm
R61125:61132 compcert.lib.Integers Make bits_ror thm
R61125:61132 compcert.lib.Integers Make bits_ror thm
R61149:61156 compcert.lib.Integers Make bits_rol thm
R61149:61156 compcert.lib.Integers Make bits_rol thm
R61149:61156 compcert.lib.Integers Make bits_rol thm
R61149:61156 compcert.lib.Integers Make bits_rol thm
R61183:61185 compcert.lib.Integers Make sub def
R61196:61208 compcert.lib.Integers Make unsigned_repr thm
R61196:61208 compcert.lib.Integers Make unsigned_repr thm
R61196:61208 compcert.lib.Integers Make unsigned_repr thm
R61196:61208 compcert.lib.Integers Make unsigned_repr thm
R61219:61240 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61219:61240 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61219:61240 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61251:61262 compcert.lib.Zbits <> eqmod_mod_eq thm
R61251:61262 compcert.lib.Zbits <> eqmod_mod_eq thm
R61271:61282 compcert.lib.Integers Make wordsize_pos thm
R61271:61282 compcert.lib.Integers Make wordsize_pos thm
R61311:61332 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61311:61332 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61311:61332 compcert.lib.Integers Make unsigned_repr_wordsize thm
R61348:61359 compcert.lib.Integers Make wordsize_pos thm
R61373:61393 compcert.lib.Integers Make wordsize_max_unsigned thm
R61348:61359 compcert.lib.Integers Make wordsize_pos thm
R61373:61393 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 61415:61425 Make ror_rol_neg
binder 61437:61437 <> x:544
binder 61439:61439 <> y:545
R61463:61466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61474:61476 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61467:61469 compcert.lib.Integers Make ror def
R61473:61473 compcert.lib.Integers <> y:545 var
R61471:61471 compcert.lib.Integers <> x:544 var
R61477:61479 compcert.lib.Integers Make rol def
R61484:61486 compcert.lib.Integers Make neg def
R61488:61488 compcert.lib.Integers <> y:545 var
R61481:61481 compcert.lib.Integers <> x:544 var
R61442:61442 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R61452:61454 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R61462:61462 Coq.ZArith.BinInt <> ::Z_scope:'('_x_'|'_x_')' not
R61443:61451 compcert.lib.Integers Make zwordsize def
R61455:61461 compcert.lib.Integers Make modulus def
R61515:61526 compcert.lib.Integers Make same_bits_eq thm
R61515:61526 compcert.lib.Integers Make same_bits_eq thm
R61547:61554 compcert.lib.Integers Make bits_ror thm
R61547:61554 compcert.lib.Integers Make bits_ror thm
R61547:61554 compcert.lib.Integers Make bits_ror thm
R61573:61580 compcert.lib.Integers Make bits_rol thm
R61573:61580 compcert.lib.Integers Make bits_rol thm
R61573:61580 compcert.lib.Integers Make bits_rol thm
R61608:61619 compcert.lib.Zbits <> eqmod_mod_eq thm
R61608:61619 compcert.lib.Zbits <> eqmod_mod_eq thm
R61654:61657 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61670:61670 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61658:61659 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R61660:61667 compcert.lib.Integers Make unsigned def
R61635:61645 compcert.lib.Zbits <> eqmod_trans thm
R61654:61657 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61670:61670 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R61658:61659 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R61660:61667 compcert.lib.Integers Make unsigned def
R61635:61645 compcert.lib.Zbits <> eqmod_trans thm
R61682:61692 compcert.lib.Zbits <> eqmod_refl2 thm
R61682:61692 compcert.lib.Zbits <> eqmod_refl2 thm
R61708:61716 compcert.lib.Zbits <> eqmod_sub thm
R61708:61716 compcert.lib.Zbits <> eqmod_sub thm
R61725:61734 compcert.lib.Zbits <> eqmod_refl thm
R61725:61734 compcert.lib.Zbits <> eqmod_refl thm
R61764:61770 compcert.lib.Integers Make modulus def
R61745:61757 compcert.lib.Zbits <> eqmod_divides thm
R61764:61770 compcert.lib.Integers Make modulus def
R61745:61757 compcert.lib.Zbits <> eqmod_divides thm
R61781:61797 compcert.lib.Integers Make eqm_unsigned_repr thm
R61781:61797 compcert.lib.Integers Make eqm_unsigned_repr thm
prf 61820:61825 Make or_ror
binder 61837:61837 <> x:546
binder 61839:61839 <> y:547
binder 61841:61841 <> z:548
R61868:61873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61896:61901 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61921:61926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61934:61936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61927:61929 compcert.lib.Integers Make ror def
R61933:61933 compcert.lib.Integers <> z:548 var
R61931:61931 compcert.lib.Integers <> x:546 var
R61937:61938 compcert.lib.Integers Make or def
R61951:61954 compcert.lib.Integers Make shru def
R61958:61958 compcert.lib.Integers <> z:548 var
R61956:61956 compcert.lib.Integers <> x:546 var
R61941:61943 compcert.lib.Integers Make shl def
R61947:61947 compcert.lib.Integers <> y:547 var
R61945:61945 compcert.lib.Integers <> x:546 var
R61909:61911 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61902:61904 compcert.lib.Integers Make add def
R61908:61908 compcert.lib.Integers <> z:548 var
R61906:61906 compcert.lib.Integers <> y:547 var
R61912:61920 compcert.lib.Integers Make iwordsize def
R61889:61891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61874:61876 compcert.lib.Integers Make ltu def
R61880:61888 compcert.lib.Integers Make iwordsize def
R61878:61878 compcert.lib.Integers <> z:548 var
R61892:61895 Coq.Init.Datatypes <> true constr
R61861:61863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61846:61848 compcert.lib.Integers Make ltu def
R61852:61860 compcert.lib.Integers Make iwordsize def
R61850:61850 compcert.lib.Integers <> y:547 var
R61864:61867 Coq.Init.Datatypes <> true constr
R61993:62009 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62017:62033 compcert.lib.Integers Make ltu_iwordsize_inv thm
R61993:62009 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62017:62033 compcert.lib.Integers Make ltu_iwordsize_inv thm
R62059:62061 compcert.lib.Integers Make ror def
R62064:62065 compcert.lib.Integers Make or def
R62068:62070 compcert.lib.Integers Make shl def
R62073:62076 compcert.lib.Integers Make shru def
R62085:62096 compcert.lib.Integers Make same_bits_eq thm
R62085:62096 compcert.lib.Integers Make same_bits_eq thm
R62118:62129 compcert.lib.Integers Make testbit_repr thm
R62118:62129 compcert.lib.Integers Make testbit_repr thm
R62118:62129 compcert.lib.Integers Make testbit_repr thm
R62118:62129 compcert.lib.Integers Make testbit_repr thm
R62118:62129 compcert.lib.Integers Make testbit_repr thm
R62118:62129 compcert.lib.Integers Make testbit_repr thm
R62118:62129 compcert.lib.Integers Make testbit_repr thm
R62149:62158 Coq.ZArith.BinInt Z lor_spec thm
R62149:62158 Coq.ZArith.BinInt Z lor_spec thm
R62149:62158 Coq.ZArith.BinInt Z lor_spec thm
R62149:62158 Coq.ZArith.BinInt Z lor_spec thm
R62149:62158 Coq.ZArith.BinInt Z lor_spec thm
R62169:62176 Coq.Bool.Bool <> orb_comm thm
R62169:62176 Coq.Bool.Bool <> orb_comm thm
R62169:62176 Coq.Bool.Bool <> orb_comm thm
R62194:62206 compcert.lib.Integers Make same_bits_eqm thm
R62194:62206 compcert.lib.Integers Make same_bits_eqm thm
R62194:62206 compcert.lib.Integers Make same_bits_eqm thm
R62225:62243 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62225:62243 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62252:62260 compcert.lib.Integers Make eqm_refl2 thm
R62252:62260 compcert.lib.Integers Make eqm_refl2 thm
R62284:62294 Coq.ZArith.BinInt Z mod_small thm
R62284:62294 Coq.ZArith.BinInt Z mod_small thm
R62284:62294 Coq.ZArith.BinInt Z mod_small thm
R62284:62294 Coq.ZArith.BinInt Z mod_small thm
R62333:62335 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62315:62322 compcert.lib.Integers Make unsigned def
R62325:62327 compcert.lib.Integers Make add def
R62336:62344 compcert.lib.Integers Make zwordsize def
R62333:62335 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62315:62322 compcert.lib.Integers Make unsigned def
R62325:62327 compcert.lib.Integers Make add def
R62336:62344 compcert.lib.Integers Make zwordsize def
R62372:62393 compcert.lib.Integers Make unsigned_repr_wordsize thm
R62372:62393 compcert.lib.Integers Make unsigned_repr_wordsize thm
R62407:62409 compcert.lib.Integers Make add def
R62426:62438 compcert.lib.Integers Make unsigned_repr thm
R62426:62438 compcert.lib.Integers Make unsigned_repr thm
R62426:62438 compcert.lib.Integers Make unsigned_repr thm
R62426:62438 compcert.lib.Integers Make unsigned_repr thm
R62471:62495 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62471:62495 compcert.lib.Integers Make two_wordsize_max_unsigned thm
R62513:62531 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62513:62531 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R62540:62548 compcert.lib.Integers Make eqm_refl2 thm
R62540:62548 compcert.lib.Integers Make eqm_refl2 thm
R62570:62580 Coq.ZArith.BinInt Z mod_small thm
R62570:62580 Coq.ZArith.BinInt Z mod_small thm
prf 62640:62652 Make is_power2_inv
binder 62664:62664 <> n:549
binder 62666:62669 <> logn:550
R62697:62702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R62750:62753 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R62727:62729 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62703:62713 compcert.lib.Zbits <> Z_is_power2 def
R62716:62723 compcert.lib.Integers Make unsigned def
R62725:62725 compcert.lib.Integers <> n:549 var
R62730:62733 Coq.Init.Datatypes <> Some constr
R62736:62743 compcert.lib.Integers Make unsigned def
R62745:62748 compcert.lib.Integers <> logn:550 var
R62755:62758 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62772:62774 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62759:62766 compcert.lib.Integers Make unsigned def
R62768:62771 compcert.lib.Integers <> logn:550 var
R62759:62766 compcert.lib.Integers Make unsigned def
R62768:62771 compcert.lib.Integers <> logn:550 var
R62775:62783 compcert.lib.Integers Make zwordsize def
R62685:62687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62674:62682 compcert.lib.Integers Make is_power2 def
R62684:62684 compcert.lib.Integers <> n:549 var
R62688:62691 Coq.Init.Datatypes <> Some constr
R62693:62696 compcert.lib.Integers <> logn:550 var
R62802:62810 compcert.lib.Integers Make is_power2 def
R62833:62843 compcert.lib.Zbits <> Z_is_power2 def
R62846:62853 compcert.lib.Integers Make unsigned def
R62833:62843 compcert.lib.Zbits <> Z_is_power2 def
R62846:62853 compcert.lib.Integers Make unsigned def
R62892:62895 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62897:62899 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62900:62908 compcert.lib.Integers Make zwordsize def
R62892:62895 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62897:62899 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R62900:62908 compcert.lib.Integers Make zwordsize def
R62946:62953 compcert.lib.Integers Make unsigned def
R62922:62938 compcert.lib.Zbits <> Z_is_power2_range thm
R62946:62953 compcert.lib.Integers Make unsigned def
R62922:62938 compcert.lib.Zbits <> Z_is_power2_range thm
R62975:62986 compcert.lib.Integers Make wordsize_pos thm
R62975:62986 compcert.lib.Integers Make wordsize_pos thm
R63009:63021 compcert.lib.Integers Make modulus_power thm
R63009:63021 compcert.lib.Integers Make modulus_power thm
R63009:63021 compcert.lib.Integers Make modulus_power thm
R63030:63043 compcert.lib.Integers Make unsigned_range thm
R63030:63043 compcert.lib.Integers Make unsigned_range thm
R63068:63080 compcert.lib.Integers Make unsigned_repr thm
R63068:63080 compcert.lib.Integers Make unsigned_repr thm
R63068:63080 compcert.lib.Integers Make unsigned_repr thm
R63068:63080 compcert.lib.Integers Make unsigned_repr thm
R63100:63120 compcert.lib.Integers Make wordsize_max_unsigned thm
R63100:63120 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 63140:63152 Make is_power2_rng
binder 63164:63164 <> n:551
binder 63166:63169 <> logn:552
R63197:63202 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63204:63207 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63221:63223 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63208:63215 compcert.lib.Integers Make unsigned def
R63217:63220 compcert.lib.Integers <> logn:552 var
R63208:63215 compcert.lib.Integers Make unsigned def
R63217:63220 compcert.lib.Integers <> logn:552 var
R63224:63232 compcert.lib.Integers Make zwordsize def
R63185:63187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63174:63182 compcert.lib.Integers Make is_power2 def
R63184:63184 compcert.lib.Integers <> n:551 var
R63188:63191 Coq.Init.Datatypes <> Some constr
R63193:63196 compcert.lib.Integers <> logn:552 var
R63259:63271 compcert.lib.Integers Make is_power2_inv thm
R63259:63271 compcert.lib.Integers Make is_power2_inv thm
prf 63302:63316 Make is_power2_range
binder 63328:63328 <> n:553
binder 63330:63333 <> logn:554
R63361:63364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63383:63385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63365:63367 compcert.lib.Integers Make ltu def
R63374:63382 compcert.lib.Integers Make iwordsize def
R63369:63372 compcert.lib.Integers <> logn:554 var
R63386:63389 Coq.Init.Datatypes <> true constr
R63349:63351 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63338:63346 compcert.lib.Integers Make is_power2 def
R63348:63348 compcert.lib.Integers <> n:553 var
R63352:63355 Coq.Init.Datatypes <> Some constr
R63357:63360 compcert.lib.Integers <> logn:554 var
R63416:63418 compcert.lib.Integers Make ltu def
R63429:63450 compcert.lib.Integers Make unsigned_repr_wordsize thm
R63429:63450 compcert.lib.Integers Make unsigned_repr_wordsize thm
R63429:63450 compcert.lib.Integers Make unsigned_repr_wordsize thm
R63461:63468 compcert.lib.Coqlib <> zlt_true thm
R63461:63468 compcert.lib.Coqlib <> zlt_true thm
R63483:63495 compcert.lib.Integers Make is_power2_rng thm
R63483:63495 compcert.lib.Integers Make is_power2_rng thm
prf 63524:63540 Make is_power2_correct
binder 63552:63552 <> n:555
binder 63554:63557 <> logn:556
R63585:63590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63601:63603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63591:63598 compcert.lib.Integers Make unsigned def
R63600:63600 compcert.lib.Integers <> n:555 var
R63604:63608 Coq.ZArith.Zpower <> two_p def
R63611:63618 compcert.lib.Integers Make unsigned def
R63620:63623 compcert.lib.Integers <> logn:556 var
R63573:63575 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63562:63570 compcert.lib.Integers Make is_power2 def
R63572:63572 compcert.lib.Integers <> n:555 var
R63576:63579 Coq.Init.Datatypes <> Some constr
R63581:63584 compcert.lib.Integers <> logn:556 var
R63650:63662 compcert.lib.Integers Make is_power2_inv thm
R63650:63662 compcert.lib.Integers Make is_power2_inv thm
R63699:63715 compcert.lib.Zbits <> Z_is_power2_sound thm
R63699:63715 compcert.lib.Zbits <> Z_is_power2_sound thm
prf 63743:63753 Make two_p_range
binder 63765:63765 <> n:557
R63788:63793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63795:63798 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R63806:63809 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R63799:63803 Coq.ZArith.Zpower <> two_p def
R63805:63805 compcert.lib.Integers <> n:557 var
R63799:63803 Coq.ZArith.Zpower <> two_p def
R63805:63805 compcert.lib.Integers <> n:557 var
R63810:63821 compcert.lib.Integers Make max_unsigned def
R63771:63774 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63776:63778 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R63775:63775 compcert.lib.Integers <> n:557 var
R63775:63775 compcert.lib.Integers <> n:557 var
R63779:63787 compcert.lib.Integers Make zwordsize def
R63865:63867 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R63858:63862 Coq.ZArith.Zpower <> two_p def
R63865:63867 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R63858:63862 Coq.ZArith.Zpower <> two_p def
R63878:63890 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R63878:63890 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R63917:63937 compcert.lib.Coqlib <> two_p_monotone_strict thm
R63917:63937 compcert.lib.Coqlib <> two_p_monotone_strict thm
R63956:63964 compcert.lib.Integers Make zwordsize def
R63978:63996 compcert.lib.Coqlib <> two_power_nat_two_p thm
R63978:63996 compcert.lib.Coqlib <> two_power_nat_two_p thm
R63978:63996 compcert.lib.Coqlib <> two_power_nat_two_p thm
R64008:64019 compcert.lib.Integers Make max_unsigned def
R64022:64028 compcert.lib.Integers Make modulus def
prf 64048:64062 Make is_power2_two_p
binder 64074:64074 <> n:558
R64095:64100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64127:64129 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64101:64109 compcert.lib.Integers Make is_power2 def
R64112:64115 compcert.lib.Integers Make repr def
R64118:64122 Coq.ZArith.Zpower <> two_p def
R64124:64124 compcert.lib.Integers <> n:558 var
R64130:64133 Coq.Init.Datatypes <> Some constr
R64136:64139 compcert.lib.Integers Make repr def
R64141:64141 compcert.lib.Integers <> n:558 var
R64078:64081 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64083:64085 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R64082:64082 compcert.lib.Integers <> n:558 var
R64082:64082 compcert.lib.Integers <> n:558 var
R64086:64094 compcert.lib.Integers Make zwordsize def
R64169:64177 compcert.lib.Integers Make is_power2 def
R64188:64200 compcert.lib.Integers Make unsigned_repr thm
R64188:64200 compcert.lib.Integers Make unsigned_repr thm
R64188:64200 compcert.lib.Integers Make unsigned_repr thm
R64188:64200 compcert.lib.Integers Make unsigned_repr thm
R64213:64232 compcert.lib.Zbits <> Z_is_power2_complete thm
R64213:64232 compcert.lib.Zbits <> Z_is_power2_complete thm
R64213:64232 compcert.lib.Zbits <> Z_is_power2_complete thm
R64256:64266 compcert.lib.Integers Make two_p_range thm
R64256:64266 compcert.lib.Integers Make two_p_range thm
prf 64437:64449 Make shl_mul_two_p
binder 64461:64461 <> x:559
binder 64463:64463 <> y:560
R64475:64477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64468:64470 compcert.lib.Integers Make shl def
R64474:64474 compcert.lib.Integers <> y:560 var
R64472:64472 compcert.lib.Integers <> x:559 var
R64478:64480 compcert.lib.Integers Make mul def
R64485:64488 compcert.lib.Integers Make repr def
R64491:64495 Coq.ZArith.Zpower <> two_p def
R64498:64505 compcert.lib.Integers Make unsigned def
R64507:64507 compcert.lib.Integers <> y:560 var
R64482:64482 compcert.lib.Integers <> x:559 var
R64537:64539 compcert.lib.Integers Make shl def
R64542:64544 compcert.lib.Integers Make mul def
R64553:64564 compcert.lib.Integers Make eqm_samerepr thm
R64553:64564 compcert.lib.Integers Make eqm_samerepr thm
R64577:64593 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64577:64593 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64577:64593 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64577:64593 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R64626:64639 compcert.lib.Integers Make unsigned_range thm
R64626:64639 compcert.lib.Integers Make unsigned_range thm
prf 64664:64670 Make shl_mul
binder 64682:64682 <> x:561
binder 64684:64684 <> y:562
R64696:64698 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64689:64691 compcert.lib.Integers Make shl def
R64695:64695 compcert.lib.Integers <> y:562 var
R64693:64693 compcert.lib.Integers <> x:561 var
R64699:64701 compcert.lib.Integers Make mul def
R64706:64708 compcert.lib.Integers Make shl def
R64714:64714 compcert.lib.Integers <> y:562 var
R64710:64712 compcert.lib.Integers Make one def
R64703:64703 compcert.lib.Integers <> x:561 var
R64754:64756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64745:64747 compcert.lib.Integers Make shl def
R64749:64751 compcert.lib.Integers Make one def
R64757:64760 compcert.lib.Integers Make repr def
R64763:64767 Coq.ZArith.Zpower <> two_p def
R64770:64777 compcert.lib.Integers Make unsigned def
R64754:64756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64745:64747 compcert.lib.Integers Make shl def
R64749:64751 compcert.lib.Integers Make one def
R64757:64760 compcert.lib.Integers Make repr def
R64763:64767 Coq.ZArith.Zpower <> two_p def
R64770:64777 compcert.lib.Integers Make unsigned def
R64801:64813 compcert.lib.Integers Make shl_mul_two_p thm
R64801:64813 compcert.lib.Integers Make shl_mul_two_p thm
R64801:64813 compcert.lib.Integers Make shl_mul_two_p thm
R64824:64833 compcert.lib.Integers Make mul_commut thm
R64824:64833 compcert.lib.Integers Make mul_commut thm
R64824:64833 compcert.lib.Integers Make mul_commut thm
R64844:64850 compcert.lib.Integers Make mul_one thm
R64844:64850 compcert.lib.Integers Make mul_one thm
R64844:64850 compcert.lib.Integers Make mul_one thm
R64882:64894 compcert.lib.Integers Make shl_mul_two_p thm
R64882:64894 compcert.lib.Integers Make shl_mul_two_p thm
prf 64911:64918 Make mul_pow2
binder 64930:64930 <> x:563
binder 64932:64932 <> n:564
binder 64934:64937 <> logn:565
R64965:64970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64978:64980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64971:64973 compcert.lib.Integers Make mul def
R64977:64977 compcert.lib.Integers <> n:564 var
R64975:64975 compcert.lib.Integers <> x:563 var
R64981:64983 compcert.lib.Integers Make shl def
R64987:64990 compcert.lib.Integers <> logn:565 var
R64985:64985 compcert.lib.Integers <> x:563 var
R64953:64955 Coq.Init.Logic <> ::type_scope:x_'='_x not
R64942:64950 compcert.lib.Integers Make is_power2 def
R64952:64952 compcert.lib.Integers <> n:564 var
R64956:64959 Coq.Init.Datatypes <> Some constr
R64961:64964 compcert.lib.Integers <> logn:565 var
R65022:65038 compcert.lib.Integers Make is_power2_correct thm
R65022:65038 compcert.lib.Integers Make is_power2_correct thm
R65068:65080 compcert.lib.Integers Make shl_mul_two_p thm
R65068:65080 compcert.lib.Integers Make shl_mul_two_p thm
R65068:65080 compcert.lib.Integers Make shl_mul_two_p thm
R65106:65118 compcert.lib.Integers Make repr_unsigned thm
R65106:65118 compcert.lib.Integers Make repr_unsigned thm
R65106:65118 compcert.lib.Integers Make repr_unsigned thm
prf 65143:65159 Make shifted_or_is_add
binder 65171:65171 <> x:566
binder 65173:65173 <> y:567
binder 65175:65175 <> n:568
R65198:65203 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65224:65229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R65251:65253 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65230:65231 compcert.lib.Integers Make or def
R65250:65250 compcert.lib.Integers <> y:567 var
R65234:65236 compcert.lib.Integers Make shl def
R65241:65244 compcert.lib.Integers Make repr def
R65246:65246 compcert.lib.Integers <> n:568 var
R65238:65238 compcert.lib.Integers <> x:566 var
R65254:65257 compcert.lib.Integers Make repr def
R65279:65281 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R65269:65271 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R65259:65266 compcert.lib.Integers Make unsigned def
R65268:65268 compcert.lib.Integers <> x:566 var
R65272:65276 Coq.ZArith.Zpower <> two_p def
R65278:65278 compcert.lib.Integers <> n:568 var
R65282:65289 compcert.lib.Integers Make unsigned def
R65291:65291 compcert.lib.Integers <> y:567 var
R65214:65216 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R65204:65211 compcert.lib.Integers Make unsigned def
R65213:65213 compcert.lib.Integers <> y:567 var
R65217:65221 Coq.ZArith.Zpower <> two_p def
R65223:65223 compcert.lib.Integers <> n:568 var
R65181:65184 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R65186:65188 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R65185:65185 compcert.lib.Integers <> n:568 var
R65185:65185 compcert.lib.Integers <> n:568 var
R65189:65197 compcert.lib.Integers Make zwordsize def
R65323:65331 compcert.lib.Integers Make add_is_or thm
R65323:65331 compcert.lib.Integers Make add_is_or thm
R65323:65331 compcert.lib.Integers Make add_is_or thm
R65323:65331 compcert.lib.Integers Make add_is_or thm
R65345:65347 compcert.lib.Integers Make add def
R65356:65367 compcert.lib.Integers Make eqm_samerepr thm
R65356:65367 compcert.lib.Integers Make eqm_samerepr thm
R65376:65382 compcert.lib.Integers Make eqm_add thm
R65376:65382 compcert.lib.Integers Make eqm_add thm
R65413:65425 compcert.lib.Integers Make shl_mul_two_p thm
R65413:65425 compcert.lib.Integers Make shl_mul_two_p thm
R65413:65425 compcert.lib.Integers Make shl_mul_two_p thm
R65435:65437 compcert.lib.Integers Make mul def
R65446:65464 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65446:65464 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65477:65484 compcert.lib.Integers Make eqm_mult thm
R65477:65484 compcert.lib.Integers Make eqm_mult thm
R65509:65527 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65509:65527 compcert.lib.Integers Make eqm_unsigned_repr_l thm
R65540:65548 compcert.lib.Integers Make eqm_refl2 thm
R65540:65548 compcert.lib.Integers Make eqm_refl2 thm
R65559:65571 compcert.lib.Integers Make unsigned_repr thm
R65559:65571 compcert.lib.Integers Make unsigned_repr thm
R65559:65571 compcert.lib.Integers Make unsigned_repr thm
R65559:65571 compcert.lib.Integers Make unsigned_repr thm
R65595:65615 compcert.lib.Integers Make wordsize_max_unsigned thm
R65595:65615 compcert.lib.Integers Make wordsize_max_unsigned thm
R65650:65662 compcert.lib.Integers Make unsigned_repr thm
R65650:65662 compcert.lib.Integers Make unsigned_repr thm
R65650:65662 compcert.lib.Integers Make unsigned_repr thm
R65650:65662 compcert.lib.Integers Make unsigned_repr thm
R65679:65681 compcert.lib.Coqlib <> zlt def
R65679:65681 compcert.lib.Coqlib <> zlt def
R65716:65722 compcert.lib.Integers Make testbit def
R65734:65738 Coq.Init.Datatypes <> false constr
R65716:65722 compcert.lib.Integers Make testbit def
R65734:65738 Coq.Init.Datatypes <> false constr
R65747:65758 Coq.Bool.Bool <> andb_false_r thm
R65747:65758 Coq.Bool.Bool <> andb_false_r thm
R65784:65790 compcert.lib.Integers Make testbit def
R65832:65834 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65811:65818 Coq.ZArith.BinInt Z of_nat def
R65821:65828 Coq.ZArith.BinInt Z to_nat def
R65848:65855 Coq.ZArith.Znat Z2Nat id thm
R65832:65834 Coq.Init.Logic <> ::type_scope:x_'='_x not
R65811:65818 Coq.ZArith.BinInt Z of_nat def
R65821:65828 Coq.ZArith.BinInt Z to_nat def
R65848:65855 Coq.ZArith.Znat Z2Nat id thm
R65897:65904 Coq.ZArith.BinInt Z to_nat def
R65876:65889 compcert.lib.Zbits <> Ztestbit_above thm
R65897:65904 Coq.ZArith.BinInt Z to_nat def
R65876:65889 compcert.lib.Zbits <> Ztestbit_above thm
R65948:65966 compcert.lib.Coqlib <> two_power_nat_two_p thm
R65948:65966 compcert.lib.Coqlib <> two_power_nat_two_p thm
R65948:65966 compcert.lib.Coqlib <> two_power_nat_two_p thm
R65993:66006 compcert.lib.Integers Make unsigned_range thm
R65993:66006 compcert.lib.Integers Make unsigned_range thm
R66058:66078 compcert.lib.Integers Make wordsize_max_unsigned thm
R66058:66078 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 66167:66180 Make shru_div_two_p
binder 66192:66192 <> x:569
binder 66194:66194 <> y:570
R66207:66209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66199:66202 compcert.lib.Integers Make shru def
R66206:66206 compcert.lib.Integers <> y:570 var
R66204:66204 compcert.lib.Integers <> x:569 var
R66210:66213 compcert.lib.Integers Make repr def
R66226:66228 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R66216:66223 compcert.lib.Integers Make unsigned def
R66225:66225 compcert.lib.Integers <> x:569 var
R66229:66233 Coq.ZArith.Zpower <> two_p def
R66236:66243 compcert.lib.Integers Make unsigned def
R66245:66245 compcert.lib.Integers <> y:570 var
R66274:66277 compcert.lib.Integers Make shru def
R66290:66306 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66290:66306 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66290:66306 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66290:66306 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66329:66342 compcert.lib.Integers Make unsigned_range thm
R66329:66342 compcert.lib.Integers Make unsigned_range thm
prf 66367:66375 Make divu_pow2
binder 66387:66387 <> x:571
binder 66389:66389 <> n:572
binder 66391:66394 <> logn:573
R66422:66427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66436:66438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66428:66431 compcert.lib.Integers Make divu def
R66435:66435 compcert.lib.Integers <> n:572 var
R66433:66433 compcert.lib.Integers <> x:571 var
R66439:66442 compcert.lib.Integers Make shru def
R66446:66449 compcert.lib.Integers <> logn:573 var
R66444:66444 compcert.lib.Integers <> x:571 var
R66410:66412 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66399:66407 compcert.lib.Integers Make is_power2 def
R66409:66409 compcert.lib.Integers <> n:572 var
R66413:66416 Coq.Init.Datatypes <> Some constr
R66418:66421 compcert.lib.Integers <> logn:573 var
R66481:66497 compcert.lib.Integers Make is_power2_correct thm
R66481:66497 compcert.lib.Integers Make is_power2_correct thm
R66536:66539 compcert.lib.Integers Make divu def
R66560:66573 compcert.lib.Integers Make shru_div_two_p thm
R66560:66573 compcert.lib.Integers Make shru_div_two_p thm
prf 66653:66665 Make shr_div_two_p
binder 66677:66677 <> x:574
binder 66679:66679 <> y:575
R66691:66693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66684:66686 compcert.lib.Integers Make shr def
R66690:66690 compcert.lib.Integers <> y:575 var
R66688:66688 compcert.lib.Integers <> x:574 var
R66694:66697 compcert.lib.Integers Make repr def
R66708:66710 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R66700:66705 compcert.lib.Integers Make signed def
R66707:66707 compcert.lib.Integers <> x:574 var
R66711:66715 Coq.ZArith.Zpower <> two_p def
R66718:66725 compcert.lib.Integers Make unsigned def
R66727:66727 compcert.lib.Integers <> y:575 var
R66756:66758 compcert.lib.Integers Make shr def
R66771:66787 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66771:66787 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66771:66787 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66771:66787 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R66810:66823 compcert.lib.Integers Make unsigned_range thm
R66810:66823 compcert.lib.Integers Make unsigned_range thm
prf 66848:66856 Make divs_pow2
binder 66868:66868 <> x:576
binder 66870:66870 <> n:577
binder 66872:66875 <> logn:578
R66903:66908 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66917:66919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66909:66912 compcert.lib.Integers Make divs def
R66916:66916 compcert.lib.Integers <> n:577 var
R66914:66914 compcert.lib.Integers <> x:576 var
R66920:66923 compcert.lib.Integers Make shrx def
R66927:66930 compcert.lib.Integers <> logn:578 var
R66925:66925 compcert.lib.Integers <> x:576 var
R66891:66893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R66880:66888 compcert.lib.Integers Make is_power2 def
R66890:66890 compcert.lib.Integers <> n:577 var
R66894:66897 Coq.Init.Datatypes <> Some constr
R66899:66902 compcert.lib.Integers <> logn:578 var
R66962:66978 compcert.lib.Integers Make is_power2_correct thm
R66962:66978 compcert.lib.Integers Make is_power2_correct thm
R67004:67007 compcert.lib.Integers Make shrx def
R67018:67030 compcert.lib.Integers Make shl_mul_two_p thm
R67018:67030 compcert.lib.Integers Make shl_mul_two_p thm
R67018:67030 compcert.lib.Integers Make shl_mul_two_p thm
R67043:67052 compcert.lib.Integers Make mul_commut thm
R67043:67052 compcert.lib.Integers Make mul_commut thm
R67043:67052 compcert.lib.Integers Make mul_commut thm
R67063:67069 compcert.lib.Integers Make mul_one thm
R67063:67069 compcert.lib.Integers Make mul_one thm
R67063:67069 compcert.lib.Integers Make mul_one thm
R67097:67109 compcert.lib.Integers Make repr_unsigned thm
R67097:67109 compcert.lib.Integers Make repr_unsigned thm
R67097:67109 compcert.lib.Integers Make repr_unsigned thm
prf 67193:67200 Make modu_and
binder 67212:67212 <> x:579
binder 67214:67214 <> n:580
binder 67216:67219 <> logn:581
R67247:67252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67261:67263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67253:67256 compcert.lib.Integers Make modu def
R67260:67260 compcert.lib.Integers <> n:580 var
R67258:67258 compcert.lib.Integers <> x:579 var
R67264:67266 compcert.lib.Integers Make and def
R67271:67273 compcert.lib.Integers Make sub def
R67277:67279 compcert.lib.Integers Make one def
R67275:67275 compcert.lib.Integers <> n:580 var
R67268:67268 compcert.lib.Integers <> x:579 var
R67235:67237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67224:67232 compcert.lib.Integers Make is_power2 def
R67234:67234 compcert.lib.Integers <> n:580 var
R67238:67241 Coq.Init.Datatypes <> Some constr
R67243:67246 compcert.lib.Integers <> logn:581 var
R67312:67328 compcert.lib.Integers Make is_power2_correct thm
R67312:67328 compcert.lib.Integers Make is_power2_correct thm
R67359:67371 compcert.lib.Integers Make is_power2_rng thm
R67359:67371 compcert.lib.Integers Make is_power2_rng thm
R67396:67407 compcert.lib.Integers Make same_bits_eq thm
R67396:67407 compcert.lib.Integers Make same_bits_eq thm
R67428:67435 compcert.lib.Integers Make bits_and thm
R67428:67435 compcert.lib.Integers Make bits_and thm
R67428:67435 compcert.lib.Integers Make bits_and thm
R67428:67435 compcert.lib.Integers Make bits_and thm
R67453:67455 compcert.lib.Integers Make sub def
R67466:67477 compcert.lib.Integers Make testbit_repr thm
R67466:67477 compcert.lib.Integers Make testbit_repr thm
R67466:67477 compcert.lib.Integers Make testbit_repr thm
R67466:67477 compcert.lib.Integers Make testbit_repr thm
R67508:67519 compcert.lib.Integers Make unsigned_one thm
R67508:67519 compcert.lib.Integers Make unsigned_one thm
R67508:67519 compcert.lib.Integers Make unsigned_one thm
R67531:67534 compcert.lib.Integers Make modu def
R67545:67556 compcert.lib.Integers Make testbit_repr thm
R67545:67556 compcert.lib.Integers Make testbit_repr thm
R67545:67556 compcert.lib.Integers Make testbit_repr thm
R67545:67556 compcert.lib.Integers Make testbit_repr thm
R67587:67604 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67587:67604 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67587:67604 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67587:67604 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67587:67604 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R67615:67631 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67615:67631 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67615:67631 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67615:67631 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67615:67631 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R67646:67648 compcert.lib.Coqlib <> zlt def
R67653:67660 compcert.lib.Integers Make unsigned def
R67646:67648 compcert.lib.Coqlib <> zlt def
R67653:67660 compcert.lib.Integers Make unsigned def
R67680:67690 Coq.Bool.Bool <> andb_true_r thm
R67680:67690 Coq.Bool.Bool <> andb_true_r thm
R67680:67690 Coq.Bool.Bool <> andb_true_r thm
R67709:67720 Coq.Bool.Bool <> andb_false_r thm
R67709:67720 Coq.Bool.Bool <> andb_false_r thm
R67709:67720 Coq.Bool.Bool <> andb_false_r thm
prf 67839:67847 Make shrx_zero
binder 67859:67859 <> x:582
R67875:67878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67890:67892 Coq.Init.Logic <> ::type_scope:x_'='_x not
R67879:67882 compcert.lib.Integers Make shrx def
R67886:67889 compcert.lib.Integers Make zero def
R67884:67884 compcert.lib.Integers <> x:582 var
R67893:67893 compcert.lib.Integers <> x:582 var
R67871:67873 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R67862:67870 compcert.lib.Integers Make zwordsize def
R67920:67923 compcert.lib.Integers Make shrx def
R67934:67941 compcert.lib.Integers Make shl_zero thm
R67934:67941 compcert.lib.Integers Make shl_zero thm
R67934:67941 compcert.lib.Integers Make shl_zero thm
R67951:67954 compcert.lib.Integers Make divs def
R67965:67974 compcert.lib.Integers Make signed_one thm
R67965:67974 compcert.lib.Integers Make signed_one thm
R67965:67974 compcert.lib.Integers Make signed_one thm
R67995:68004 Coq.ZArith.BinInt Z quot_1_r thm
R67995:68004 Coq.ZArith.BinInt Z quot_1_r thm
R67995:68004 Coq.ZArith.BinInt Z quot_1_r thm
R68013:68023 compcert.lib.Integers Make repr_signed thm
R68013:68023 compcert.lib.Integers Make repr_signed thm
prf 68041:68048 Make shrx_shr
binder 68060:68060 <> x:583
binder 68062:68062 <> y:584
R68102:68107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68116:68118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68108:68111 compcert.lib.Integers Make shrx def
R68115:68115 compcert.lib.Integers <> y:584 var
R68113:68113 compcert.lib.Integers <> x:583 var
R68119:68121 compcert.lib.Integers Make shr def
R68178:68178 compcert.lib.Integers <> y:584 var
R68127:68128 compcert.lib.Integers Make lt def
R68132:68135 compcert.lib.Integers Make zero def
R68130:68130 compcert.lib.Integers <> x:583 var
R68175:68175 compcert.lib.Integers <> x:583 var
R68142:68144 compcert.lib.Integers Make add def
R68149:68151 compcert.lib.Integers Make sub def
R68165:68167 compcert.lib.Integers Make one def
R68154:68156 compcert.lib.Integers Make shl def
R68162:68162 compcert.lib.Integers <> y:584 var
R68158:68160 compcert.lib.Integers Make one def
R68146:68146 compcert.lib.Integers <> x:583 var
R68095:68097 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68067:68069 compcert.lib.Integers Make ltu def
R68074:68077 compcert.lib.Integers Make repr def
R68089:68091 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68080:68088 compcert.lib.Integers Make zwordsize def
R68071:68071 compcert.lib.Integers <> y:584 var
R68098:68101 Coq.Init.Datatypes <> true constr
R68211:68218 compcert.lib.Integers Make unsigned def
R68211:68218 compcert.lib.Integers Make unsigned def
R68235:68238 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68241:68243 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68253:68255 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68244:68252 compcert.lib.Integers Make zwordsize def
R68235:68238 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68241:68243 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R68253:68255 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R68244:68252 compcert.lib.Integers Make zwordsize def
R68276:68282 compcert.lib.Integers Make ltu_inv thm
R68276:68282 compcert.lib.Integers Make ltu_inv thm
R68300:68312 compcert.lib.Integers Make unsigned_repr thm
R68300:68312 compcert.lib.Integers Make unsigned_repr thm
R68300:68312 compcert.lib.Integers Make unsigned_repr thm
R68300:68312 compcert.lib.Integers Make unsigned_repr thm
R68336:68347 compcert.lib.Integers Make wordsize_pos thm
R68349:68369 compcert.lib.Integers Make wordsize_max_unsigned thm
R68336:68347 compcert.lib.Integers Make wordsize_pos thm
R68349:68369 compcert.lib.Integers Make wordsize_max_unsigned thm
R68387:68399 compcert.lib.Integers Make shr_div_two_p thm
R68387:68399 compcert.lib.Integers Make shr_div_two_p thm
R68387:68399 compcert.lib.Integers Make shr_div_two_p thm
R68409:68412 compcert.lib.Integers Make shrx def
R68422:68425 compcert.lib.Integers Make divs def
R68447:68449 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68438:68440 compcert.lib.Integers Make shl def
R68442:68444 compcert.lib.Integers Make one def
R68450:68453 compcert.lib.Integers Make repr def
R68456:68460 Coq.ZArith.Zpower <> two_p def
R68447:68449 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68438:68440 compcert.lib.Integers Make shl def
R68442:68444 compcert.lib.Integers Make one def
R68450:68453 compcert.lib.Integers Make repr def
R68456:68460 Coq.ZArith.Zpower <> two_p def
R68486:68488 compcert.lib.Integers Make mul def
R68495:68498 compcert.lib.Integers Make repr def
R68501:68505 Coq.ZArith.Zpower <> two_p def
R68490:68492 compcert.lib.Integers Make one def
R68486:68488 compcert.lib.Integers Make mul def
R68495:68498 compcert.lib.Integers Make repr def
R68501:68505 Coq.ZArith.Zpower <> two_p def
R68490:68492 compcert.lib.Integers Make one def
R68534:68541 compcert.lib.Integers Make mul_pow2 thm
R68534:68541 compcert.lib.Integers Make mul_pow2 thm
R68560:68563 compcert.lib.Integers Make repr def
R68560:68563 compcert.lib.Integers Make repr def
R68580:68594 compcert.lib.Integers Make is_power2_two_p thm
R68580:68594 compcert.lib.Integers Make is_power2_two_p thm
R68608:68620 compcert.lib.Integers Make repr_unsigned thm
R68608:68620 compcert.lib.Integers Make repr_unsigned thm
R68635:68644 compcert.lib.Integers Make mul_commut thm
R68635:68644 compcert.lib.Integers Make mul_commut thm
R68635:68644 compcert.lib.Integers Make mul_commut thm
R68653:68659 compcert.lib.Integers Make mul_one thm
R68653:68659 compcert.lib.Integers Make mul_one thm
R68680:68682 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R68672:68676 Coq.ZArith.Zpower <> two_p def
R68680:68682 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R68672:68676 Coq.ZArith.Zpower <> two_p def
R68693:68705 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R68693:68705 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R68731:68733 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R68723:68727 Coq.ZArith.Zpower <> two_p def
R68734:68745 compcert.lib.Integers Make half_modulus def
R68731:68733 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R68723:68727 Coq.ZArith.Zpower <> two_p def
R68734:68745 compcert.lib.Integers Make half_modulus def
R68761:68778 compcert.lib.Integers Make half_modulus_power thm
R68761:68778 compcert.lib.Integers Make half_modulus_power thm
R68761:68778 compcert.lib.Integers Make half_modulus_power thm
R68791:68811 compcert.lib.Coqlib <> two_p_monotone_strict thm
R68791:68811 compcert.lib.Coqlib <> two_p_monotone_strict thm
R68838:68840 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R68830:68834 Coq.ZArith.Zpower <> two_p def
R68841:68847 compcert.lib.Integers Make modulus def
R68838:68840 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R68830:68834 Coq.ZArith.Zpower <> two_p def
R68841:68847 compcert.lib.Integers Make modulus def
R68863:68875 compcert.lib.Integers Make modulus_power thm
R68863:68875 compcert.lib.Integers Make modulus_power thm
R68863:68875 compcert.lib.Integers Make modulus_power thm
R68884:68904 compcert.lib.Coqlib <> two_p_monotone_strict thm
R68884:68904 compcert.lib.Coqlib <> two_p_monotone_strict thm
R68942:68944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68922:68929 compcert.lib.Integers Make unsigned def
R68932:68934 compcert.lib.Integers Make shl def
R68936:68938 compcert.lib.Integers Make one def
R68945:68949 Coq.ZArith.Zpower <> two_p def
R68942:68944 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68922:68929 compcert.lib.Integers Make unsigned def
R68932:68934 compcert.lib.Integers Make shl def
R68936:68938 compcert.lib.Integers Make one def
R68945:68949 Coq.ZArith.Zpower <> two_p def
R68978:68990 compcert.lib.Integers Make unsigned_repr thm
R68978:68990 compcert.lib.Integers Make unsigned_repr thm
R69000:69011 compcert.lib.Integers Make max_unsigned def
R69047:69049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69029:69034 compcert.lib.Integers Make signed def
R69037:69039 compcert.lib.Integers Make shl def
R69041:69043 compcert.lib.Integers Make one def
R69050:69054 Coq.ZArith.Zpower <> two_p def
R69047:69049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69029:69034 compcert.lib.Integers Make signed def
R69037:69039 compcert.lib.Integers Make shl def
R69041:69043 compcert.lib.Integers Make one def
R69050:69054 Coq.ZArith.Zpower <> two_p def
R69083:69093 compcert.lib.Integers Make signed_repr thm
R69083:69093 compcert.lib.Integers Make signed_repr thm
R69107:69116 compcert.lib.Integers Make max_signed def
R69130:69143 compcert.lib.Integers Make min_signed_neg thm
R69130:69143 compcert.lib.Integers Make min_signed_neg thm
R69175:69184 compcert.lib.Zbits <> Zquot_Zdiv thm
R69175:69184 compcert.lib.Zbits <> Zquot_Zdiv thm
R69175:69184 compcert.lib.Zbits <> Zquot_Zdiv thm
R69175:69184 compcert.lib.Zbits <> Zquot_Zdiv thm
R69202:69203 compcert.lib.Integers Make lt def
R69214:69224 compcert.lib.Integers Make signed_zero thm
R69214:69224 compcert.lib.Integers Make signed_zero thm
R69214:69224 compcert.lib.Integers Make signed_zero thm
R69239:69241 compcert.lib.Coqlib <> zlt def
R69244:69249 compcert.lib.Integers Make signed def
R69239:69241 compcert.lib.Coqlib <> zlt def
R69244:69249 compcert.lib.Integers Make signed def
R69274:69283 compcert.lib.Integers Make add_signed thm
R69274:69283 compcert.lib.Integers Make add_signed thm
R69274:69283 compcert.lib.Integers Make add_signed thm
R69324:69326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69296:69301 compcert.lib.Integers Make signed def
R69304:69306 compcert.lib.Integers Make sub def
R69320:69322 compcert.lib.Integers Make one def
R69309:69311 compcert.lib.Integers Make shl def
R69313:69315 compcert.lib.Integers Make one def
R69335:69337 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69327:69331 Coq.ZArith.Zpower <> two_p def
R69324:69326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69296:69301 compcert.lib.Integers Make signed def
R69304:69306 compcert.lib.Integers Make sub def
R69320:69322 compcert.lib.Integers Make one def
R69309:69311 compcert.lib.Integers Make shl def
R69313:69315 compcert.lib.Integers Make one def
R69335:69337 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69327:69331 Coq.ZArith.Zpower <> two_p def
R69353:69355 compcert.lib.Integers Make sub def
R69378:69389 compcert.lib.Integers Make unsigned_one thm
R69378:69389 compcert.lib.Integers Make unsigned_one thm
R69378:69389 compcert.lib.Integers Make unsigned_one thm
R69402:69412 compcert.lib.Integers Make signed_repr thm
R69402:69412 compcert.lib.Integers Make signed_repr thm
R69430:69443 compcert.lib.Integers Make min_signed_neg thm
R69430:69443 compcert.lib.Integers Make min_signed_neg thm
R69453:69462 compcert.lib.Integers Make max_signed def
R69492:69502 compcert.lib.Integers Make signed_repr thm
R69492:69502 compcert.lib.Integers Make signed_repr thm
R69492:69502 compcert.lib.Integers Make signed_repr thm
R69492:69502 compcert.lib.Integers Make signed_repr thm
R69542:69553 compcert.lib.Integers Make signed_range thm
R69542:69553 compcert.lib.Integers Make signed_range thm
R69589:69592 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R69585:69587 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69577:69581 Coq.ZArith.Zpower <> two_p def
R69593:69602 compcert.lib.Integers Make max_signed def
R69589:69592 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R69585:69587 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69577:69581 Coq.ZArith.Zpower <> two_p def
R69593:69602 compcert.lib.Integers Make max_signed def
R69613:69622 compcert.lib.Integers Make max_signed def
prf 69649:69658 Make shrx_shr_2
binder 69670:69670 <> x:585
binder 69672:69672 <> y:586
R69712:69717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69726:69728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69718:69721 compcert.lib.Integers Make shrx def
R69725:69725 compcert.lib.Integers <> y:586 var
R69723:69723 compcert.lib.Integers <> x:585 var
R69729:69731 compcert.lib.Integers Make shr def
R69797:69797 compcert.lib.Integers <> y:586 var
R69734:69736 compcert.lib.Integers Make add def
R69741:69744 compcert.lib.Integers Make shru def
R69778:69780 compcert.lib.Integers Make sub def
R69792:69792 compcert.lib.Integers <> y:586 var
R69782:69790 compcert.lib.Integers Make iwordsize def
R69747:69749 compcert.lib.Integers Make shr def
R69754:69757 compcert.lib.Integers Make repr def
R69769:69771 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69760:69768 compcert.lib.Integers Make zwordsize def
R69751:69751 compcert.lib.Integers <> x:585 var
R69738:69738 compcert.lib.Integers <> x:585 var
R69705:69707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69677:69679 compcert.lib.Integers Make ltu def
R69684:69687 compcert.lib.Integers Make repr def
R69699:69701 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69690:69698 compcert.lib.Integers Make zwordsize def
R69681:69681 compcert.lib.Integers <> y:586 var
R69708:69711 Coq.Init.Datatypes <> true constr
R69827:69834 compcert.lib.Integers Make shrx_shr thm
R69827:69834 compcert.lib.Integers Make shrx_shr thm
R69827:69834 compcert.lib.Integers Make shrx_shr thm
R69864:69874 compcert.lib.Integers Make shr_lt_zero thm
R69864:69874 compcert.lib.Integers Make shr_lt_zero thm
R69864:69874 compcert.lib.Integers Make shr_lt_zero thm
R69887:69888 compcert.lib.Integers Make lt def
R69892:69895 compcert.lib.Integers Make zero def
R69887:69888 compcert.lib.Integers Make lt def
R69892:69895 compcert.lib.Integers Make zero def
R69912:69919 compcert.lib.Integers Make unsigned def
R69912:69919 compcert.lib.Integers Make unsigned def
R69939:69952 compcert.lib.Integers Make unsigned_range thm
R69939:69952 compcert.lib.Integers Make unsigned_range thm
R69986:69989 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R69992:69994 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R70004:70006 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69995:70003 compcert.lib.Integers Make zwordsize def
R69986:69989 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R69992:69994 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R70004:70006 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R69995:70003 compcert.lib.Integers Make zwordsize def
R70027:70033 compcert.lib.Integers Make ltu_inv thm
R70027:70033 compcert.lib.Integers Make ltu_inv thm
R70051:70063 compcert.lib.Integers Make unsigned_repr thm
R70051:70063 compcert.lib.Integers Make unsigned_repr thm
R70051:70063 compcert.lib.Integers Make unsigned_repr thm
R70051:70063 compcert.lib.Integers Make unsigned_repr thm
R70087:70098 compcert.lib.Integers Make wordsize_pos thm
R70100:70120 compcert.lib.Integers Make wordsize_max_unsigned thm
R70087:70098 compcert.lib.Integers Make wordsize_pos thm
R70100:70120 compcert.lib.Integers Make wordsize_max_unsigned thm
R70146:70148 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R70138:70142 Coq.ZArith.Zpower <> two_p def
R70149:70155 compcert.lib.Integers Make modulus def
R70146:70148 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R70138:70142 Coq.ZArith.Zpower <> two_p def
R70149:70155 compcert.lib.Integers Make modulus def
R70171:70183 compcert.lib.Integers Make modulus_power thm
R70171:70183 compcert.lib.Integers Make modulus_power thm
R70171:70183 compcert.lib.Integers Make modulus_power thm
R70192:70212 compcert.lib.Coqlib <> two_p_monotone_strict thm
R70192:70212 compcert.lib.Coqlib <> two_p_monotone_strict thm
R70239:70251 compcert.lib.Integers Make shl_mul_two_p thm
R70239:70251 compcert.lib.Integers Make shl_mul_two_p thm
R70239:70251 compcert.lib.Integers Make shl_mul_two_p thm
R70271:70280 compcert.lib.Integers Make mul_commut thm
R70271:70280 compcert.lib.Integers Make mul_commut thm
R70271:70280 compcert.lib.Integers Make mul_commut thm
R70291:70297 compcert.lib.Integers Make mul_one thm
R70291:70297 compcert.lib.Integers Make mul_one thm
R70291:70297 compcert.lib.Integers Make mul_one thm
R70309:70311 compcert.lib.Integers Make sub def
R70322:70333 compcert.lib.Integers Make unsigned_one thm
R70322:70333 compcert.lib.Integers Make unsigned_one thm
R70322:70333 compcert.lib.Integers Make unsigned_one thm
R70344:70356 compcert.lib.Integers Make unsigned_repr thm
R70344:70356 compcert.lib.Integers Make unsigned_repr thm
R70344:70356 compcert.lib.Integers Make unsigned_repr thm
R70344:70356 compcert.lib.Integers Make unsigned_repr thm
R70369:70390 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70369:70390 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70369:70390 compcert.lib.Integers Make unsigned_repr_wordsize thm
R70410:70421 compcert.lib.Integers Make same_bits_eq thm
R70410:70421 compcert.lib.Integers Make same_bits_eq thm
R70440:70448 compcert.lib.Integers Make bits_shru thm
R70440:70448 compcert.lib.Integers Make bits_shru thm
R70440:70448 compcert.lib.Integers Make bits_shru thm
R70469:70480 compcert.lib.Integers Make testbit_repr thm
R70469:70480 compcert.lib.Integers Make testbit_repr thm
R70469:70480 compcert.lib.Integers Make testbit_repr thm
R70499:70515 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R70499:70515 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R70499:70515 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R70564:70584 compcert.lib.Integers Make wordsize_max_unsigned thm
R70535:70547 compcert.lib.Integers Make unsigned_repr thm
R70535:70547 compcert.lib.Integers Make unsigned_repr thm
R70564:70584 compcert.lib.Integers Make wordsize_max_unsigned thm
R70535:70547 compcert.lib.Integers Make unsigned_repr thm
R70605:70607 compcert.lib.Coqlib <> zlt def
R70605:70607 compcert.lib.Coqlib <> zlt def
R70626:70633 compcert.lib.Coqlib <> zlt_true thm
R70626:70633 compcert.lib.Coqlib <> zlt_true thm
R70626:70633 compcert.lib.Coqlib <> zlt_true thm
R70651:70659 compcert.lib.Integers Make bits_mone thm
R70651:70659 compcert.lib.Integers Make bits_mone thm
R70651:70659 compcert.lib.Integers Make bits_mone thm
R70685:70693 compcert.lib.Coqlib <> zlt_false thm
R70685:70693 compcert.lib.Coqlib <> zlt_false thm
R70685:70693 compcert.lib.Coqlib <> zlt_false thm
R70727:70729 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R70719:70723 Coq.ZArith.Zpower <> two_p def
R70743:70755 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R70727:70729 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R70719:70723 Coq.ZArith.Zpower <> two_p def
R70743:70755 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R70771:70782 compcert.lib.Integers Make max_unsigned def
R70801:70804 compcert.lib.Integers Make shru def
R70812:70814 compcert.lib.Integers Make sub def
R70816:70824 compcert.lib.Integers Make iwordsize def
R70806:70809 compcert.lib.Integers Make zero def
R70835:70838 compcert.lib.Integers Make zero def
R70801:70804 compcert.lib.Integers Make shru def
R70812:70814 compcert.lib.Integers Make sub def
R70816:70824 compcert.lib.Integers Make iwordsize def
R70806:70809 compcert.lib.Integers Make zero def
R70835:70838 compcert.lib.Integers Make zero def
R70851:70858 compcert.lib.Integers Make add_zero thm
R70851:70858 compcert.lib.Integers Make add_zero thm
R70851:70858 compcert.lib.Integers Make add_zero thm
R70890:70892 compcert.lib.Coqlib <> zlt def
R70927:70935 compcert.lib.Integers Make zwordsize def
R70896:70898 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R70899:70906 compcert.lib.Integers Make unsigned def
R70909:70911 compcert.lib.Integers Make sub def
R70913:70921 compcert.lib.Integers Make iwordsize def
R70890:70892 compcert.lib.Coqlib <> zlt def
R70927:70935 compcert.lib.Integers Make zwordsize def
R70896:70898 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R70899:70906 compcert.lib.Integers Make unsigned def
R70909:70911 compcert.lib.Integers Make sub def
R70913:70921 compcert.lib.Integers Make iwordsize def
prf 70959:70968 Make shrx_carry
binder 70980:70980 <> x:587
binder 70982:70982 <> y:588
R71022:71027 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71036:71038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71028:71031 compcert.lib.Integers Make shrx def
R71035:71035 compcert.lib.Integers <> y:588 var
R71033:71033 compcert.lib.Integers <> x:587 var
R71039:71041 compcert.lib.Integers Make add def
R71054:71062 compcert.lib.Integers Make shr_carry def
R71066:71066 compcert.lib.Integers <> y:588 var
R71064:71064 compcert.lib.Integers <> x:587 var
R71044:71046 compcert.lib.Integers Make shr def
R71050:71050 compcert.lib.Integers <> y:588 var
R71048:71048 compcert.lib.Integers <> x:587 var
R71015:71017 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70987:70989 compcert.lib.Integers Make ltu def
R70994:70997 compcert.lib.Integers Make repr def
R71009:71011 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R71000:71008 compcert.lib.Integers Make zwordsize def
R70991:70991 compcert.lib.Integers <> y:588 var
R71018:71021 Coq.Init.Datatypes <> true constr
R71095:71102 compcert.lib.Integers Make shrx_shr thm
R71095:71102 compcert.lib.Integers Make shrx_shr thm
R71095:71102 compcert.lib.Integers Make shrx_shr thm
R71095:71102 compcert.lib.Integers Make shrx_shr thm
R71118:71126 compcert.lib.Integers Make shr_carry def
R71138:71139 compcert.lib.Integers Make lt def
R71153:71158 compcert.lib.Integers Make signed def
R71153:71158 compcert.lib.Integers Make signed def
R71172:71182 compcert.lib.Integers Make signed_zero thm
R71172:71182 compcert.lib.Integers Make signed_zero thm
R71172:71182 compcert.lib.Integers Make signed_zero thm
R71197:71199 compcert.lib.Coqlib <> zlt def
R71197:71199 compcert.lib.Coqlib <> zlt def
R71228:71235 compcert.lib.Integers Make add_zero thm
R71228:71235 compcert.lib.Integers Make add_zero thm
R71228:71235 compcert.lib.Integers Make add_zero thm
R71257:71264 compcert.lib.Integers Make unsigned def
R71257:71264 compcert.lib.Integers Make unsigned def
R71281:71284 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71287:71289 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71299:71301 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R71290:71298 compcert.lib.Integers Make zwordsize def
R71281:71284 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71287:71289 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R71299:71301 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R71290:71298 compcert.lib.Integers Make zwordsize def
R71322:71328 compcert.lib.Integers Make ltu_inv thm
R71322:71328 compcert.lib.Integers Make ltu_inv thm
R71346:71358 compcert.lib.Integers Make unsigned_repr thm
R71346:71358 compcert.lib.Integers Make unsigned_repr thm
R71346:71358 compcert.lib.Integers Make unsigned_repr thm
R71346:71358 compcert.lib.Integers Make unsigned_repr thm
R71382:71393 compcert.lib.Integers Make wordsize_pos thm
R71395:71415 compcert.lib.Integers Make wordsize_max_unsigned thm
R71382:71393 compcert.lib.Integers Make wordsize_pos thm
R71395:71415 compcert.lib.Integers Make wordsize_max_unsigned thm
R71442:71444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71433:71435 compcert.lib.Integers Make shl def
R71437:71439 compcert.lib.Integers Make one def
R71445:71448 compcert.lib.Integers Make repr def
R71451:71455 Coq.ZArith.Zpower <> two_p def
R71442:71444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71433:71435 compcert.lib.Integers Make shl def
R71437:71439 compcert.lib.Integers Make one def
R71445:71448 compcert.lib.Integers Make repr def
R71451:71455 Coq.ZArith.Zpower <> two_p def
R71475:71487 compcert.lib.Integers Make shl_mul_two_p thm
R71475:71487 compcert.lib.Integers Make shl_mul_two_p thm
R71475:71487 compcert.lib.Integers Make shl_mul_two_p thm
R71498:71507 compcert.lib.Integers Make mul_commut thm
R71498:71507 compcert.lib.Integers Make mul_commut thm
R71498:71507 compcert.lib.Integers Make mul_commut thm
R71516:71522 compcert.lib.Integers Make mul_one thm
R71516:71522 compcert.lib.Integers Make mul_one thm
R71562:71564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71535:71537 compcert.lib.Integers Make and def
R71542:71544 compcert.lib.Integers Make sub def
R71558:71560 compcert.lib.Integers Make one def
R71547:71549 compcert.lib.Integers Make shl def
R71551:71553 compcert.lib.Integers Make one def
R71565:71568 compcert.lib.Integers Make modu def
R71573:71576 compcert.lib.Integers Make repr def
R71579:71583 Coq.ZArith.Zpower <> two_p def
R71562:71564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71535:71537 compcert.lib.Integers Make and def
R71542:71544 compcert.lib.Integers Make sub def
R71558:71560 compcert.lib.Integers Make one def
R71547:71549 compcert.lib.Integers Make shl def
R71551:71553 compcert.lib.Integers Make one def
R71565:71568 compcert.lib.Integers Make modu def
R71573:71576 compcert.lib.Integers Make repr def
R71579:71583 Coq.ZArith.Zpower <> two_p def
R71624:71631 compcert.lib.Integers Make modu_and thm
R71624:71631 compcert.lib.Integers Make modu_and thm
R71663:71677 compcert.lib.Integers Make is_power2_two_p thm
R71663:71677 compcert.lib.Integers Make is_power2_two_p thm
R71663:71677 compcert.lib.Integers Make is_power2_two_p thm
R71663:71677 compcert.lib.Integers Make is_power2_two_p thm
R71699:71711 compcert.lib.Integers Make repr_unsigned thm
R71699:71711 compcert.lib.Integers Make repr_unsigned thm
R71699:71711 compcert.lib.Integers Make repr_unsigned thm
R71772:71784 compcert.lib.Integers Make shr_div_two_p thm
R71772:71784 compcert.lib.Integers Make shr_div_two_p thm
R71772:71784 compcert.lib.Integers Make shr_div_two_p thm
R71772:71784 compcert.lib.Integers Make shr_div_two_p thm
R71772:71784 compcert.lib.Integers Make shr_div_two_p thm
R71772:71784 compcert.lib.Integers Make shr_div_two_p thm
R71823:71825 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R71815:71819 Coq.ZArith.Zpower <> two_p def
R71823:71825 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R71815:71819 Coq.ZArith.Zpower <> two_p def
R71836:71848 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R71836:71848 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R71874:71876 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R71866:71870 Coq.ZArith.Zpower <> two_p def
R71877:71883 compcert.lib.Integers Make modulus def
R71874:71876 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R71866:71870 Coq.ZArith.Zpower <> two_p def
R71877:71883 compcert.lib.Integers Make modulus def
R71899:71911 compcert.lib.Integers Make modulus_power thm
R71899:71911 compcert.lib.Integers Make modulus_power thm
R71899:71911 compcert.lib.Integers Make modulus_power thm
R71920:71940 compcert.lib.Coqlib <> two_p_monotone_strict thm
R71920:71940 compcert.lib.Coqlib <> two_p_monotone_strict thm
R71966:71968 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R71958:71962 Coq.ZArith.Zpower <> two_p def
R71969:71980 compcert.lib.Integers Make half_modulus def
R71966:71968 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R71958:71962 Coq.ZArith.Zpower <> two_p def
R71969:71980 compcert.lib.Integers Make half_modulus def
R71996:72013 compcert.lib.Integers Make half_modulus_power thm
R71996:72013 compcert.lib.Integers Make half_modulus_power thm
R71996:72013 compcert.lib.Integers Make half_modulus_power thm
R72026:72046 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72026:72046 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72073:72075 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72065:72069 Coq.ZArith.Zpower <> two_p def
R72076:72082 compcert.lib.Integers Make modulus def
R72073:72075 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R72065:72069 Coq.ZArith.Zpower <> two_p def
R72076:72082 compcert.lib.Integers Make modulus def
R72098:72110 compcert.lib.Integers Make modulus_power thm
R72098:72110 compcert.lib.Integers Make modulus_power thm
R72098:72110 compcert.lib.Integers Make modulus_power thm
R72119:72139 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72119:72139 compcert.lib.Coqlib <> two_p_monotone_strict thm
R72182:72184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72157:72159 compcert.lib.Integers Make sub def
R72179:72181 compcert.lib.Integers Make one def
R72162:72165 compcert.lib.Integers Make repr def
R72168:72172 Coq.ZArith.Zpower <> two_p def
R72185:72188 compcert.lib.Integers Make repr def
R72199:72201 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72191:72195 Coq.ZArith.Zpower <> two_p def
R72182:72184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72157:72159 compcert.lib.Integers Make sub def
R72179:72181 compcert.lib.Integers Make one def
R72162:72165 compcert.lib.Integers Make repr def
R72168:72172 Coq.ZArith.Zpower <> two_p def
R72185:72188 compcert.lib.Integers Make repr def
R72199:72201 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72191:72195 Coq.ZArith.Zpower <> two_p def
R72218:72220 compcert.lib.Integers Make sub def
R72229:72240 compcert.lib.Integers Make eqm_samerepr thm
R72229:72240 compcert.lib.Integers Make eqm_samerepr thm
R72249:72255 compcert.lib.Integers Make eqm_sub thm
R72249:72255 compcert.lib.Integers Make eqm_sub thm
R72264:72270 compcert.lib.Integers Make eqm_sym thm
R72279:72295 compcert.lib.Integers Make eqm_unsigned_repr thm
R72264:72270 compcert.lib.Integers Make eqm_sym thm
R72279:72295 compcert.lib.Integers Make eqm_unsigned_repr thm
R72310:72321 compcert.lib.Integers Make unsigned_one thm
R72310:72321 compcert.lib.Integers Make unsigned_one thm
R72310:72321 compcert.lib.Integers Make unsigned_one thm
R72330:72337 compcert.lib.Integers Make eqm_refl thm
R72330:72337 compcert.lib.Integers Make eqm_refl thm
R72362:72371 compcert.lib.Integers Make add_signed thm
R72362:72371 compcert.lib.Integers Make add_signed thm
R72362:72371 compcert.lib.Integers Make add_signed thm
R72394:72404 compcert.lib.Integers Make signed_repr thm
R72415:72417 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72407:72411 Coq.ZArith.Zpower <> two_p def
R72394:72404 compcert.lib.Integers Make signed_repr thm
R72415:72417 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72407:72411 Coq.ZArith.Zpower <> two_p def
R72394:72404 compcert.lib.Integers Make signed_repr thm
R72415:72417 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72407:72411 Coq.ZArith.Zpower <> two_p def
R72394:72404 compcert.lib.Integers Make signed_repr thm
R72415:72417 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72407:72411 Coq.ZArith.Zpower <> two_p def
R72431:72441 compcert.lib.Integers Make signed_repr thm
R72431:72441 compcert.lib.Integers Make signed_repr thm
R72431:72441 compcert.lib.Integers Make signed_repr thm
R72431:72441 compcert.lib.Integers Make signed_repr thm
R72453:72456 compcert.lib.Integers Make modu def
R72467:72479 compcert.lib.Integers Make unsigned_repr thm
R72467:72479 compcert.lib.Integers Make unsigned_repr thm
R72467:72479 compcert.lib.Integers Make unsigned_repr thm
R72467:72479 compcert.lib.Integers Make unsigned_repr thm
R72491:72492 compcert.lib.Integers Make eq def
R72503:72515 compcert.lib.Integers Make unsigned_zero thm
R72503:72515 compcert.lib.Integers Make unsigned_zero thm
R72503:72515 compcert.lib.Integers Make unsigned_zero thm
R72526:72538 compcert.lib.Integers Make unsigned_repr thm
R72526:72538 compcert.lib.Integers Make unsigned_repr thm
R72526:72538 compcert.lib.Integers Make unsigned_repr thm
R72526:72538 compcert.lib.Integers Make unsigned_repr thm
R72574:72576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72561:72565 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72551:72558 compcert.lib.Integers Make unsigned def
R72566:72570 Coq.ZArith.Zpower <> two_p def
R72579:72583 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72584:72588 Coq.ZArith.Zpower <> two_p def
R72574:72576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R72561:72565 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72551:72558 compcert.lib.Integers Make unsigned def
R72566:72570 Coq.ZArith.Zpower <> two_p def
R72579:72583 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R72584:72588 Coq.ZArith.Zpower <> two_p def
R72605:72616 compcert.lib.Zbits <> eqmod_mod_eq thm
R72605:72616 compcert.lib.Zbits <> eqmod_mod_eq thm
R72650:72656 compcert.lib.Integers Make modulus def
R72631:72643 compcert.lib.Zbits <> eqmod_divides thm
R72650:72656 compcert.lib.Integers Make modulus def
R72631:72643 compcert.lib.Zbits <> eqmod_divides thm
R72668:72670 compcert.lib.Integers Make eqm def
R72668:72670 compcert.lib.Integers Make eqm def
R72690:72696 compcert.lib.Integers Make eqm_sym thm
R72690:72696 compcert.lib.Integers Make eqm_sym thm
R72705:72723 compcert.lib.Integers Make eqm_signed_unsigned thm
R72705:72723 compcert.lib.Integers Make eqm_signed_unsigned thm
R72737:72743 compcert.lib.Integers Make modulus def
R72754:72772 compcert.lib.Coqlib <> two_power_nat_two_p thm
R72754:72772 compcert.lib.Coqlib <> two_power_nat_two_p thm
R72754:72772 compcert.lib.Coqlib <> two_power_nat_two_p thm
R72787:72791 Coq.ZArith.Zpower <> two_p def
R72803:72805 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72794:72802 compcert.lib.Integers Make zwordsize def
R72787:72791 Coq.ZArith.Zpower <> two_p def
R72803:72805 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R72794:72802 compcert.lib.Integers Make zwordsize def
R72823:72834 Coq.ZArith.Zpower <> two_p_is_exp thm
R72823:72834 Coq.ZArith.Zpower <> two_p_is_exp thm
R72823:72834 Coq.ZArith.Zpower <> two_p_is_exp thm
R72823:72834 Coq.ZArith.Zpower <> two_p_is_exp thm
R72823:72834 Coq.ZArith.Zpower <> two_p_is_exp thm
R72855:72863 compcert.lib.Integers Make zwordsize def
R72855:72863 compcert.lib.Integers Make zwordsize def
R72903:72912 compcert.lib.Zbits <> Zdiv_shift thm
R72903:72912 compcert.lib.Zbits <> Zdiv_shift thm
R72903:72912 compcert.lib.Zbits <> Zdiv_shift thm
R72903:72912 compcert.lib.Zbits <> Zdiv_shift thm
R72930:72932 compcert.lib.Integers Make add def
R72941:72952 compcert.lib.Integers Make eqm_samerepr thm
R72941:72952 compcert.lib.Integers Make eqm_samerepr thm
R72961:72967 compcert.lib.Integers Make eqm_add thm
R72961:72967 compcert.lib.Integers Make eqm_add thm
R72978:72994 compcert.lib.Integers Make eqm_unsigned_repr thm
R72978:72994 compcert.lib.Integers Make eqm_unsigned_repr thm
R73009:73011 compcert.lib.Coqlib <> zeq def
R73016:73020 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R73021:73025 Coq.ZArith.Zpower <> two_p def
R73009:73011 compcert.lib.Coqlib <> zeq def
R73016:73020 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R73021:73025 Coq.ZArith.Zpower <> two_p def
R73052:73064 compcert.lib.Integers Make unsigned_zero thm
R73052:73064 compcert.lib.Integers Make unsigned_zero thm
R73052:73064 compcert.lib.Integers Make unsigned_zero thm
R73073:73080 compcert.lib.Integers Make eqm_refl thm
R73073:73080 compcert.lib.Integers Make eqm_refl thm
R73093:73104 compcert.lib.Integers Make unsigned_one thm
R73093:73104 compcert.lib.Integers Make unsigned_one thm
R73093:73104 compcert.lib.Integers Make unsigned_one thm
R73113:73120 compcert.lib.Integers Make eqm_refl thm
R73113:73120 compcert.lib.Integers Make eqm_refl thm
R73137:73144 Coq.ZArith.Zdiv <> Z_mod_lt thm
R73160:73164 Coq.ZArith.Zpower <> two_p def
R73147:73154 compcert.lib.Integers Make unsigned def
R73137:73144 Coq.ZArith.Zdiv <> Z_mod_lt thm
R73160:73164 Coq.ZArith.Zpower <> two_p def
R73147:73154 compcert.lib.Integers Make unsigned def
R73182:73193 compcert.lib.Integers Make max_unsigned def
R73210:73221 compcert.lib.Integers Make max_unsigned def
R73243:73254 compcert.lib.Integers Make signed_range thm
R73243:73254 compcert.lib.Integers Make signed_range thm
R73296:73305 compcert.lib.Integers Make max_signed def
R73326:73339 compcert.lib.Integers Make min_signed_neg thm
R73326:73339 compcert.lib.Integers Make min_signed_neg thm
R73349:73358 compcert.lib.Integers Make max_signed def
prf 73424:73440 Make shr_shru_positive
binder 73452:73452 <> x:589
binder 73454:73454 <> y:590
R73472:73477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73485:73487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R73478:73480 compcert.lib.Integers Make shr def
R73484:73484 compcert.lib.Integers <> y:590 var
R73482:73482 compcert.lib.Integers <> x:589 var
R73488:73491 compcert.lib.Integers Make shru def
R73495:73495 compcert.lib.Integers <> y:590 var
R73493:73493 compcert.lib.Integers <> x:589 var
R73467:73470 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R73459:73464 compcert.lib.Integers Make signed def
R73466:73466 compcert.lib.Integers <> x:589 var
R73525:73537 compcert.lib.Integers Make shr_div_two_p thm
R73525:73537 compcert.lib.Integers Make shr_div_two_p thm
R73525:73537 compcert.lib.Integers Make shr_div_two_p thm
R73548:73561 compcert.lib.Integers Make shru_div_two_p thm
R73548:73561 compcert.lib.Integers Make shru_div_two_p thm
R73548:73561 compcert.lib.Integers Make shru_div_two_p thm
R73574:73591 compcert.lib.Integers Make signed_eq_unsigned thm
R73574:73591 compcert.lib.Integers Make signed_eq_unsigned thm
R73574:73591 compcert.lib.Integers Make signed_eq_unsigned thm
R73574:73591 compcert.lib.Integers Make signed_eq_unsigned thm
R73606:73620 compcert.lib.Integers Make signed_positive thm
R73606:73620 compcert.lib.Integers Make signed_positive thm
prf 73641:73652 Make and_positive
binder 73664:73664 <> x:591
binder 73666:73666 <> y:592
R73682:73685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R73702:73705 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R73686:73691 compcert.lib.Integers Make signed def
R73694:73696 compcert.lib.Integers Make and def
R73700:73700 compcert.lib.Integers <> y:592 var
R73698:73698 compcert.lib.Integers <> x:591 var
R73677:73680 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R73669:73674 compcert.lib.Integers Make signed def
R73676:73676 compcert.lib.Integers <> y:592 var
R73746:73748 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R73736:73743 compcert.lib.Integers Make unsigned def
R73749:73760 compcert.lib.Integers Make half_modulus def
R73746:73748 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R73736:73743 compcert.lib.Integers Make unsigned def
R73749:73760 compcert.lib.Integers Make half_modulus def
R73772:73786 compcert.lib.Integers Make signed_positive thm
R73772:73786 compcert.lib.Integers Make signed_positive thm
R73772:73786 compcert.lib.Integers Make signed_positive thm
R73801:73810 compcert.lib.Integers Make max_signed def
R73837:73856 compcert.lib.Integers Make sign_bit_of_unsigned thm
R73837:73856 compcert.lib.Integers Make sign_bit_of_unsigned thm
R73870:73877 compcert.lib.Coqlib <> zlt_true thm
R73870:73877 compcert.lib.Coqlib <> zlt_true thm
R73870:73877 compcert.lib.Coqlib <> zlt_true thm
R73870:73877 compcert.lib.Coqlib <> zlt_true thm
R73910:73929 compcert.lib.Integers Make sign_bit_of_unsigned thm
R73932:73934 compcert.lib.Integers Make and def
R73910:73929 compcert.lib.Integers Make sign_bit_of_unsigned thm
R73932:73934 compcert.lib.Integers Make and def
R73951:73958 compcert.lib.Integers Make bits_and thm
R73951:73958 compcert.lib.Integers Make bits_and thm
R73951:73958 compcert.lib.Integers Make bits_and thm
R73951:73958 compcert.lib.Integers Make bits_and thm
R73982:73993 Coq.Bool.Bool <> andb_false_r thm
R73982:73993 Coq.Bool.Bool <> andb_false_r thm
R73982:73993 Coq.Bool.Bool <> andb_false_r thm
R74003:74008 compcert.lib.Integers Make signed def
R74023:74025 compcert.lib.Coqlib <> zlt def
R74048:74059 compcert.lib.Integers Make half_modulus def
R74028:74035 compcert.lib.Integers Make unsigned def
R74038:74040 compcert.lib.Integers Make and def
R74023:74025 compcert.lib.Coqlib <> zlt def
R74048:74059 compcert.lib.Integers Make half_modulus def
R74028:74035 compcert.lib.Integers Make unsigned def
R74038:74040 compcert.lib.Integers Make and def
R74085:74098 compcert.lib.Integers Make unsigned_range thm
R74101:74103 compcert.lib.Integers Make and def
R74085:74098 compcert.lib.Integers Make unsigned_range thm
R74101:74103 compcert.lib.Integers Make and def
R74144:74155 compcert.lib.Integers Make wordsize_pos thm
R74144:74155 compcert.lib.Integers Make wordsize_pos thm
prf 74177:74195 Make shr_and_is_shru_and
binder 74207:74207 <> x:593
binder 74209:74209 <> y:594
binder 74211:74211 <> z:595
R74233:74236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74252:74254 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74237:74239 compcert.lib.Integers Make shr def
R74251:74251 compcert.lib.Integers <> z:595 var
R74242:74244 compcert.lib.Integers Make and def
R74248:74248 compcert.lib.Integers <> y:594 var
R74246:74246 compcert.lib.Integers <> x:593 var
R74255:74258 compcert.lib.Integers Make shru def
R74270:74270 compcert.lib.Integers <> z:595 var
R74261:74263 compcert.lib.Integers Make and def
R74267:74267 compcert.lib.Integers <> y:594 var
R74265:74265 compcert.lib.Integers <> x:593 var
R74225:74227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74216:74217 compcert.lib.Integers Make lt def
R74221:74224 compcert.lib.Integers Make zero def
R74219:74219 compcert.lib.Integers <> y:594 var
R74228:74232 Coq.Init.Datatypes <> false constr
R74296:74312 compcert.lib.Integers Make shr_shru_positive thm
R74296:74312 compcert.lib.Integers Make shr_shru_positive thm
R74321:74332 compcert.lib.Integers Make and_positive thm
R74321:74332 compcert.lib.Integers Make and_positive thm
R74344:74345 compcert.lib.Integers Make lt def
R74361:74371 compcert.lib.Integers Make signed_zero thm
R74361:74371 compcert.lib.Integers Make signed_zero thm
R74361:74371 compcert.lib.Integers Make signed_zero thm
R74389:74391 compcert.lib.Coqlib <> zlt def
R74394:74399 compcert.lib.Integers Make signed def
R74389:74391 compcert.lib.Coqlib <> zlt def
R74394:74399 compcert.lib.Integers Make signed def
prf 74506:74518 Make bits_zero_ext
binder 74530:74530 <> n:596
binder 74532:74532 <> x:597
binder 74534:74534 <> i:598
R74543:74548 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74573:74575 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74549:74555 compcert.lib.Integers Make testbit def
R74572:74572 compcert.lib.Integers <> i:598 var
R74558:74565 compcert.lib.Integers Make zero_ext def
R74569:74569 compcert.lib.Integers <> x:597 var
R74567:74567 compcert.lib.Integers <> n:596 var
R74579:74581 compcert.lib.Coqlib <> zlt def
R74585:74585 compcert.lib.Integers <> n:596 var
R74583:74583 compcert.lib.Integers <> i:598 var
R74609:74613 Coq.Init.Datatypes <> false constr
R74592:74598 compcert.lib.Integers Make testbit def
R74602:74602 compcert.lib.Integers <> i:598 var
R74600:74600 compcert.lib.Integers <> x:597 var
R74538:74541 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R74542:74542 compcert.lib.Integers <> i:598 var
R74640:74647 compcert.lib.Integers Make zero_ext def
R74660:74662 compcert.lib.Coqlib <> zlt def
R74666:74674 compcert.lib.Integers Make zwordsize def
R74660:74662 compcert.lib.Coqlib <> zlt def
R74666:74674 compcert.lib.Integers Make zwordsize def
R74688:74699 compcert.lib.Integers Make testbit_repr thm
R74688:74699 compcert.lib.Integers Make testbit_repr thm
R74688:74699 compcert.lib.Integers Make testbit_repr thm
R74688:74699 compcert.lib.Integers Make testbit_repr thm
R74716:74729 compcert.lib.Zbits <> Zzero_ext_spec thm
R74716:74729 compcert.lib.Zbits <> Zzero_ext_spec thm
R74716:74729 compcert.lib.Zbits <> Zzero_ext_spec thm
R74716:74729 compcert.lib.Zbits <> Zzero_ext_spec thm
R74755:74764 compcert.lib.Integers Make bits_above thm
R74755:74764 compcert.lib.Integers Make bits_above thm
R74755:74764 compcert.lib.Integers Make bits_above thm
R74755:74764 compcert.lib.Integers Make bits_above thm
R74755:74764 compcert.lib.Integers Make bits_above thm
R74755:74764 compcert.lib.Integers Make bits_above thm
R74755:74764 compcert.lib.Integers Make bits_above thm
R74783:74785 compcert.lib.Coqlib <> zlt def
R74783:74785 compcert.lib.Coqlib <> zlt def
prf 74811:74823 Make bits_sign_ext
binder 74835:74835 <> n:599
binder 74837:74837 <> x:600
binder 74839:74839 <> i:601
R74860:74865 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R74890:74892 Coq.Init.Logic <> ::type_scope:x_'='_x not
R74866:74872 compcert.lib.Integers Make testbit def
R74889:74889 compcert.lib.Integers <> i:601 var
R74875:74882 compcert.lib.Integers Make sign_ext def
R74886:74886 compcert.lib.Integers <> x:600 var
R74884:74884 compcert.lib.Integers <> n:599 var
R74893:74899 compcert.lib.Integers Make testbit def
R74907:74909 compcert.lib.Coqlib <> zlt def
R74913:74913 compcert.lib.Integers <> n:599 var
R74911:74911 compcert.lib.Integers <> i:601 var
R74928:74930 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R74927:74927 compcert.lib.Integers <> n:599 var
R74920:74920 compcert.lib.Integers <> i:601 var
R74901:74901 compcert.lib.Integers <> x:600 var
R74843:74846 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R74848:74850 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R74847:74847 compcert.lib.Integers <> i:601 var
R74847:74847 compcert.lib.Integers <> i:601 var
R74851:74859 compcert.lib.Integers Make zwordsize def
R74959:74966 compcert.lib.Integers Make sign_ext def
R74979:74990 compcert.lib.Integers Make testbit_repr thm
R74979:74990 compcert.lib.Integers Make testbit_repr thm
R74979:74990 compcert.lib.Integers Make testbit_repr thm
R74979:74990 compcert.lib.Integers Make testbit_repr thm
R75005:75018 compcert.lib.Zbits <> Zsign_ext_spec thm
R75005:75018 compcert.lib.Zbits <> Zsign_ext_spec thm
R75046:75058 compcert.lib.Integers Make bits_zero_ext thm
R75060:75072 compcert.lib.Integers Make bits_sign_ext thm
prf 75090:75103 Make zero_ext_above
binder 75115:75115 <> n:602
binder 75117:75117 <> x:603
R75134:75137 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75150:75152 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75138:75145 compcert.lib.Integers Make zero_ext def
R75149:75149 compcert.lib.Integers <> x:603 var
R75147:75147 compcert.lib.Integers <> n:602 var
R75153:75153 compcert.lib.Integers <> x:603 var
R75121:75124 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R75120:75120 compcert.lib.Integers <> n:602 var
R75125:75133 compcert.lib.Integers Make zwordsize def
R75179:75190 compcert.lib.Integers Make same_bits_eq thm
R75179:75190 compcert.lib.Integers Make same_bits_eq thm
R75211:75223 compcert.lib.Integers Make bits_zero_ext thm
R75211:75223 compcert.lib.Integers Make bits_zero_ext thm
R75211:75223 compcert.lib.Integers Make bits_zero_ext thm
R75211:75223 compcert.lib.Integers Make bits_zero_ext thm
R75232:75239 compcert.lib.Coqlib <> zlt_true thm
R75232:75239 compcert.lib.Coqlib <> zlt_true thm
prf 75266:75279 Make zero_ext_below
binder 75291:75291 <> n:604
binder 75293:75293 <> x:605
R75302:75305 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75318:75320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75306:75313 compcert.lib.Integers Make zero_ext def
R75317:75317 compcert.lib.Integers <> x:605 var
R75315:75315 compcert.lib.Integers <> n:604 var
R75321:75324 compcert.lib.Integers Make zero def
R75297:75300 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R75296:75296 compcert.lib.Integers <> n:604 var
R75365:75367 compcert.lib.Coqlib <> zlt def
R75365:75367 compcert.lib.Coqlib <> zlt def
R75387:75396 compcert.lib.Integers Make bits_below thm
R75387:75396 compcert.lib.Integers Make bits_below thm
prf 75423:75436 Make sign_ext_above
binder 75448:75448 <> n:606
binder 75450:75450 <> x:607
R75467:75470 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75483:75485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75471:75478 compcert.lib.Integers Make sign_ext def
R75482:75482 compcert.lib.Integers <> x:607 var
R75480:75480 compcert.lib.Integers <> n:606 var
R75486:75486 compcert.lib.Integers <> x:607 var
R75454:75457 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R75453:75453 compcert.lib.Integers <> n:606 var
R75458:75466 compcert.lib.Integers Make zwordsize def
R75512:75523 compcert.lib.Integers Make same_bits_eq thm
R75512:75523 compcert.lib.Integers Make same_bits_eq thm
R75543:75550 compcert.lib.Integers Make sign_ext def
R75561:75572 compcert.lib.Integers Make testbit_repr thm
R75561:75572 compcert.lib.Integers Make testbit_repr thm
R75561:75572 compcert.lib.Integers Make testbit_repr thm
R75561:75572 compcert.lib.Integers Make testbit_repr thm
R75591:75604 compcert.lib.Zbits <> Zsign_ext_spec thm
R75591:75604 compcert.lib.Zbits <> Zsign_ext_spec thm
R75591:75604 compcert.lib.Zbits <> Zsign_ext_spec thm
R75591:75604 compcert.lib.Zbits <> Zsign_ext_spec thm
R75615:75622 compcert.lib.Coqlib <> zlt_true thm
R75615:75622 compcert.lib.Coqlib <> zlt_true thm
R75615:75622 compcert.lib.Coqlib <> zlt_true thm
R75615:75622 compcert.lib.Coqlib <> zlt_true thm
prf 75655:75668 Make sign_ext_below
binder 75680:75680 <> n:608
binder 75682:75682 <> x:609
R75691:75694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75707:75709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75695:75702 compcert.lib.Integers Make sign_ext def
R75706:75706 compcert.lib.Integers <> x:609 var
R75704:75704 compcert.lib.Integers <> n:608 var
R75710:75713 compcert.lib.Integers Make zero def
R75686:75689 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R75685:75685 compcert.lib.Integers <> n:608 var
R75750:75759 compcert.lib.Integers Make bits_below thm
R75750:75759 compcert.lib.Integers Make bits_below thm
R75772:75774 compcert.lib.Coqlib <> zlt def
R75772:75774 compcert.lib.Coqlib <> zlt def
prf 75801:75812 Make zero_ext_and
binder 75824:75824 <> n:610
binder 75826:75826 <> x:611
R75835:75838 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R75851:75853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R75839:75846 compcert.lib.Integers Make zero_ext def
R75850:75850 compcert.lib.Integers <> x:611 var
R75848:75848 compcert.lib.Integers <> n:610 var
R75854:75856 compcert.lib.Integers Make and def
R75861:75864 compcert.lib.Integers Make repr def
R75874:75876 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R75867:75871 Coq.ZArith.Zpower <> two_p def
R75873:75873 compcert.lib.Integers <> n:610 var
R75858:75858 compcert.lib.Integers <> x:611 var
R75830:75833 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R75834:75834 compcert.lib.Integers <> n:610 var
R75910:75921 compcert.lib.Integers Make testbit_repr thm
R75910:75921 compcert.lib.Integers Make testbit_repr thm
R75910:75921 compcert.lib.Integers Make testbit_repr thm
R75910:75921 compcert.lib.Integers Make testbit_repr thm
R75938:75954 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R75938:75954 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R75938:75954 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R75938:75954 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R75938:75954 compcert.lib.Zbits <> Ztestbit_two_p_m1 thm
R75980:75982 compcert.lib.Coqlib <> zlt def
R75980:75982 compcert.lib.Coqlib <> zlt def
R76000:76010 Coq.Bool.Bool <> andb_true_r thm
R76000:76010 Coq.Bool.Bool <> andb_true_r thm
R76000:76010 Coq.Bool.Bool <> andb_true_r thm
R76029:76040 Coq.Bool.Bool <> andb_false_r thm
R76029:76040 Coq.Bool.Bool <> andb_false_r thm
R76029:76040 Coq.Bool.Bool <> andb_false_r thm
prf 76072:76083 Make zero_ext_mod
binder 76095:76095 <> n:612
binder 76097:76097 <> x:613
R76118:76123 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76147:76149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76124:76131 compcert.lib.Integers Make unsigned def
R76134:76141 compcert.lib.Integers Make zero_ext def
R76145:76145 compcert.lib.Integers <> x:613 var
R76143:76143 compcert.lib.Integers <> n:612 var
R76150:76157 Coq.ZArith.BinInt Z modulo def
R76173:76177 Coq.ZArith.Zpower <> two_p def
R76179:76179 compcert.lib.Integers <> n:612 var
R76160:76167 compcert.lib.Integers Make unsigned def
R76169:76169 compcert.lib.Integers <> x:613 var
R76101:76104 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R76106:76108 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R76105:76105 compcert.lib.Integers <> n:612 var
R76105:76105 compcert.lib.Integers <> n:612 var
R76109:76117 compcert.lib.Integers Make zwordsize def
R76206:76220 compcert.lib.Zbits <> equal_same_bits thm
R76206:76220 compcert.lib.Zbits <> equal_same_bits thm
R76241:76258 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76241:76258 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76241:76258 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76241:76258 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76241:76258 compcert.lib.Zbits <> Ztestbit_mod_two_p thm
R76275:76281 compcert.lib.Integers Make testbit def
R76284:76291 compcert.lib.Integers Make zero_ext def
R76275:76281 compcert.lib.Integers Make testbit def
R76284:76291 compcert.lib.Integers Make zero_ext def
R76314:76316 compcert.lib.Coqlib <> zlt def
R76320:76328 compcert.lib.Integers Make zwordsize def
R76314:76316 compcert.lib.Coqlib <> zlt def
R76320:76328 compcert.lib.Integers Make zwordsize def
R76342:76354 compcert.lib.Integers Make bits_zero_ext thm
R76342:76354 compcert.lib.Integers Make bits_zero_ext thm
R76342:76354 compcert.lib.Integers Make bits_zero_ext thm
R76342:76354 compcert.lib.Integers Make bits_zero_ext thm
R76373:76382 compcert.lib.Integers Make bits_above thm
R76373:76382 compcert.lib.Integers Make bits_above thm
R76373:76382 compcert.lib.Integers Make bits_above thm
R76373:76382 compcert.lib.Integers Make bits_above thm
R76393:76401 compcert.lib.Coqlib <> zlt_false thm
R76393:76401 compcert.lib.Coqlib <> zlt_false thm
R76393:76401 compcert.lib.Coqlib <> zlt_false thm
R76393:76401 compcert.lib.Coqlib <> zlt_false thm
prf 76441:76454 Make zero_ext_widen
binder 76466:76466 <> x:614
binder 76468:76468 <> n:615
binder 76470:76471 <> n':616
R76486:76491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76518:76520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76492:76499 compcert.lib.Integers Make zero_ext def
R76505:76512 compcert.lib.Integers Make zero_ext def
R76516:76516 compcert.lib.Integers <> x:614 var
R76514:76514 compcert.lib.Integers <> n:615 var
R76501:76502 compcert.lib.Integers <> n':616 var
R76521:76528 compcert.lib.Integers Make zero_ext def
R76532:76532 compcert.lib.Integers <> x:614 var
R76530:76530 compcert.lib.Integers <> n:615 var
R76475:76478 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R76480:76483 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R76479:76479 compcert.lib.Integers <> n:615 var
R76479:76479 compcert.lib.Integers <> n:615 var
R76484:76485 compcert.lib.Integers <> n':616 var
R76565:76567 compcert.lib.Coqlib <> zlt def
R76565:76567 compcert.lib.Coqlib <> zlt def
R76583:76590 compcert.lib.Coqlib <> zlt_true thm
R76583:76590 compcert.lib.Coqlib <> zlt_true thm
R76610:76612 compcert.lib.Coqlib <> zlt def
R76610:76612 compcert.lib.Coqlib <> zlt def
prf 76657:76670 Make sign_ext_widen
binder 76682:76682 <> x:617
binder 76684:76684 <> n:618
binder 76686:76687 <> n':619
R76701:76706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R76733:76735 Coq.Init.Logic <> ::type_scope:x_'='_x not
R76707:76714 compcert.lib.Integers Make sign_ext def
R76720:76727 compcert.lib.Integers Make sign_ext def
R76731:76731 compcert.lib.Integers <> x:617 var
R76729:76729 compcert.lib.Integers <> n:618 var
R76716:76717 compcert.lib.Integers <> n':619 var
R76736:76743 compcert.lib.Integers Make sign_ext def
R76747:76747 compcert.lib.Integers <> x:617 var
R76745:76745 compcert.lib.Integers <> n:618 var
R76691:76693 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R76695:76698 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R76694:76694 compcert.lib.Integers <> n:618 var
R76694:76694 compcert.lib.Integers <> n:618 var
R76699:76700 compcert.lib.Integers <> n':619 var
R76777:76779 compcert.lib.Coqlib <> zlt def
R76784:76792 compcert.lib.Integers Make zwordsize def
R76777:76779 compcert.lib.Coqlib <> zlt def
R76784:76792 compcert.lib.Integers Make zwordsize def
R76819:76821 compcert.lib.Coqlib <> zlt def
R76819:76821 compcert.lib.Coqlib <> zlt def
R76849:76857 compcert.lib.Coqlib <> zlt_false thm
R76849:76857 compcert.lib.Coqlib <> zlt_false thm
R76849:76857 compcert.lib.Coqlib <> zlt_false thm
R76849:76857 compcert.lib.Coqlib <> zlt_false thm
R76879:76881 compcert.lib.Coqlib <> zlt def
R76886:76888 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R76879:76881 compcert.lib.Coqlib <> zlt def
R76886:76888 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R76929:76931 compcert.lib.Coqlib <> zlt def
R76929:76931 compcert.lib.Coqlib <> zlt def
R76953:76966 compcert.lib.Integers Make sign_ext_above thm
R76953:76966 compcert.lib.Integers Make sign_ext_above thm
prf 76989:77007 Make sign_zero_ext_widen
binder 77019:77019 <> x:620
binder 77021:77021 <> n:621
binder 77023:77024 <> n':622
R77038:77043 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77070:77072 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77044:77051 compcert.lib.Integers Make sign_ext def
R77057:77064 compcert.lib.Integers Make zero_ext def
R77068:77068 compcert.lib.Integers <> x:620 var
R77066:77066 compcert.lib.Integers <> n:621 var
R77053:77054 compcert.lib.Integers <> n':622 var
R77073:77080 compcert.lib.Integers Make zero_ext def
R77084:77084 compcert.lib.Integers <> x:620 var
R77082:77082 compcert.lib.Integers <> n:621 var
R77028:77031 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R77033:77035 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R77032:77032 compcert.lib.Integers <> n:621 var
R77032:77032 compcert.lib.Integers <> n:621 var
R77036:77037 compcert.lib.Integers <> n':622 var
R77114:77116 compcert.lib.Coqlib <> zlt def
R77121:77129 compcert.lib.Integers Make zwordsize def
R77114:77116 compcert.lib.Coqlib <> zlt def
R77121:77129 compcert.lib.Integers Make zwordsize def
R77158:77160 compcert.lib.Coqlib <> zlt def
R77158:77160 compcert.lib.Coqlib <> zlt def
R77188:77196 compcert.lib.Coqlib <> zlt_false thm
R77188:77196 compcert.lib.Coqlib <> zlt_false thm
R77188:77196 compcert.lib.Coqlib <> zlt_false thm
R77188:77196 compcert.lib.Coqlib <> zlt_false thm
R77188:77196 compcert.lib.Coqlib <> zlt_false thm
R77188:77196 compcert.lib.Coqlib <> zlt_false thm
R77188:77196 compcert.lib.Coqlib <> zlt_false thm
R77232:77234 compcert.lib.Coqlib <> zlt def
R77232:77234 compcert.lib.Coqlib <> zlt def
R77256:77269 compcert.lib.Integers Make sign_ext_above thm
R77256:77269 compcert.lib.Integers Make sign_ext_above thm
prf 77292:77306 Make zero_ext_narrow
binder 77318:77318 <> x:623
binder 77320:77320 <> n:624
binder 77322:77323 <> n':625
R77338:77343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77370:77372 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77344:77351 compcert.lib.Integers Make zero_ext def
R77356:77363 compcert.lib.Integers Make zero_ext def
R77368:77368 compcert.lib.Integers <> x:623 var
R77365:77366 compcert.lib.Integers <> n':625 var
R77353:77353 compcert.lib.Integers <> n:624 var
R77373:77380 compcert.lib.Integers Make zero_ext def
R77384:77384 compcert.lib.Integers <> x:623 var
R77382:77382 compcert.lib.Integers <> n:624 var
R77327:77330 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R77332:77335 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R77331:77331 compcert.lib.Integers <> n:624 var
R77331:77331 compcert.lib.Integers <> n:624 var
R77336:77337 compcert.lib.Integers <> n':625 var
R77417:77419 compcert.lib.Coqlib <> zlt def
R77417:77419 compcert.lib.Coqlib <> zlt def
R77435:77442 compcert.lib.Coqlib <> zlt_true thm
R77435:77442 compcert.lib.Coqlib <> zlt_true thm
prf 77489:77503 Make sign_ext_narrow
binder 77515:77515 <> x:626
binder 77517:77517 <> n:627
binder 77519:77520 <> n':628
R77534:77539 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77566:77568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77540:77547 compcert.lib.Integers Make sign_ext def
R77552:77559 compcert.lib.Integers Make sign_ext def
R77564:77564 compcert.lib.Integers <> x:626 var
R77561:77562 compcert.lib.Integers <> n':628 var
R77549:77549 compcert.lib.Integers <> n:627 var
R77569:77576 compcert.lib.Integers Make sign_ext def
R77580:77580 compcert.lib.Integers <> x:626 var
R77578:77578 compcert.lib.Integers <> n:627 var
R77524:77526 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R77528:77531 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R77527:77527 compcert.lib.Integers <> n:627 var
R77527:77527 compcert.lib.Integers <> n:627 var
R77532:77533 compcert.lib.Integers <> n':628 var
R77610:77612 compcert.lib.Coqlib <> zlt def
R77616:77624 compcert.lib.Integers Make zwordsize def
R77610:77612 compcert.lib.Coqlib <> zlt def
R77616:77624 compcert.lib.Integers Make zwordsize def
R77651:77653 compcert.lib.Coqlib <> zlt def
R77676:77683 compcert.lib.Coqlib <> zlt_true thm
R77651:77653 compcert.lib.Coqlib <> zlt def
R77676:77683 compcert.lib.Coqlib <> zlt_true thm
R77676:77683 compcert.lib.Coqlib <> zlt_true thm
R77703:77705 compcert.lib.Coqlib <> zlt def
R77703:77705 compcert.lib.Coqlib <> zlt def
R77729:77742 compcert.lib.Integers Make sign_ext_above thm
R77729:77742 compcert.lib.Integers Make sign_ext_above thm
R77729:77742 compcert.lib.Integers Make sign_ext_above thm
R77729:77742 compcert.lib.Integers Make sign_ext_above thm
prf 77774:77793 Make zero_sign_ext_narrow
binder 77805:77805 <> x:629
binder 77807:77807 <> n:630
binder 77809:77810 <> n':631
R77824:77829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77856:77858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77830:77837 compcert.lib.Integers Make zero_ext def
R77842:77849 compcert.lib.Integers Make sign_ext def
R77854:77854 compcert.lib.Integers <> x:629 var
R77851:77852 compcert.lib.Integers <> n':631 var
R77839:77839 compcert.lib.Integers <> n:630 var
R77859:77866 compcert.lib.Integers Make zero_ext def
R77870:77870 compcert.lib.Integers <> x:629 var
R77868:77868 compcert.lib.Integers <> n:630 var
R77814:77816 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R77818:77821 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R77817:77817 compcert.lib.Integers <> n:630 var
R77817:77817 compcert.lib.Integers <> n:630 var
R77822:77823 compcert.lib.Integers <> n':631 var
R77900:77902 compcert.lib.Coqlib <> zlt def
R77907:77915 compcert.lib.Integers Make zwordsize def
R77900:77902 compcert.lib.Coqlib <> zlt def
R77907:77915 compcert.lib.Integers Make zwordsize def
R77944:77946 compcert.lib.Coqlib <> zlt def
R77944:77946 compcert.lib.Coqlib <> zlt def
R77970:77977 compcert.lib.Coqlib <> zlt_true thm
R77970:77977 compcert.lib.Coqlib <> zlt_true thm
R77970:77977 compcert.lib.Coqlib <> zlt_true thm
R77970:77977 compcert.lib.Coqlib <> zlt_true thm
R78013:78026 compcert.lib.Integers Make sign_ext_above thm
R78013:78026 compcert.lib.Integers Make sign_ext_above thm
R78013:78026 compcert.lib.Integers Make sign_ext_above thm
R78013:78026 compcert.lib.Integers Make sign_ext_above thm
prf 78049:78061 Make zero_ext_idem
binder 78073:78073 <> n:632
binder 78075:78075 <> x:633
R78084:78087 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78113:78115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78088:78095 compcert.lib.Integers Make zero_ext def
R78100:78107 compcert.lib.Integers Make zero_ext def
R78111:78111 compcert.lib.Integers <> x:633 var
R78109:78109 compcert.lib.Integers <> n:632 var
R78097:78097 compcert.lib.Integers <> n:632 var
R78116:78123 compcert.lib.Integers Make zero_ext def
R78127:78127 compcert.lib.Integers <> x:633 var
R78125:78125 compcert.lib.Integers <> n:632 var
R78079:78082 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R78083:78083 compcert.lib.Integers <> n:632 var
R78153:78166 compcert.lib.Integers Make zero_ext_widen thm
R78153:78166 compcert.lib.Integers Make zero_ext_widen thm
prf 78188:78200 Make sign_ext_idem
binder 78212:78212 <> n:634
binder 78214:78214 <> x:635
R78222:78225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78251:78253 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78226:78233 compcert.lib.Integers Make sign_ext def
R78238:78245 compcert.lib.Integers Make sign_ext def
R78249:78249 compcert.lib.Integers <> x:635 var
R78247:78247 compcert.lib.Integers <> n:634 var
R78235:78235 compcert.lib.Integers <> n:634 var
R78254:78261 compcert.lib.Integers Make sign_ext def
R78265:78265 compcert.lib.Integers <> x:635 var
R78263:78263 compcert.lib.Integers <> n:634 var
R78218:78220 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R78221:78221 compcert.lib.Integers <> n:634 var
R78291:78304 compcert.lib.Integers Make sign_ext_widen thm
R78291:78304 compcert.lib.Integers Make sign_ext_widen thm
prf 78327:78343 Make sign_ext_zero_ext
binder 78355:78355 <> n:636
binder 78357:78357 <> x:637
R78365:78368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78394:78396 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78369:78376 compcert.lib.Integers Make sign_ext def
R78381:78388 compcert.lib.Integers Make zero_ext def
R78392:78392 compcert.lib.Integers <> x:637 var
R78390:78390 compcert.lib.Integers <> n:636 var
R78378:78378 compcert.lib.Integers <> n:636 var
R78397:78404 compcert.lib.Integers Make sign_ext def
R78408:78408 compcert.lib.Integers <> x:637 var
R78406:78406 compcert.lib.Integers <> n:636 var
R78361:78363 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R78364:78364 compcert.lib.Integers <> n:636 var
R78438:78440 compcert.lib.Coqlib <> zlt def
R78444:78452 compcert.lib.Integers Make zwordsize def
R78438:78440 compcert.lib.Coqlib <> zlt def
R78444:78452 compcert.lib.Integers Make zwordsize def
R78481:78483 compcert.lib.Coqlib <> zlt def
R78481:78483 compcert.lib.Coqlib <> zlt def
R78501:78508 compcert.lib.Coqlib <> zlt_true thm
R78501:78508 compcert.lib.Coqlib <> zlt_true thm
R78501:78508 compcert.lib.Coqlib <> zlt_true thm
R78501:78508 compcert.lib.Coqlib <> zlt_true thm
R78527:78534 compcert.lib.Coqlib <> zlt_true thm
R78527:78534 compcert.lib.Coqlib <> zlt_true thm
R78527:78534 compcert.lib.Coqlib <> zlt_true thm
R78527:78534 compcert.lib.Coqlib <> zlt_true thm
R78560:78562 compcert.lib.Coqlib <> zlt def
R78560:78562 compcert.lib.Coqlib <> zlt def
R78585:78598 compcert.lib.Integers Make zero_ext_above thm
R78585:78598 compcert.lib.Integers Make zero_ext_above thm
R78585:78598 compcert.lib.Integers Make zero_ext_above thm
R78585:78598 compcert.lib.Integers Make zero_ext_above thm
prf 78621:78637 Make zero_ext_sign_ext
binder 78649:78649 <> n:638
binder 78651:78651 <> x:639
R78659:78662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78688:78690 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78663:78670 compcert.lib.Integers Make zero_ext def
R78675:78682 compcert.lib.Integers Make sign_ext def
R78686:78686 compcert.lib.Integers <> x:639 var
R78684:78684 compcert.lib.Integers <> n:638 var
R78672:78672 compcert.lib.Integers <> n:638 var
R78691:78698 compcert.lib.Integers Make zero_ext def
R78702:78702 compcert.lib.Integers <> x:639 var
R78700:78700 compcert.lib.Integers <> n:638 var
R78655:78657 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R78658:78658 compcert.lib.Integers <> n:638 var
R78728:78747 compcert.lib.Integers Make zero_sign_ext_narrow thm
R78728:78747 compcert.lib.Integers Make zero_sign_ext_narrow thm
prf 78769:78796 Make sign_ext_equal_if_zero_equal
binder 78808:78808 <> n:640
binder 78810:78810 <> x:641
binder 78812:78812 <> y:642
R78820:78825 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78853:78858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78871:78873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78859:78866 compcert.lib.Integers Make sign_ext def
R78870:78870 compcert.lib.Integers <> x:641 var
R78868:78868 compcert.lib.Integers <> n:640 var
R78874:78881 compcert.lib.Integers Make sign_ext def
R78885:78885 compcert.lib.Integers <> y:642 var
R78883:78883 compcert.lib.Integers <> n:640 var
R78838:78840 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78826:78833 compcert.lib.Integers Make zero_ext def
R78837:78837 compcert.lib.Integers <> x:641 var
R78835:78835 compcert.lib.Integers <> n:640 var
R78841:78848 compcert.lib.Integers Make zero_ext def
R78852:78852 compcert.lib.Integers <> y:642 var
R78850:78850 compcert.lib.Integers <> n:640 var
R78816:78818 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R78819:78819 compcert.lib.Integers <> n:640 var
R78917:78933 compcert.lib.Integers Make sign_ext_zero_ext thm
R78917:78933 compcert.lib.Integers Make sign_ext_zero_ext thm
R78917:78933 compcert.lib.Integers Make sign_ext_zero_ext thm
R78957:78973 compcert.lib.Integers Make sign_ext_zero_ext thm
R78957:78973 compcert.lib.Integers Make sign_ext_zero_ext thm
R78957:78973 compcert.lib.Integers Make sign_ext_zero_ext thm
prf 79009:79016 Make shru_shl
binder 79028:79028 <> x:643
binder 79030:79030 <> y:644
binder 79032:79032 <> z:645
R79057:79060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79083:79088 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79105:79109 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79089:79092 compcert.lib.Integers Make shru def
R79104:79104 compcert.lib.Integers <> z:645 var
R79095:79097 compcert.lib.Integers Make shl def
R79101:79101 compcert.lib.Integers <> y:644 var
R79099:79099 compcert.lib.Integers <> x:643 var
R79113:79115 compcert.lib.Integers Make ltu def
R79119:79119 compcert.lib.Integers <> y:644 var
R79117:79117 compcert.lib.Integers <> z:645 var
R79196:79203 compcert.lib.Integers Make zero_ext def
R79231:79234 compcert.lib.Integers Make shru def
R79239:79241 compcert.lib.Integers Make sub def
R79245:79245 compcert.lib.Integers <> y:644 var
R79243:79243 compcert.lib.Integers <> z:645 var
R79236:79236 compcert.lib.Integers <> x:643 var
R79215:79217 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79206:79214 compcert.lib.Integers Make zwordsize def
R79218:79225 compcert.lib.Integers Make unsigned def
R79227:79227 compcert.lib.Integers <> z:645 var
R79126:79128 compcert.lib.Integers Make shl def
R79169:79171 compcert.lib.Integers Make sub def
R79175:79175 compcert.lib.Integers <> z:645 var
R79173:79173 compcert.lib.Integers <> y:644 var
R79131:79138 compcert.lib.Integers Make zero_ext def
R79165:79165 compcert.lib.Integers <> x:643 var
R79150:79152 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79141:79149 compcert.lib.Integers Make zwordsize def
R79153:79160 compcert.lib.Integers Make unsigned def
R79162:79162 compcert.lib.Integers <> y:644 var
R79076:79078 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79061:79063 compcert.lib.Integers Make ltu def
R79067:79075 compcert.lib.Integers Make iwordsize def
R79065:79065 compcert.lib.Integers <> z:645 var
R79079:79082 Coq.Init.Datatypes <> true constr
R79050:79052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79035:79037 compcert.lib.Integers Make ltu def
R79041:79049 compcert.lib.Integers Make iwordsize def
R79039:79039 compcert.lib.Integers <> y:644 var
R79053:79056 Coq.Init.Datatypes <> true constr
R79273:79289 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79303:79319 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79273:79289 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79303:79319 compcert.lib.Integers Make ltu_iwordsize_inv thm
R79337:79339 compcert.lib.Integers Make ltu def
R79352:79359 compcert.lib.Integers Make unsigned def
R79380:79387 compcert.lib.Integers Make unsigned def
R79352:79359 compcert.lib.Integers Make unsigned def
R79380:79387 compcert.lib.Integers Make unsigned def
R79406:79417 compcert.lib.Integers Make same_bits_eq thm
R79406:79417 compcert.lib.Integers Make same_bits_eq thm
R79436:79444 compcert.lib.Integers Make bits_shru thm
R79436:79444 compcert.lib.Integers Make bits_shru thm
R79436:79444 compcert.lib.Integers Make bits_shru thm
R79475:79477 compcert.lib.Coqlib <> zlt def
R79475:79477 compcert.lib.Coqlib <> zlt def
R79516:79518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79498:79505 compcert.lib.Integers Make unsigned def
R79508:79510 compcert.lib.Integers Make sub def
R79520:79522 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79516:79518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79498:79505 compcert.lib.Integers Make unsigned def
R79508:79510 compcert.lib.Integers Make sub def
R79520:79522 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79537:79549 compcert.lib.Integers Make unsigned_repr thm
R79537:79549 compcert.lib.Integers Make unsigned_repr thm
R79563:79583 compcert.lib.Integers Make wordsize_max_unsigned thm
R79563:79583 compcert.lib.Integers Make wordsize_max_unsigned thm
R79613:79620 compcert.lib.Integers Make bits_shl thm
R79613:79620 compcert.lib.Integers Make bits_shl thm
R79613:79620 compcert.lib.Integers Make bits_shl thm
R79645:79647 compcert.lib.Coqlib <> zlt def
R79657:79665 compcert.lib.Integers Make zwordsize def
R79651:79653 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R79645:79647 compcert.lib.Coqlib <> zlt def
R79657:79665 compcert.lib.Integers Make zwordsize def
R79651:79653 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R79679:79686 compcert.lib.Integers Make bits_shl thm
R79679:79686 compcert.lib.Integers Make bits_shl thm
R79679:79686 compcert.lib.Integers Make bits_shl thm
R79716:79718 compcert.lib.Coqlib <> zlt def
R79724:79726 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79741:79748 compcert.lib.Coqlib <> zlt_true thm
R79765:79773 compcert.lib.Coqlib <> zlt_false thm
R79716:79718 compcert.lib.Coqlib <> zlt def
R79724:79726 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79741:79748 compcert.lib.Coqlib <> zlt_true thm
R79741:79748 compcert.lib.Coqlib <> zlt_true thm
R79765:79773 compcert.lib.Coqlib <> zlt_false thm
R79765:79773 compcert.lib.Coqlib <> zlt_false thm
R79800:79812 compcert.lib.Integers Make bits_zero_ext thm
R79800:79812 compcert.lib.Integers Make bits_zero_ext thm
R79800:79812 compcert.lib.Integers Make bits_zero_ext thm
R79830:79837 compcert.lib.Coqlib <> zlt_true thm
R79830:79837 compcert.lib.Coqlib <> zlt_true thm
R79830:79837 compcert.lib.Coqlib <> zlt_true thm
R79871:79883 compcert.lib.Integers Make bits_zero_ext thm
R79871:79883 compcert.lib.Integers Make bits_zero_ext thm
R79871:79883 compcert.lib.Integers Make bits_zero_ext thm
R79903:79911 compcert.lib.Coqlib <> zlt_false thm
R79903:79911 compcert.lib.Coqlib <> zlt_false thm
R79903:79911 compcert.lib.Coqlib <> zlt_false thm
R79903:79911 compcert.lib.Coqlib <> zlt_false thm
R79903:79911 compcert.lib.Coqlib <> zlt_false thm
R79958:79960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79940:79947 compcert.lib.Integers Make unsigned def
R79950:79952 compcert.lib.Integers Make sub def
R79962:79964 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79958:79960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79940:79947 compcert.lib.Integers Make unsigned def
R79950:79952 compcert.lib.Integers Make sub def
R79962:79964 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R79979:79991 compcert.lib.Integers Make unsigned_repr thm
R79979:79991 compcert.lib.Integers Make unsigned_repr thm
R80005:80025 compcert.lib.Integers Make wordsize_max_unsigned thm
R80005:80025 compcert.lib.Integers Make wordsize_max_unsigned thm
R80045:80057 compcert.lib.Integers Make bits_zero_ext thm
R80060:80068 compcert.lib.Integers Make bits_shru thm
R80045:80057 compcert.lib.Integers Make bits_zero_ext thm
R80045:80057 compcert.lib.Integers Make bits_zero_ext thm
R80060:80068 compcert.lib.Integers Make bits_shru thm
R80060:80068 compcert.lib.Integers Make bits_shru thm
R80093:80095 compcert.lib.Coqlib <> zlt def
R80105:80113 compcert.lib.Integers Make zwordsize def
R80099:80101 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80126:80133 compcert.lib.Coqlib <> zlt_true thm
R80150:80158 compcert.lib.Coqlib <> zlt_false thm
R80093:80095 compcert.lib.Coqlib <> zlt def
R80105:80113 compcert.lib.Integers Make zwordsize def
R80099:80101 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80126:80133 compcert.lib.Coqlib <> zlt_true thm
R80126:80133 compcert.lib.Coqlib <> zlt_true thm
R80150:80158 compcert.lib.Coqlib <> zlt_false thm
R80150:80158 compcert.lib.Coqlib <> zlt_false thm
R80185:80192 compcert.lib.Integers Make bits_shl thm
R80185:80192 compcert.lib.Integers Make bits_shl thm
R80185:80192 compcert.lib.Integers Make bits_shl thm
R80222:80224 compcert.lib.Coqlib <> zlt def
R80228:80230 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80222:80224 compcert.lib.Coqlib <> zlt def
R80228:80230 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R80248:80256 compcert.lib.Coqlib <> zlt_false thm
R80248:80256 compcert.lib.Coqlib <> zlt_false thm
R80248:80256 compcert.lib.Coqlib <> zlt_false thm
R80282:80289 compcert.lib.Coqlib <> zlt_true thm
R80282:80289 compcert.lib.Coqlib <> zlt_true thm
R80282:80289 compcert.lib.Coqlib <> zlt_true thm
prf 80329:80345 Make zero_ext_shru_shl
binder 80357:80357 <> n:646
binder 80359:80359 <> x:647
R80381:80386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R80396:80399 compcert.lib.Integers Make repr def
R80411:80413 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80402:80410 compcert.lib.Integers Make zwordsize def
R80414:80414 compcert.lib.Integers <> n:646 var
binder 80391:80391 <> y:648
R80434:80436 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80422:80429 compcert.lib.Integers Make zero_ext def
R80433:80433 compcert.lib.Integers <> x:647 var
R80431:80431 compcert.lib.Integers <> n:646 var
R80437:80440 compcert.lib.Integers Make shru def
R80452:80452 compcert.lib.Integers <> y:648 var
R80443:80445 compcert.lib.Integers Make shl def
R80449:80449 compcert.lib.Integers <> y:648 var
R80447:80447 compcert.lib.Integers <> x:647 var
R80365:80367 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R80369:80371 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R80368:80368 compcert.lib.Integers <> n:646 var
R80368:80368 compcert.lib.Integers <> n:646 var
R80372:80380 compcert.lib.Integers Make zwordsize def
R80495:80497 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80485:80492 compcert.lib.Integers Make unsigned def
R80507:80509 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80498:80506 compcert.lib.Integers Make zwordsize def
R80495:80497 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80485:80492 compcert.lib.Integers Make unsigned def
R80507:80509 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80498:80506 compcert.lib.Integers Make zwordsize def
R80534:80546 compcert.lib.Integers Make unsigned_repr thm
R80534:80546 compcert.lib.Integers Make unsigned_repr thm
R80560:80580 compcert.lib.Integers Make wordsize_max_unsigned thm
R80560:80580 compcert.lib.Integers Make wordsize_max_unsigned thm
R80618:80620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80603:80605 compcert.lib.Integers Make ltu def
R80609:80617 compcert.lib.Integers Make iwordsize def
R80621:80624 Coq.Init.Datatypes <> true constr
R80618:80620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80603:80605 compcert.lib.Integers Make ltu def
R80609:80617 compcert.lib.Integers Make iwordsize def
R80621:80624 Coq.Init.Datatypes <> true constr
R80639:80641 compcert.lib.Integers Make ltu def
R80655:80676 compcert.lib.Integers Make unsigned_repr_wordsize thm
R80655:80676 compcert.lib.Integers Make unsigned_repr_wordsize thm
R80655:80676 compcert.lib.Integers Make unsigned_repr_wordsize thm
R80685:80692 compcert.lib.Coqlib <> zlt_true thm
R80685:80692 compcert.lib.Coqlib <> zlt_true thm
R80712:80719 compcert.lib.Integers Make shru_shl thm
R80712:80719 compcert.lib.Integers Make shru_shl thm
R80712:80719 compcert.lib.Integers Make shru_shl thm
R80737:80739 compcert.lib.Integers Make ltu def
R80750:80758 compcert.lib.Coqlib <> zlt_false thm
R80750:80758 compcert.lib.Coqlib <> zlt_false thm
R80750:80758 compcert.lib.Coqlib <> zlt_false thm
R80778:80785 compcert.lib.Integers Make sub_idem thm
R80788:80796 compcert.lib.Integers Make shru_zero thm
R80778:80785 compcert.lib.Integers Make sub_idem thm
R80778:80785 compcert.lib.Integers Make sub_idem thm
R80788:80796 compcert.lib.Integers Make shru_zero thm
R80788:80796 compcert.lib.Integers Make shru_zero thm
prf 80838:80844 Make shr_shl
binder 80856:80856 <> x:649
binder 80858:80858 <> y:650
binder 80860:80860 <> z:651
R80885:80888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R80911:80916 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R80932:80936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80917:80919 compcert.lib.Integers Make shr def
R80931:80931 compcert.lib.Integers <> z:651 var
R80922:80924 compcert.lib.Integers Make shl def
R80928:80928 compcert.lib.Integers <> y:650 var
R80926:80926 compcert.lib.Integers <> x:649 var
R80940:80942 compcert.lib.Integers Make ltu def
R80946:80946 compcert.lib.Integers <> y:650 var
R80944:80944 compcert.lib.Integers <> z:651 var
R81023:81030 compcert.lib.Integers Make sign_ext def
R81058:81060 compcert.lib.Integers Make shr def
R81065:81067 compcert.lib.Integers Make sub def
R81071:81071 compcert.lib.Integers <> y:650 var
R81069:81069 compcert.lib.Integers <> z:651 var
R81062:81062 compcert.lib.Integers <> x:649 var
R81042:81044 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81033:81041 compcert.lib.Integers Make zwordsize def
R81045:81052 compcert.lib.Integers Make unsigned def
R81054:81054 compcert.lib.Integers <> z:651 var
R80953:80955 compcert.lib.Integers Make shl def
R80996:80998 compcert.lib.Integers Make sub def
R81002:81002 compcert.lib.Integers <> z:651 var
R81000:81000 compcert.lib.Integers <> y:650 var
R80958:80965 compcert.lib.Integers Make sign_ext def
R80992:80992 compcert.lib.Integers <> x:649 var
R80977:80979 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R80968:80976 compcert.lib.Integers Make zwordsize def
R80980:80987 compcert.lib.Integers Make unsigned def
R80989:80989 compcert.lib.Integers <> y:650 var
R80904:80906 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80889:80891 compcert.lib.Integers Make ltu def
R80895:80903 compcert.lib.Integers Make iwordsize def
R80893:80893 compcert.lib.Integers <> z:651 var
R80907:80910 Coq.Init.Datatypes <> true constr
R80878:80880 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80863:80865 compcert.lib.Integers Make ltu def
R80869:80877 compcert.lib.Integers Make iwordsize def
R80867:80867 compcert.lib.Integers <> y:650 var
R80881:80884 Coq.Init.Datatypes <> true constr
R81099:81115 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81129:81145 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81099:81115 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81129:81145 compcert.lib.Integers Make ltu_iwordsize_inv thm
R81163:81165 compcert.lib.Integers Make ltu def
R81178:81185 compcert.lib.Integers Make unsigned def
R81206:81213 compcert.lib.Integers Make unsigned def
R81178:81185 compcert.lib.Integers Make unsigned def
R81206:81213 compcert.lib.Integers Make unsigned def
R81232:81243 compcert.lib.Integers Make same_bits_eq thm
R81232:81243 compcert.lib.Integers Make same_bits_eq thm
R81262:81269 compcert.lib.Integers Make bits_shr thm
R81262:81269 compcert.lib.Integers Make bits_shr thm
R81262:81269 compcert.lib.Integers Make bits_shr thm
R81321:81323 compcert.lib.Coqlib <> zlt def
R81333:81341 compcert.lib.Integers Make zwordsize def
R81327:81329 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81298:81305 compcert.lib.Integers Make bits_shl thm
R81298:81305 compcert.lib.Integers Make bits_shl thm
R81321:81323 compcert.lib.Coqlib <> zlt def
R81333:81341 compcert.lib.Integers Make zwordsize def
R81327:81329 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81298:81305 compcert.lib.Integers Make bits_shl thm
R81371:81373 compcert.lib.Coqlib <> zlt def
R81371:81373 compcert.lib.Coqlib <> zlt def
R81412:81414 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81394:81401 compcert.lib.Integers Make unsigned def
R81404:81406 compcert.lib.Integers Make sub def
R81416:81418 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81412:81414 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81394:81401 compcert.lib.Integers Make unsigned def
R81404:81406 compcert.lib.Integers Make sub def
R81416:81418 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81433:81445 compcert.lib.Integers Make unsigned_repr thm
R81433:81445 compcert.lib.Integers Make unsigned_repr thm
R81459:81479 compcert.lib.Integers Make wordsize_max_unsigned thm
R81459:81479 compcert.lib.Integers Make wordsize_max_unsigned thm
R81499:81506 compcert.lib.Integers Make bits_shl thm
R81499:81506 compcert.lib.Integers Make bits_shl thm
R81499:81506 compcert.lib.Integers Make bits_shl thm
R81531:81533 compcert.lib.Coqlib <> zlt def
R81539:81541 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81531:81533 compcert.lib.Coqlib <> zlt def
R81539:81541 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81555:81562 compcert.lib.Coqlib <> zlt_true thm
R81555:81562 compcert.lib.Coqlib <> zlt_true thm
R81575:81577 compcert.lib.Coqlib <> zlt def
R81587:81595 compcert.lib.Integers Make zwordsize def
R81581:81583 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81575:81577 compcert.lib.Coqlib <> zlt def
R81587:81595 compcert.lib.Integers Make zwordsize def
R81581:81583 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81638:81640 compcert.lib.Coqlib <> zlt def
R81650:81658 compcert.lib.Integers Make zwordsize def
R81644:81646 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81614:81622 compcert.lib.Coqlib <> zlt_false thm
R81614:81622 compcert.lib.Coqlib <> zlt_false thm
R81638:81640 compcert.lib.Coqlib <> zlt def
R81650:81658 compcert.lib.Integers Make zwordsize def
R81644:81646 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81614:81622 compcert.lib.Coqlib <> zlt_false thm
R81678:81690 compcert.lib.Integers Make bits_sign_ext thm
R81678:81690 compcert.lib.Integers Make bits_sign_ext thm
R81678:81690 compcert.lib.Integers Make bits_sign_ext thm
R81722:81724 compcert.lib.Coqlib <> zlt def
R81734:81742 compcert.lib.Integers Make zwordsize def
R81728:81730 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81722:81724 compcert.lib.Coqlib <> zlt def
R81734:81742 compcert.lib.Integers Make zwordsize def
R81728:81730 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R81756:81763 compcert.lib.Coqlib <> zlt_true thm
R81756:81763 compcert.lib.Coqlib <> zlt_true thm
R81756:81763 compcert.lib.Coqlib <> zlt_true thm
R81788:81796 compcert.lib.Coqlib <> zlt_false thm
R81788:81796 compcert.lib.Coqlib <> zlt_false thm
R81788:81796 compcert.lib.Coqlib <> zlt_false thm
R81842:81844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81824:81831 compcert.lib.Integers Make unsigned def
R81834:81836 compcert.lib.Integers Make sub def
R81846:81848 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81842:81844 Coq.Init.Logic <> ::type_scope:x_'='_x not
R81824:81831 compcert.lib.Integers Make unsigned def
R81834:81836 compcert.lib.Integers Make sub def
R81846:81848 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81863:81875 compcert.lib.Integers Make unsigned_repr thm
R81863:81875 compcert.lib.Integers Make unsigned_repr thm
R81889:81909 compcert.lib.Integers Make wordsize_max_unsigned thm
R81889:81909 compcert.lib.Integers Make wordsize_max_unsigned thm
R81929:81941 compcert.lib.Integers Make bits_sign_ext thm
R81929:81941 compcert.lib.Integers Make bits_sign_ext thm
R81929:81941 compcert.lib.Integers Make bits_sign_ext thm
R81984:81986 compcert.lib.Coqlib <> zlt def
R82000:82002 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81991:81999 compcert.lib.Integers Make zwordsize def
R81961:81968 compcert.lib.Integers Make bits_shr thm
R81961:81968 compcert.lib.Integers Make bits_shr thm
R81984:81986 compcert.lib.Coqlib <> zlt def
R82000:82002 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R81991:81999 compcert.lib.Integers Make zwordsize def
R81961:81968 compcert.lib.Integers Make bits_shr thm
R82059:82061 compcert.lib.Coqlib <> zlt def
R82071:82079 compcert.lib.Integers Make zwordsize def
R82065:82067 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82035:82043 compcert.lib.Coqlib <> zlt_false thm
R82035:82043 compcert.lib.Coqlib <> zlt_false thm
R82059:82061 compcert.lib.Coqlib <> zlt def
R82071:82079 compcert.lib.Integers Make zwordsize def
R82065:82067 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R82035:82043 compcert.lib.Coqlib <> zlt_false thm
R82110:82112 compcert.lib.Coqlib <> zlt def
R82126:82128 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82117:82125 compcert.lib.Integers Make zwordsize def
R82110:82112 compcert.lib.Coqlib <> zlt def
R82126:82128 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82117:82125 compcert.lib.Integers Make zwordsize def
R82146:82153 compcert.lib.Coqlib <> zlt_true thm
R82146:82153 compcert.lib.Coqlib <> zlt_true thm
R82146:82153 compcert.lib.Coqlib <> zlt_true thm
R82146:82153 compcert.lib.Coqlib <> zlt_true thm
R82146:82153 compcert.lib.Coqlib <> zlt_true thm
R82180:82188 compcert.lib.Coqlib <> zlt_false thm
R82180:82188 compcert.lib.Coqlib <> zlt_false thm
R82180:82188 compcert.lib.Coqlib <> zlt_false thm
R82180:82188 compcert.lib.Coqlib <> zlt_false thm
R82206:82213 compcert.lib.Coqlib <> zlt_true thm
R82206:82213 compcert.lib.Coqlib <> zlt_true thm
R82206:82213 compcert.lib.Coqlib <> zlt_true thm
prf 82244:82259 Make sign_ext_shr_shl
binder 82271:82271 <> n:652
binder 82273:82273 <> x:653
R82295:82300 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82310:82313 compcert.lib.Integers Make repr def
R82325:82327 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82316:82324 compcert.lib.Integers Make zwordsize def
R82328:82328 compcert.lib.Integers <> n:652 var
binder 82305:82305 <> y:654
R82348:82350 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82336:82343 compcert.lib.Integers Make sign_ext def
R82347:82347 compcert.lib.Integers <> x:653 var
R82345:82345 compcert.lib.Integers <> n:652 var
R82351:82353 compcert.lib.Integers Make shr def
R82365:82365 compcert.lib.Integers <> y:654 var
R82356:82358 compcert.lib.Integers Make shl def
R82362:82362 compcert.lib.Integers <> y:654 var
R82360:82360 compcert.lib.Integers <> x:653 var
R82279:82281 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R82283:82285 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R82282:82282 compcert.lib.Integers <> n:652 var
R82282:82282 compcert.lib.Integers <> n:652 var
R82286:82294 compcert.lib.Integers Make zwordsize def
R82408:82410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82398:82405 compcert.lib.Integers Make unsigned def
R82420:82422 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82411:82419 compcert.lib.Integers Make zwordsize def
R82408:82410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82398:82405 compcert.lib.Integers Make unsigned def
R82420:82422 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R82411:82419 compcert.lib.Integers Make zwordsize def
R82447:82459 compcert.lib.Integers Make unsigned_repr thm
R82447:82459 compcert.lib.Integers Make unsigned_repr thm
R82473:82493 compcert.lib.Integers Make wordsize_max_unsigned thm
R82473:82493 compcert.lib.Integers Make wordsize_max_unsigned thm
R82531:82533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82516:82518 compcert.lib.Integers Make ltu def
R82522:82530 compcert.lib.Integers Make iwordsize def
R82534:82537 Coq.Init.Datatypes <> true constr
R82531:82533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R82516:82518 compcert.lib.Integers Make ltu def
R82522:82530 compcert.lib.Integers Make iwordsize def
R82534:82537 Coq.Init.Datatypes <> true constr
R82552:82554 compcert.lib.Integers Make ltu def
R82568:82589 compcert.lib.Integers Make unsigned_repr_wordsize thm
R82568:82589 compcert.lib.Integers Make unsigned_repr_wordsize thm
R82568:82589 compcert.lib.Integers Make unsigned_repr_wordsize thm
R82598:82605 compcert.lib.Coqlib <> zlt_true thm
R82598:82605 compcert.lib.Coqlib <> zlt_true thm
R82625:82631 compcert.lib.Integers Make shr_shl thm
R82625:82631 compcert.lib.Integers Make shr_shl thm
R82625:82631 compcert.lib.Integers Make shr_shl thm
R82649:82651 compcert.lib.Integers Make ltu def
R82662:82670 compcert.lib.Coqlib <> zlt_false thm
R82662:82670 compcert.lib.Coqlib <> zlt_false thm
R82662:82670 compcert.lib.Coqlib <> zlt_false thm
R82690:82697 compcert.lib.Integers Make sub_idem thm
R82700:82707 compcert.lib.Integers Make shr_zero thm
R82690:82697 compcert.lib.Integers Make sub_idem thm
R82690:82697 compcert.lib.Integers Make sub_idem thm
R82700:82707 compcert.lib.Integers Make shr_zero thm
R82700:82707 compcert.lib.Integers Make shr_zero thm
prf 82852:82865 Make zero_ext_range
binder 82877:82877 <> n:655
binder 82879:82879 <> x:656
R82900:82903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R82905:82908 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R82932:82934 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R82909:82916 compcert.lib.Integers Make unsigned def
R82919:82926 compcert.lib.Integers Make zero_ext def
R82930:82930 compcert.lib.Integers <> x:656 var
R82928:82928 compcert.lib.Integers <> n:655 var
R82909:82916 compcert.lib.Integers Make unsigned def
R82919:82926 compcert.lib.Integers Make zero_ext def
R82930:82930 compcert.lib.Integers <> x:656 var
R82928:82928 compcert.lib.Integers <> n:655 var
R82935:82939 Coq.ZArith.Zpower <> two_p def
R82941:82941 compcert.lib.Integers <> n:655 var
R82883:82886 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R82888:82890 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R82887:82887 compcert.lib.Integers <> n:655 var
R82887:82887 compcert.lib.Integers <> n:655 var
R82891:82899 compcert.lib.Integers Make zwordsize def
R82969:82980 compcert.lib.Integers Make zero_ext_mod thm
R82969:82980 compcert.lib.Integers Make zero_ext_mod thm
R82969:82980 compcert.lib.Integers Make zero_ext_mod thm
R82969:82980 compcert.lib.Integers Make zero_ext_mod thm
R82995:83002 Coq.ZArith.Zdiv <> Z_mod_lt thm
R82995:83002 Coq.ZArith.Zdiv <> Z_mod_lt thm
R83011:83023 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83011:83023 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 83043:83056 Make eqmod_zero_ext
binder 83068:83068 <> n:657
binder 83070:83070 <> x:658
R83091:83094 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83095:83099 compcert.lib.Zbits <> eqmod def
R83138:83145 compcert.lib.Integers Make unsigned def
R83147:83147 compcert.lib.Integers <> x:658 var
R83112:83119 compcert.lib.Integers Make unsigned def
R83122:83129 compcert.lib.Integers Make zero_ext def
R83133:83133 compcert.lib.Integers <> x:658 var
R83131:83131 compcert.lib.Integers <> n:657 var
R83102:83106 Coq.ZArith.Zpower <> two_p def
R83108:83108 compcert.lib.Integers <> n:657 var
R83074:83077 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83079:83081 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83078:83078 compcert.lib.Integers <> n:657 var
R83078:83078 compcert.lib.Integers <> n:657 var
R83082:83090 compcert.lib.Integers Make zwordsize def
R83176:83187 compcert.lib.Integers Make zero_ext_mod thm
R83176:83187 compcert.lib.Integers Make zero_ext_mod thm
R83176:83187 compcert.lib.Integers Make zero_ext_mod thm
R83176:83187 compcert.lib.Integers Make zero_ext_mod thm
R83202:83210 compcert.lib.Zbits <> eqmod_sym thm
R83202:83210 compcert.lib.Zbits <> eqmod_sym thm
R83219:83227 compcert.lib.Zbits <> eqmod_mod thm
R83219:83227 compcert.lib.Zbits <> eqmod_mod thm
R83238:83250 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83238:83250 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 83388:83401 Make sign_ext_range
binder 83413:83413 <> n:659
binder 83415:83415 <> x:660
R83435:83438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R83451:83454 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83476:83478 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R83439:83439 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R83440:83444 Coq.ZArith.Zpower <> two_p def
R83448:83448 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83447:83447 compcert.lib.Integers <> n:659 var
R83455:83460 compcert.lib.Integers Make signed def
R83463:83470 compcert.lib.Integers Make sign_ext def
R83474:83474 compcert.lib.Integers <> x:660 var
R83472:83472 compcert.lib.Integers <> n:659 var
R83455:83460 compcert.lib.Integers Make signed def
R83463:83470 compcert.lib.Integers Make sign_ext def
R83474:83474 compcert.lib.Integers <> x:660 var
R83472:83472 compcert.lib.Integers <> n:659 var
R83479:83483 Coq.ZArith.Zpower <> two_p def
R83487:83487 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83486:83486 compcert.lib.Integers <> n:659 var
R83419:83421 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R83423:83425 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R83422:83422 compcert.lib.Integers <> n:659 var
R83422:83422 compcert.lib.Integers <> n:659 var
R83426:83434 compcert.lib.Integers Make zwordsize def
R83517:83532 compcert.lib.Integers Make sign_ext_shr_shl thm
R83517:83532 compcert.lib.Integers Make sign_ext_shr_shl thm
R83517:83532 compcert.lib.Integers Make sign_ext_shr_shl thm
R83517:83532 compcert.lib.Integers Make sign_ext_shr_shl thm
R83553:83555 compcert.lib.Integers Make shl def
R83560:83563 compcert.lib.Integers Make repr def
R83575:83577 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83566:83574 compcert.lib.Integers Make zwordsize def
R83553:83555 compcert.lib.Integers Make shl def
R83560:83563 compcert.lib.Integers Make repr def
R83575:83577 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83566:83574 compcert.lib.Integers Make zwordsize def
R83607:83609 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R83594:83598 Coq.ZArith.Zpower <> two_p def
R83602:83604 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83623:83635 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83607:83609 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R83594:83598 Coq.ZArith.Zpower <> two_p def
R83602:83604 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83623:83635 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83685:83687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83654:83661 compcert.lib.Integers Make unsigned def
R83664:83667 compcert.lib.Integers Make repr def
R83679:83681 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83670:83678 compcert.lib.Integers Make zwordsize def
R83697:83699 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83688:83696 compcert.lib.Integers Make zwordsize def
R83685:83687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R83654:83661 compcert.lib.Integers Make unsigned def
R83664:83667 compcert.lib.Integers Make repr def
R83679:83681 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83670:83678 compcert.lib.Integers Make zwordsize def
R83697:83699 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83688:83696 compcert.lib.Integers Make zwordsize def
R83714:83726 compcert.lib.Integers Make unsigned_repr thm
R83714:83726 compcert.lib.Integers Make unsigned_repr thm
R83756:83776 compcert.lib.Integers Make wordsize_max_unsigned thm
R83756:83776 compcert.lib.Integers Make wordsize_max_unsigned thm
R83794:83806 compcert.lib.Integers Make shr_div_two_p thm
R83794:83806 compcert.lib.Integers Make shr_div_two_p thm
R83794:83806 compcert.lib.Integers Make shr_div_two_p thm
R83819:83829 compcert.lib.Integers Make signed_repr thm
R83819:83829 compcert.lib.Integers Make signed_repr thm
R83819:83829 compcert.lib.Integers Make signed_repr thm
R83819:83829 compcert.lib.Integers Make signed_repr thm
R83854:83868 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R83854:83868 compcert.lib.Coqlib <> Zdiv_interval_1 thm
R83889:83901 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83889:83901 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R83935:83937 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R83920:83921 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R83922:83926 Coq.ZArith.Zpower <> two_p def
R83930:83932 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83938:83942 Coq.ZArith.Zpower <> two_p def
R83954:83956 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83945:83953 compcert.lib.Integers Make zwordsize def
R83972:83974 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84012:84012 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R83988:83990 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R83975:83979 Coq.ZArith.Zpower <> two_p def
R83983:83985 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83991:83995 Coq.ZArith.Zpower <> two_p def
R84007:84009 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83998:84006 compcert.lib.Integers Make zwordsize def
R83935:83937 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R83920:83921 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R83922:83926 Coq.ZArith.Zpower <> two_p def
R83930:83932 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83938:83942 Coq.ZArith.Zpower <> two_p def
R83954:83956 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83945:83953 compcert.lib.Integers Make zwordsize def
R83972:83974 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R84012:84012 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R83988:83990 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R83975:83979 Coq.ZArith.Zpower <> two_p def
R83983:83985 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83991:83995 Coq.ZArith.Zpower <> two_p def
R84007:84009 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R83998:84006 compcert.lib.Integers Make zwordsize def
R84037:84048 Coq.ZArith.Zpower <> two_p_is_exp thm
R84037:84048 Coq.ZArith.Zpower <> two_p_is_exp thm
R84037:84048 Coq.ZArith.Zpower <> two_p_is_exp thm
R84037:84048 Coq.ZArith.Zpower <> two_p_is_exp thm
R84037:84048 Coq.ZArith.Zpower <> two_p_is_exp thm
R84067:84070 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84084:84084 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84063:84065 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84080:84082 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84071:84079 compcert.lib.Integers Make zwordsize def
R84102:84104 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84093:84101 compcert.lib.Integers Make zwordsize def
R84067:84070 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84084:84084 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R84063:84065 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84080:84082 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84071:84079 compcert.lib.Integers Make zwordsize def
R84102:84104 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R84093:84101 compcert.lib.Integers Make zwordsize def
R84129:84146 compcert.lib.Integers Make half_modulus_power thm
R84129:84146 compcert.lib.Integers Make half_modulus_power thm
R84129:84146 compcert.lib.Integers Make half_modulus_power thm
R84163:84174 compcert.lib.Integers Make signed_range thm
R84163:84174 compcert.lib.Integers Make signed_range thm
R84187:84196 compcert.lib.Integers Make min_signed def
R84199:84208 compcert.lib.Integers Make max_signed def
R84236:84250 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R84236:84250 compcert.lib.Coqlib <> Zdiv_interval_2 thm
R84259:84270 compcert.lib.Integers Make signed_range thm
R84259:84270 compcert.lib.Integers Make signed_range thm
R84286:84299 compcert.lib.Integers Make min_signed_neg thm
R84286:84299 compcert.lib.Integers Make min_signed_neg thm
R84320:84333 compcert.lib.Integers Make max_signed_pos thm
R84320:84333 compcert.lib.Integers Make max_signed_pos thm
R84361:84373 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
R84361:84373 Coq.ZArith.Zpower <> two_p_gt_ZERO thm
prf 84393:84407 Make eqmod_sign_ext'
binder 84419:84419 <> n:661
binder 84421:84421 <> x:662
R84441:84446 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R84447:84451 compcert.lib.Zbits <> eqmod def
R84490:84497 compcert.lib.Integers Make unsigned def
R84499:84499 compcert.lib.Integers <> x:662 var
R84464:84471 compcert.lib.Integers Make unsigned def
R84474:84481 compcert.lib.Integers Make sign_ext def
R84485:84485 compcert.lib.Integers <> x:662 var
R84483:84483 compcert.lib.Integers <> n:661 var
R84454:84458 Coq.ZArith.Zpower <> two_p def
R84460:84460 compcert.lib.Integers <> n:661 var
R84425:84427 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R84429:84431 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R84428:84428 compcert.lib.Integers <> n:661 var
R84428:84428 compcert.lib.Integers <> n:661 var
R84432:84440 compcert.lib.Integers Make zwordsize def
R84532:84539 Coq.ZArith.BinInt Z to_nat def
R84532:84539 Coq.ZArith.BinInt Z to_nat def
R84565:84567 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84555:84562 Coq.ZArith.BinInt Z of_nat def
R84581:84588 Coq.ZArith.Znat Z2Nat id thm
R84565:84567 Coq.Init.Logic <> ::type_scope:x_'='_x not
R84555:84562 Coq.ZArith.BinInt Z of_nat def
R84581:84588 Coq.ZArith.Znat Z2Nat id thm
R84625:84643 compcert.lib.Coqlib <> two_power_nat_two_p thm
R84625:84643 compcert.lib.Coqlib <> two_power_nat_two_p thm
R84625:84643 compcert.lib.Coqlib <> two_power_nat_two_p thm
R84654:84668 compcert.lib.Zbits <> eqmod_same_bits thm
R84654:84668 compcert.lib.Zbits <> eqmod_same_bits thm
R84719:84725 compcert.lib.Integers Make testbit def
R84728:84735 compcert.lib.Integers Make sign_ext def
R84719:84725 compcert.lib.Integers Make testbit def
R84728:84735 compcert.lib.Integers Make sign_ext def
R84754:84766 compcert.lib.Integers Make bits_sign_ext thm
R84754:84766 compcert.lib.Integers Make bits_sign_ext thm
R84754:84766 compcert.lib.Integers Make bits_sign_ext thm
R84754:84766 compcert.lib.Integers Make bits_sign_ext thm
R84779:84786 compcert.lib.Coqlib <> zlt_true thm
R84779:84786 compcert.lib.Coqlib <> zlt_true thm
R84779:84786 compcert.lib.Coqlib <> zlt_true thm
R84779:84786 compcert.lib.Coqlib <> zlt_true thm
prf 84817:84830 Make eqmod_sign_ext
binder 84842:84842 <> n:663
binder 84844:84844 <> x:664
R84864:84869 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R84870:84874 compcert.lib.Zbits <> eqmod def
R84911:84918 compcert.lib.Integers Make unsigned def
R84920:84920 compcert.lib.Integers <> x:664 var
R84887:84892 compcert.lib.Integers Make signed def
R84895:84902 compcert.lib.Integers Make sign_ext def
R84906:84906 compcert.lib.Integers <> x:664 var
R84904:84904 compcert.lib.Integers <> n:663 var
R84877:84881 Coq.ZArith.Zpower <> two_p def
R84883:84883 compcert.lib.Integers <> n:663 var
R84848:84850 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R84852:84854 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<'_x not
R84851:84851 compcert.lib.Integers <> n:663 var
R84851:84851 compcert.lib.Integers <> n:663 var
R84855:84863 compcert.lib.Integers Make zwordsize def
R84965:84972 compcert.lib.Integers Make unsigned def
R84975:84982 compcert.lib.Integers Make sign_ext def
R84947:84957 compcert.lib.Zbits <> eqmod_trans thm
R84965:84972 compcert.lib.Integers Make unsigned def
R84975:84982 compcert.lib.Integers Make sign_ext def
R84947:84957 compcert.lib.Zbits <> eqmod_trans thm
R85018:85024 compcert.lib.Integers Make modulus def
R84999:85011 compcert.lib.Zbits <> eqmod_divides thm
R85018:85024 compcert.lib.Integers Make modulus def
R84999:85011 compcert.lib.Zbits <> eqmod_divides thm
R85033:85051 compcert.lib.Integers Make eqm_signed_unsigned thm
R85033:85051 compcert.lib.Integers Make eqm_signed_unsigned thm
R85064:85068 Coq.ZArith.Zpower <> two_p def
R85080:85082 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R85071:85079 compcert.lib.Integers Make zwordsize def
R85064:85068 Coq.ZArith.Zpower <> two_p def
R85080:85082 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R85071:85079 compcert.lib.Integers Make zwordsize def
R85097:85103 compcert.lib.Integers Make modulus def
R85114:85132 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85114:85132 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85114:85132 compcert.lib.Coqlib <> two_power_nat_two_p thm
R85140:85148 compcert.lib.Integers Make zwordsize def
R85140:85148 compcert.lib.Integers Make zwordsize def
R85164:85175 Coq.ZArith.Zpower <> two_p_is_exp thm
R85164:85175 Coq.ZArith.Zpower <> two_p_is_exp thm
R85164:85175 Coq.ZArith.Zpower <> two_p_is_exp thm
R85164:85175 Coq.ZArith.Zpower <> two_p_is_exp thm
R85164:85175 Coq.ZArith.Zpower <> two_p_is_exp thm
R85210:85224 compcert.lib.Integers Make eqmod_sign_ext' thm
R85210:85224 compcert.lib.Integers Make eqmod_sign_ext' thm
prf 85301:85312 Make shl_zero_ext
binder 85324:85324 <> n:665
binder 85326:85326 <> m:666
binder 85328:85328 <> x:667
R85337:85342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R85363:85365 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85343:85345 compcert.lib.Integers Make shl def
R85362:85362 compcert.lib.Integers <> m:666 var
R85348:85355 compcert.lib.Integers Make zero_ext def
R85359:85359 compcert.lib.Integers <> x:667 var
R85357:85357 compcert.lib.Integers <> n:665 var
R85366:85373 compcert.lib.Integers Make zero_ext def
R85393:85395 compcert.lib.Integers Make shl def
R85399:85399 compcert.lib.Integers <> m:666 var
R85397:85397 compcert.lib.Integers <> x:667 var
R85377:85379 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R85376:85376 compcert.lib.Integers <> n:665 var
R85380:85387 compcert.lib.Integers Make unsigned def
R85389:85389 compcert.lib.Integers <> m:666 var
R85332:85335 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R85336:85336 compcert.lib.Integers <> n:665 var
R85426:85437 compcert.lib.Integers Make same_bits_eq thm
R85426:85437 compcert.lib.Integers Make same_bits_eq thm
R85458:85470 compcert.lib.Integers Make bits_zero_ext thm
R85475:85482 compcert.lib.Integers Make bits_shl thm
R85458:85470 compcert.lib.Integers Make bits_zero_ext thm
R85458:85470 compcert.lib.Integers Make bits_zero_ext thm
R85475:85482 compcert.lib.Integers Make bits_shl thm
R85475:85482 compcert.lib.Integers Make bits_shl thm
R85475:85482 compcert.lib.Integers Make bits_shl thm
R85475:85482 compcert.lib.Integers Make bits_shl thm
R85504:85506 compcert.lib.Coqlib <> zlt def
R85511:85518 compcert.lib.Integers Make unsigned def
R85504:85506 compcert.lib.Coqlib <> zlt def
R85511:85518 compcert.lib.Integers Make unsigned def
R85535:85542 compcert.lib.Coqlib <> zlt_true thm
R85535:85542 compcert.lib.Coqlib <> zlt_true thm
R85535:85542 compcert.lib.Coqlib <> zlt_true thm
R85568:85580 compcert.lib.Integers Make bits_zero_ext thm
R85568:85580 compcert.lib.Integers Make bits_zero_ext thm
R85568:85580 compcert.lib.Integers Make bits_zero_ext thm
R85602:85604 compcert.lib.Coqlib <> zlt def
R85608:85610 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R85611:85618 compcert.lib.Integers Make unsigned def
R85636:85643 compcert.lib.Coqlib <> zlt_true thm
R85660:85668 compcert.lib.Coqlib <> zlt_false thm
R85602:85604 compcert.lib.Coqlib <> zlt def
R85608:85610 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R85611:85618 compcert.lib.Integers Make unsigned def
R85636:85643 compcert.lib.Coqlib <> zlt_true thm
R85636:85643 compcert.lib.Coqlib <> zlt_true thm
R85660:85668 compcert.lib.Coqlib <> zlt_false thm
R85660:85668 compcert.lib.Coqlib <> zlt_false thm
prf 85697:85708 Make shl_sign_ext
binder 85720:85720 <> n:668
binder 85722:85722 <> m:669
binder 85724:85724 <> x:670
R85732:85737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R85758:85760 Coq.Init.Logic <> ::type_scope:x_'='_x not
R85738:85740 compcert.lib.Integers Make shl def
R85757:85757 compcert.lib.Integers <> m:669 var
R85743:85750 compcert.lib.Integers Make sign_ext def
R85754:85754 compcert.lib.Integers <> x:670 var
R85752:85752 compcert.lib.Integers <> n:668 var
R85761:85768 compcert.lib.Integers Make sign_ext def
R85788:85790 compcert.lib.Integers Make shl def
R85794:85794 compcert.lib.Integers <> m:669 var
R85792:85792 compcert.lib.Integers <> x:670 var
R85772:85774 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R85771:85771 compcert.lib.Integers <> n:668 var
R85775:85782 compcert.lib.Integers Make unsigned def
R85784:85784 compcert.lib.Integers <> m:669 var
R85728:85730 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R85731:85731 compcert.lib.Integers <> n:668 var
R85827:85840 compcert.lib.Integers Make unsigned_range thm
R85827:85840 compcert.lib.Integers Make unsigned_range thm
R85862:85873 compcert.lib.Integers Make same_bits_eq thm
R85862:85873 compcert.lib.Integers Make same_bits_eq thm
R85894:85906 compcert.lib.Integers Make bits_sign_ext thm
R85911:85918 compcert.lib.Integers Make bits_shl thm
R85894:85906 compcert.lib.Integers Make bits_sign_ext thm
R85894:85906 compcert.lib.Integers Make bits_sign_ext thm
R85911:85918 compcert.lib.Integers Make bits_shl thm
R85911:85918 compcert.lib.Integers Make bits_shl thm
R85911:85918 compcert.lib.Integers Make bits_shl thm
R85940:85942 compcert.lib.Coqlib <> zlt def
R85948:85950 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R85951:85958 compcert.lib.Integers Make unsigned def
R85940:85942 compcert.lib.Coqlib <> zlt def
R85948:85950 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R85951:85958 compcert.lib.Integers Make unsigned def
R85975:85982 compcert.lib.Integers Make bits_shl thm
R85975:85982 compcert.lib.Integers Make bits_shl thm
R85975:85982 compcert.lib.Integers Make bits_shl thm
R86003:86005 compcert.lib.Coqlib <> zlt def
R86010:86017 compcert.lib.Integers Make unsigned def
R86003:86005 compcert.lib.Coqlib <> zlt def
R86010:86017 compcert.lib.Integers Make unsigned def
R86040:86052 compcert.lib.Integers Make bits_sign_ext thm
R86040:86052 compcert.lib.Integers Make bits_sign_ext thm
R86040:86052 compcert.lib.Integers Make bits_sign_ext thm
R86077:86084 compcert.lib.Coqlib <> zlt_true thm
R86077:86084 compcert.lib.Coqlib <> zlt_true thm
R86102:86110 compcert.lib.Coqlib <> zlt_false thm
R86102:86110 compcert.lib.Coqlib <> zlt_false thm
R86102:86110 compcert.lib.Coqlib <> zlt_false thm
R86128:86135 compcert.lib.Integers Make bits_shl thm
R86128:86135 compcert.lib.Integers Make bits_shl thm
R86128:86135 compcert.lib.Integers Make bits_shl thm
R86153:86161 compcert.lib.Coqlib <> zlt_false thm
R86153:86161 compcert.lib.Coqlib <> zlt_false thm
R86153:86161 compcert.lib.Coqlib <> zlt_false thm
R86181:86193 compcert.lib.Integers Make bits_sign_ext thm
R86181:86193 compcert.lib.Integers Make bits_sign_ext thm
R86181:86193 compcert.lib.Integers Make bits_sign_ext thm
R86220:86228 compcert.lib.Coqlib <> zlt_false thm
R86220:86228 compcert.lib.Coqlib <> zlt_false thm
R86220:86228 compcert.lib.Coqlib <> zlt_false thm
prf 86255:86267 Make shru_zero_ext
binder 86279:86279 <> n:671
binder 86281:86281 <> m:672
binder 86283:86283 <> x:673
R86292:86297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R86334:86336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86298:86301 compcert.lib.Integers Make shru def
R86333:86333 compcert.lib.Integers <> m:672 var
R86304:86311 compcert.lib.Integers Make zero_ext def
R86330:86330 compcert.lib.Integers <> x:673 var
R86315:86317 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86314:86314 compcert.lib.Integers <> n:671 var
R86318:86325 compcert.lib.Integers Make unsigned def
R86327:86327 compcert.lib.Integers <> m:672 var
R86337:86344 compcert.lib.Integers Make zero_ext def
R86349:86352 compcert.lib.Integers Make shru def
R86356:86356 compcert.lib.Integers <> m:672 var
R86354:86354 compcert.lib.Integers <> x:673 var
R86346:86346 compcert.lib.Integers <> n:671 var
R86287:86290 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R86291:86291 compcert.lib.Integers <> n:671 var
R86400:86402 compcert.lib.Coqlib <> zlt def
R86421:86429 compcert.lib.Integers Make zwordsize def
R86406:86408 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86409:86416 compcert.lib.Integers Make unsigned def
R86400:86402 compcert.lib.Coqlib <> zlt def
R86421:86429 compcert.lib.Integers Make zwordsize def
R86406:86408 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86409:86416 compcert.lib.Integers Make unsigned def
R86445:86447 compcert.lib.Coqlib <> zlt def
R86464:86471 compcert.lib.Coqlib <> zlt_true thm
R86488:86496 compcert.lib.Coqlib <> zlt_false thm
R86445:86447 compcert.lib.Coqlib <> zlt def
R86464:86471 compcert.lib.Coqlib <> zlt_true thm
R86464:86471 compcert.lib.Coqlib <> zlt_true thm
R86488:86496 compcert.lib.Coqlib <> zlt_false thm
R86488:86496 compcert.lib.Coqlib <> zlt_false thm
R86525:86527 compcert.lib.Coqlib <> zlt def
R86525:86527 compcert.lib.Coqlib <> zlt def
R86555:86568 compcert.lib.Integers Make unsigned_range thm
R86555:86568 compcert.lib.Integers Make unsigned_range thm
prf 86598:86612 Make shru_zero_ext_0
binder 86624:86624 <> n:674
binder 86626:86626 <> m:675
binder 86628:86628 <> x:676
R86646:86651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R86673:86675 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86652:86655 compcert.lib.Integers Make shru def
R86672:86672 compcert.lib.Integers <> m:675 var
R86658:86665 compcert.lib.Integers Make zero_ext def
R86669:86669 compcert.lib.Integers <> x:676 var
R86667:86667 compcert.lib.Integers <> n:674 var
R86676:86679 compcert.lib.Integers Make zero def
R86632:86635 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R86631:86631 compcert.lib.Integers <> n:674 var
R86636:86643 compcert.lib.Integers Make unsigned def
R86645:86645 compcert.lib.Integers <> m:675 var
R86722:86724 compcert.lib.Coqlib <> zlt def
R86743:86751 compcert.lib.Integers Make zwordsize def
R86728:86730 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86731:86738 compcert.lib.Integers Make unsigned def
R86722:86724 compcert.lib.Coqlib <> zlt def
R86743:86751 compcert.lib.Integers Make zwordsize def
R86728:86730 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86731:86738 compcert.lib.Integers Make unsigned def
R86769:86777 compcert.lib.Coqlib <> zlt_false thm
R86769:86777 compcert.lib.Coqlib <> zlt_false thm
R86799:86812 compcert.lib.Integers Make unsigned_range thm
R86799:86812 compcert.lib.Integers Make unsigned_range thm
prf 86835:86846 Make shr_sign_ext
binder 86858:86858 <> n:677
binder 86860:86860 <> m:678
binder 86862:86862 <> x:679
R86870:86873 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R86900:86905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R86941:86943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R86906:86908 compcert.lib.Integers Make shr def
R86940:86940 compcert.lib.Integers <> m:678 var
R86911:86918 compcert.lib.Integers Make sign_ext def
R86937:86937 compcert.lib.Integers <> x:679 var
R86922:86924 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86921:86921 compcert.lib.Integers <> n:677 var
R86925:86932 compcert.lib.Integers Make unsigned def
R86934:86934 compcert.lib.Integers <> m:678 var
R86944:86951 compcert.lib.Integers Make sign_ext def
R86956:86958 compcert.lib.Integers Make shr def
R86962:86962 compcert.lib.Integers <> m:678 var
R86960:86960 compcert.lib.Integers <> x:679 var
R86953:86953 compcert.lib.Integers <> n:677 var
R86888:86890 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R86875:86877 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R86874:86874 compcert.lib.Integers <> n:677 var
R86878:86885 compcert.lib.Integers Make unsigned def
R86887:86887 compcert.lib.Integers <> m:678 var
R86891:86899 compcert.lib.Integers Make zwordsize def
R86866:86868 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R86869:86869 compcert.lib.Integers <> n:677 var
R86995:87008 compcert.lib.Integers Make unsigned_range thm
R86995:87008 compcert.lib.Integers Make unsigned_range thm
R87030:87041 compcert.lib.Integers Make same_bits_eq thm
R87030:87041 compcert.lib.Integers Make same_bits_eq thm
R87062:87074 compcert.lib.Integers Make bits_sign_ext thm
R87077:87084 compcert.lib.Integers Make bits_shr thm
R87062:87074 compcert.lib.Integers Make bits_sign_ext thm
R87062:87074 compcert.lib.Integers Make bits_sign_ext thm
R87077:87084 compcert.lib.Integers Make bits_shr thm
R87077:87084 compcert.lib.Integers Make bits_shr thm
R87105:87117 compcert.lib.Integers Make bits_sign_ext thm
R87120:87127 compcert.lib.Integers Make bits_shr thm
R87105:87117 compcert.lib.Integers Make bits_sign_ext thm
R87105:87117 compcert.lib.Integers Make bits_sign_ext thm
R87105:87117 compcert.lib.Integers Make bits_sign_ext thm
R87120:87127 compcert.lib.Integers Make bits_shr thm
R87120:87127 compcert.lib.Integers Make bits_shr thm
R87120:87127 compcert.lib.Integers Make bits_shr thm
R87153:87155 compcert.lib.Coqlib <> zlt def
R87164:87166 compcert.lib.Coqlib <> zlt def
R87185:87193 compcert.lib.Integers Make zwordsize def
R87170:87172 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87173:87180 compcert.lib.Integers Make unsigned def
R87153:87155 compcert.lib.Coqlib <> zlt def
R87164:87166 compcert.lib.Coqlib <> zlt def
R87185:87193 compcert.lib.Integers Make zwordsize def
R87170:87172 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87173:87180 compcert.lib.Integers Make unsigned def
R87164:87166 compcert.lib.Coqlib <> zlt def
R87185:87193 compcert.lib.Integers Make zwordsize def
R87170:87172 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87173:87180 compcert.lib.Integers Make unsigned def
R87205:87212 compcert.lib.Coqlib <> zlt_true thm
R87205:87212 compcert.lib.Coqlib <> zlt_true thm
R87228:87235 compcert.lib.Coqlib <> zlt_true thm
R87228:87235 compcert.lib.Coqlib <> zlt_true thm
R87253:87261 compcert.lib.Coqlib <> zlt_false thm
R87253:87261 compcert.lib.Coqlib <> zlt_false thm
R87253:87261 compcert.lib.Coqlib <> zlt_false thm
R87279:87286 compcert.lib.Coqlib <> zlt_true thm
R87279:87286 compcert.lib.Coqlib <> zlt_true thm
R87279:87286 compcert.lib.Coqlib <> zlt_true thm
R87311:87319 compcert.lib.Coqlib <> zlt_false thm
R87311:87319 compcert.lib.Coqlib <> zlt_false thm
R87311:87319 compcert.lib.Coqlib <> zlt_false thm
R87337:87344 compcert.lib.Coqlib <> zlt_true thm
R87337:87344 compcert.lib.Coqlib <> zlt_true thm
R87337:87344 compcert.lib.Coqlib <> zlt_true thm
R87371:87373 compcert.lib.Coqlib <> zlt def
R87371:87373 compcert.lib.Coqlib <> zlt def
R87398:87400 compcert.lib.Coqlib <> zlt def
R87419:87427 compcert.lib.Integers Make zwordsize def
R87404:87406 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87407:87414 compcert.lib.Integers Make unsigned def
R87398:87400 compcert.lib.Coqlib <> zlt def
R87419:87427 compcert.lib.Integers Make zwordsize def
R87404:87406 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R87407:87414 compcert.lib.Integers Make unsigned def
prf 87448:87464 Make zero_ext_shru_min
binder 87476:87476 <> s:680
binder 87478:87478 <> x:681
binder 87480:87480 <> n:682
R87505:87510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R87532:87534 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87511:87518 compcert.lib.Integers Make zero_ext def
R87523:87526 compcert.lib.Integers Make shru def
R87530:87530 compcert.lib.Integers <> n:682 var
R87528:87528 compcert.lib.Integers <> x:681 var
R87520:87520 compcert.lib.Integers <> s:680 var
R87535:87542 compcert.lib.Integers Make zero_ext def
R87580:87583 compcert.lib.Integers Make shru def
R87587:87587 compcert.lib.Integers <> n:682 var
R87585:87585 compcert.lib.Integers <> x:681 var
R87545:87549 Coq.ZArith.BinInt Z min def
R87563:87565 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R87554:87562 compcert.lib.Integers Make zwordsize def
R87566:87573 compcert.lib.Integers Make unsigned def
R87575:87575 compcert.lib.Integers <> n:682 var
R87551:87551 compcert.lib.Integers <> s:680 var
R87498:87500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87483:87485 compcert.lib.Integers Make ltu def
R87489:87497 compcert.lib.Integers Make iwordsize def
R87487:87487 compcert.lib.Integers <> n:682 var
R87501:87504 Coq.Init.Datatypes <> true constr
R87614:87630 compcert.lib.Integers Make ltu_iwordsize_inv thm
R87614:87630 compcert.lib.Integers Make ltu_iwordsize_inv thm
R87646:87662 Coq.ZArith.BinInt Z min_case_strong thm
R87646:87662 Coq.ZArith.BinInt Z min_case_strong thm
R87713:87715 compcert.lib.Coqlib <> zlt def
R87729:87731 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R87720:87728 compcert.lib.Integers Make zwordsize def
R87732:87739 compcert.lib.Integers Make unsigned def
R87713:87715 compcert.lib.Coqlib <> zlt def
R87729:87731 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R87720:87728 compcert.lib.Integers Make zwordsize def
R87732:87739 compcert.lib.Integers Make unsigned def
R87756:87763 compcert.lib.Coqlib <> zlt_true thm
R87756:87763 compcert.lib.Coqlib <> zlt_true thm
R87756:87763 compcert.lib.Coqlib <> zlt_true thm
R87791:87793 compcert.lib.Coqlib <> zlt def
R87791:87793 compcert.lib.Coqlib <> zlt def
R87815:87823 compcert.lib.Coqlib <> zlt_false thm
R87815:87823 compcert.lib.Coqlib <> zlt_false thm
R87815:87823 compcert.lib.Coqlib <> zlt_false thm
prf 87851:87866 Make sign_ext_shr_min
binder 87878:87878 <> s:683
binder 87880:87880 <> x:684
binder 87882:87882 <> n:685
R87907:87912 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R87933:87935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87913:87920 compcert.lib.Integers Make sign_ext def
R87925:87927 compcert.lib.Integers Make shr def
R87931:87931 compcert.lib.Integers <> n:685 var
R87929:87929 compcert.lib.Integers <> x:684 var
R87922:87922 compcert.lib.Integers <> s:683 var
R87936:87943 compcert.lib.Integers Make sign_ext def
R87981:87983 compcert.lib.Integers Make shr def
R87987:87987 compcert.lib.Integers <> n:685 var
R87985:87985 compcert.lib.Integers <> x:684 var
R87946:87950 Coq.ZArith.BinInt Z min def
R87964:87966 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R87955:87963 compcert.lib.Integers Make zwordsize def
R87967:87974 compcert.lib.Integers Make unsigned def
R87976:87976 compcert.lib.Integers <> n:685 var
R87952:87952 compcert.lib.Integers <> s:683 var
R87900:87902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R87885:87887 compcert.lib.Integers Make ltu def
R87891:87899 compcert.lib.Integers Make iwordsize def
R87889:87889 compcert.lib.Integers <> n:685 var
R87903:87906 Coq.Init.Datatypes <> true constr
R88014:88030 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88014:88030 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88048:88057 Coq.ZArith.BinInt Z min_comm thm
R88048:88057 Coq.ZArith.BinInt Z min_comm thm
R88048:88057 Coq.ZArith.BinInt Z min_comm thm
R88073:88082 Coq.ZArith.BinInt Z min_spec thm
R88094:88096 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88085:88093 compcert.lib.Integers Make zwordsize def
R88097:88104 compcert.lib.Integers Make unsigned def
R88073:88082 Coq.ZArith.BinInt Z min_spec thm
R88094:88096 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88085:88093 compcert.lib.Integers Make zwordsize def
R88097:88104 compcert.lib.Integers Make unsigned def
R88157:88168 compcert.lib.Integers Make same_bits_eq thm
R88157:88168 compcert.lib.Integers Make same_bits_eq thm
R88189:88201 compcert.lib.Integers Make bits_sign_ext thm
R88189:88201 compcert.lib.Integers Make bits_sign_ext thm
R88189:88201 compcert.lib.Integers Make bits_sign_ext thm
R88189:88201 compcert.lib.Integers Make bits_sign_ext thm
R88189:88201 compcert.lib.Integers Make bits_sign_ext thm
R88224:88226 compcert.lib.Coqlib <> zlt def
R88240:88242 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88231:88239 compcert.lib.Integers Make zwordsize def
R88243:88250 compcert.lib.Integers Make unsigned def
R88224:88226 compcert.lib.Coqlib <> zlt def
R88240:88242 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88231:88239 compcert.lib.Integers Make zwordsize def
R88243:88250 compcert.lib.Integers Make unsigned def
R88268:88275 compcert.lib.Coqlib <> zlt_true thm
R88268:88275 compcert.lib.Coqlib <> zlt_true thm
R88268:88275 compcert.lib.Coqlib <> zlt_true thm
R88350:88352 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88304:88310 compcert.lib.Integers Make testbit def
R88345:88347 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88332:88334 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88323:88331 compcert.lib.Integers Make zwordsize def
R88335:88342 compcert.lib.Integers Make unsigned def
R88313:88315 compcert.lib.Integers Make shr def
R88353:88359 compcert.lib.Integers Make testbit def
R88373:88375 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88364:88372 compcert.lib.Integers Make zwordsize def
R88350:88352 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88304:88310 compcert.lib.Integers Make testbit def
R88345:88347 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88332:88334 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88323:88331 compcert.lib.Integers Make zwordsize def
R88335:88342 compcert.lib.Integers Make unsigned def
R88313:88315 compcert.lib.Integers Make shr def
R88353:88359 compcert.lib.Integers Make testbit def
R88373:88375 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88364:88372 compcert.lib.Integers Make zwordsize def
R88393:88400 compcert.lib.Integers Make bits_shr thm
R88393:88400 compcert.lib.Integers Make bits_shr thm
R88393:88400 compcert.lib.Integers Make bits_shr thm
R88418:88425 compcert.lib.Coqlib <> zlt_true thm
R88418:88425 compcert.lib.Coqlib <> zlt_true thm
R88418:88425 compcert.lib.Coqlib <> zlt_true thm
R88474:88476 compcert.lib.Coqlib <> zlt def
R88492:88499 compcert.lib.Integers Make bits_shr thm
R88474:88476 compcert.lib.Coqlib <> zlt def
R88492:88499 compcert.lib.Integers Make bits_shr thm
R88492:88499 compcert.lib.Integers Make bits_shr thm
R88492:88499 compcert.lib.Integers Make bits_shr thm
R88492:88499 compcert.lib.Integers Make bits_shr thm
R88519:88527 compcert.lib.Coqlib <> zlt_false thm
R88519:88527 compcert.lib.Coqlib <> zlt_false thm
R88519:88527 compcert.lib.Coqlib <> zlt_false thm
R88553:88561 compcert.lib.Coqlib <> zlt_false thm
R88553:88561 compcert.lib.Coqlib <> zlt_false thm
R88553:88561 compcert.lib.Coqlib <> zlt_false thm
prf 88589:88604 Make shl_zero_ext_min
binder 88616:88616 <> s:686
binder 88618:88618 <> x:687
binder 88620:88620 <> n:688
R88645:88650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R88671:88673 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88651:88653 compcert.lib.Integers Make shl def
R88670:88670 compcert.lib.Integers <> n:688 var
R88656:88663 compcert.lib.Integers Make zero_ext def
R88667:88667 compcert.lib.Integers <> x:687 var
R88665:88665 compcert.lib.Integers <> s:686 var
R88674:88676 compcert.lib.Integers Make shl def
R88726:88726 compcert.lib.Integers <> n:688 var
R88679:88686 compcert.lib.Integers Make zero_ext def
R88723:88723 compcert.lib.Integers <> x:687 var
R88689:88693 Coq.ZArith.BinInt Z min def
R88707:88709 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88698:88706 compcert.lib.Integers Make zwordsize def
R88710:88717 compcert.lib.Integers Make unsigned def
R88719:88719 compcert.lib.Integers <> n:688 var
R88695:88695 compcert.lib.Integers <> s:686 var
R88638:88640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R88623:88625 compcert.lib.Integers Make ltu def
R88629:88637 compcert.lib.Integers Make iwordsize def
R88627:88627 compcert.lib.Integers <> n:688 var
R88641:88644 Coq.Init.Datatypes <> true constr
R88752:88768 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88752:88768 compcert.lib.Integers Make ltu_iwordsize_inv thm
R88784:88800 Coq.ZArith.BinInt Z min_case_strong thm
R88784:88800 Coq.ZArith.BinInt Z min_case_strong thm
R88825:88836 compcert.lib.Integers Make same_bits_eq thm
R88825:88836 compcert.lib.Integers Make same_bits_eq thm
R88857:88864 compcert.lib.Integers Make bits_shl thm
R88857:88864 compcert.lib.Integers Make bits_shl thm
R88857:88864 compcert.lib.Integers Make bits_shl thm
R88857:88864 compcert.lib.Integers Make bits_shl thm
R88857:88864 compcert.lib.Integers Make bits_shl thm
R88887:88889 compcert.lib.Coqlib <> zlt def
R88894:88901 compcert.lib.Integers Make unsigned def
R88887:88889 compcert.lib.Coqlib <> zlt def
R88894:88901 compcert.lib.Integers Make unsigned def
R88926:88938 compcert.lib.Integers Make bits_zero_ext thm
R88926:88938 compcert.lib.Integers Make bits_zero_ext thm
R88926:88938 compcert.lib.Integers Make bits_zero_ext thm
R88926:88938 compcert.lib.Integers Make bits_zero_ext thm
R88926:88938 compcert.lib.Integers Make bits_zero_ext thm
R88960:88962 compcert.lib.Coqlib <> zlt def
R88966:88968 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88969:88976 compcert.lib.Integers Make unsigned def
R88960:88962 compcert.lib.Coqlib <> zlt def
R88966:88968 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R88969:88976 compcert.lib.Integers Make unsigned def
R88995:89002 compcert.lib.Coqlib <> zlt_true thm
R88995:89002 compcert.lib.Coqlib <> zlt_true thm
R88995:89002 compcert.lib.Coqlib <> zlt_true thm
R89028:89036 compcert.lib.Coqlib <> zlt_false thm
R89028:89036 compcert.lib.Coqlib <> zlt_false thm
R89028:89036 compcert.lib.Coqlib <> zlt_false thm
prf 89064:89079 Make shl_sign_ext_min
binder 89091:89091 <> s:689
binder 89093:89093 <> x:690
binder 89095:89095 <> n:691
R89120:89125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R89146:89148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89126:89128 compcert.lib.Integers Make shl def
R89145:89145 compcert.lib.Integers <> n:691 var
R89131:89138 compcert.lib.Integers Make sign_ext def
R89142:89142 compcert.lib.Integers <> x:690 var
R89140:89140 compcert.lib.Integers <> s:689 var
R89149:89151 compcert.lib.Integers Make shl def
R89201:89201 compcert.lib.Integers <> n:691 var
R89154:89161 compcert.lib.Integers Make sign_ext def
R89198:89198 compcert.lib.Integers <> x:690 var
R89164:89168 Coq.ZArith.BinInt Z min def
R89182:89184 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89173:89181 compcert.lib.Integers Make zwordsize def
R89185:89192 compcert.lib.Integers Make unsigned def
R89194:89194 compcert.lib.Integers <> n:691 var
R89170:89170 compcert.lib.Integers <> s:689 var
R89113:89115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89098:89100 compcert.lib.Integers Make ltu def
R89104:89112 compcert.lib.Integers Make iwordsize def
R89102:89102 compcert.lib.Integers <> n:691 var
R89116:89119 Coq.Init.Datatypes <> true constr
R89227:89243 compcert.lib.Integers Make ltu_iwordsize_inv thm
R89227:89243 compcert.lib.Integers Make ltu_iwordsize_inv thm
R89261:89270 Coq.ZArith.BinInt Z min_comm thm
R89261:89270 Coq.ZArith.BinInt Z min_comm thm
R89261:89270 Coq.ZArith.BinInt Z min_comm thm
R89286:89295 Coq.ZArith.BinInt Z min_spec thm
R89307:89309 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89298:89306 compcert.lib.Integers Make zwordsize def
R89310:89317 compcert.lib.Integers Make unsigned def
R89286:89295 Coq.ZArith.BinInt Z min_spec thm
R89307:89309 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89298:89306 compcert.lib.Integers Make zwordsize def
R89310:89317 compcert.lib.Integers Make unsigned def
R89370:89381 compcert.lib.Integers Make same_bits_eq thm
R89370:89381 compcert.lib.Integers Make same_bits_eq thm
R89402:89409 compcert.lib.Integers Make bits_shl thm
R89402:89409 compcert.lib.Integers Make bits_shl thm
R89402:89409 compcert.lib.Integers Make bits_shl thm
R89402:89409 compcert.lib.Integers Make bits_shl thm
R89402:89409 compcert.lib.Integers Make bits_shl thm
R89432:89434 compcert.lib.Coqlib <> zlt def
R89439:89446 compcert.lib.Integers Make unsigned def
R89432:89434 compcert.lib.Coqlib <> zlt def
R89439:89446 compcert.lib.Integers Make unsigned def
R89471:89483 compcert.lib.Integers Make bits_sign_ext thm
R89471:89483 compcert.lib.Integers Make bits_sign_ext thm
R89471:89483 compcert.lib.Integers Make bits_sign_ext thm
R89471:89483 compcert.lib.Integers Make bits_sign_ext thm
R89471:89483 compcert.lib.Integers Make bits_sign_ext thm
R89514:89516 compcert.lib.Coqlib <> zlt def
R89520:89522 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89523:89530 compcert.lib.Integers Make unsigned def
R89514:89516 compcert.lib.Coqlib <> zlt def
R89520:89522 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R89523:89530 compcert.lib.Integers Make unsigned def
R89549:89556 compcert.lib.Coqlib <> zlt_true thm
R89549:89556 compcert.lib.Coqlib <> zlt_true thm
R89549:89556 compcert.lib.Coqlib <> zlt_true thm
prf 89672:89685 Make one_bits_range
binder 89697:89697 <> x:692
binder 89699:89699 <> i:693
R89719:89722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R89738:89740 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89723:89725 compcert.lib.Integers Make ltu def
R89729:89737 compcert.lib.Integers Make iwordsize def
R89727:89727 compcert.lib.Integers <> i:693 var
R89741:89744 Coq.Init.Datatypes <> true constr
R89702:89703 Coq.Lists.List <> In def
R89708:89715 compcert.lib.Integers Make one_bits def
R89717:89717 compcert.lib.Integers <> x:692 var
R89705:89705 compcert.lib.Integers <> i:693 var
binder 89774:89774 <> p:694
R89795:89798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R89821:89823 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89799:89801 compcert.lib.Integers Make ltu def
R89812:89820 compcert.lib.Integers Make iwordsize def
R89804:89807 compcert.lib.Integers Make repr def
R89809:89809 compcert.lib.Integers <> p:694 var
R89824:89827 Coq.Init.Datatypes <> true constr
R89778:89781 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R89783:89785 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R89782:89782 compcert.lib.Integers <> p:694 var
R89782:89782 compcert.lib.Integers <> p:694 var
R89786:89794 compcert.lib.Integers Make zwordsize def
binder 89774:89774 <> p:695
R89795:89798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R89821:89823 Coq.Init.Logic <> ::type_scope:x_'='_x not
R89799:89801 compcert.lib.Integers Make ltu def
R89812:89820 compcert.lib.Integers Make iwordsize def
R89804:89807 compcert.lib.Integers Make repr def
R89809:89809 compcert.lib.Integers <> p:695 var
R89824:89827 Coq.Init.Datatypes <> true constr
R89778:89781 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R89783:89785 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R89782:89782 compcert.lib.Integers <> p:695 var
R89782:89782 compcert.lib.Integers <> p:695 var
R89786:89794 compcert.lib.Integers Make zwordsize def
R89850:89852 compcert.lib.Integers Make ltu def
R89855:89863 compcert.lib.Integers Make iwordsize def
R89872:89879 compcert.lib.Coqlib <> zlt_true thm
R89872:89879 compcert.lib.Coqlib <> zlt_true thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89901:89913 compcert.lib.Integers Make unsigned_repr thm
R89938:89958 compcert.lib.Integers Make wordsize_max_unsigned thm
R89938:89958 compcert.lib.Integers Make wordsize_max_unsigned thm
R89981:90001 compcert.lib.Integers Make wordsize_max_unsigned thm
R89981:90001 compcert.lib.Integers Make wordsize_max_unsigned thm
R90018:90025 compcert.lib.Integers Make one_bits def
R90048:90062 compcert.lib.Coqlib <> list_in_map_inv thm
R90048:90062 compcert.lib.Coqlib <> list_in_map_inv thm
R90139:90146 compcert.lib.Integers Make unsigned def
R90116:90131 compcert.lib.Zbits <> Z_one_bits_range thm
R90139:90146 compcert.lib.Integers Make unsigned def
R90116:90131 compcert.lib.Zbits <> Z_one_bits_range thm
def 90173:90187 Make int_of_one_bits
R90193:90196 Coq.Init.Datatypes <> list ind
R90198:90200 compcert.lib.Integers Make int rec
binder 90190:90190 <> l:696
R90205:90207 compcert.lib.Integers Make int rec
R90220:90220 compcert.lib.Integers <> l:696 var
R90231:90233 Coq.Init.Datatypes <> nil constr
R90238:90241 compcert.lib.Integers Make zero def
R90248:90251 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R90257:90259 compcert.lib.Integers Make add def
R90274:90288 compcert.lib.Integers <> int_of_one_bits:697 def
R90262:90264 compcert.lib.Integers Make shl def
R90266:90268 compcert.lib.Integers Make one def
prf 90309:90323 Make one_bits_decomp
binder 90335:90335 <> x:699
R90339:90341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R90338:90338 compcert.lib.Integers <> x:699 var
R90342:90356 compcert.lib.Integers Make int_of_one_bits def
R90359:90366 compcert.lib.Integers Make one_bits def
R90368:90368 compcert.lib.Integers <> x:699 var
R90405:90408 compcert.lib.Integers Make repr def
R90411:90420 compcert.lib.Zbits <> powerserie def
R90423:90432 compcert.lib.Zbits <> Z_one_bits def
R90444:90451 compcert.lib.Integers Make unsigned def
R90434:90441 compcert.lib.Integers Make wordsize def
R90405:90408 compcert.lib.Integers Make repr def
R90411:90420 compcert.lib.Zbits <> powerserie def
R90423:90432 compcert.lib.Zbits <> Z_one_bits def
R90444:90451 compcert.lib.Integers Make unsigned def
R90434:90441 compcert.lib.Integers Make wordsize def
R90478:90481 compcert.lib.Integers Make repr def
R90484:90491 compcert.lib.Integers Make unsigned def
R90478:90481 compcert.lib.Integers Make repr def
R90484:90491 compcert.lib.Integers Make unsigned def
R90529:90549 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R90529:90549 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R90579:90586 compcert.lib.Integers Make one_bits def
R90603:90618 compcert.lib.Zbits <> Z_one_bits_range thm
R90630:90637 compcert.lib.Integers Make unsigned def
R90620:90627 compcert.lib.Integers Make wordsize def
R90603:90618 compcert.lib.Zbits <> Z_one_bits_range thm
R90630:90637 compcert.lib.Integers Make unsigned def
R90620:90627 compcert.lib.Integers Make wordsize def
R90658:90667 compcert.lib.Zbits <> Z_one_bits def
R90679:90686 compcert.lib.Integers Make unsigned def
R90669:90676 compcert.lib.Integers Make wordsize def
R90658:90667 compcert.lib.Zbits <> Z_one_bits def
R90679:90686 compcert.lib.Integers Make unsigned def
R90669:90676 compcert.lib.Integers Make wordsize def
R90773:90775 compcert.lib.Integers Make add def
R90784:90795 compcert.lib.Integers Make eqm_samerepr thm
R90784:90795 compcert.lib.Integers Make eqm_samerepr thm
R90806:90812 compcert.lib.Integers Make eqm_add thm
R90806:90812 compcert.lib.Integers Make eqm_add thm
R90823:90835 compcert.lib.Integers Make shl_mul_two_p thm
R90823:90835 compcert.lib.Integers Make shl_mul_two_p thm
R90823:90835 compcert.lib.Integers Make shl_mul_two_p thm
R90846:90855 compcert.lib.Integers Make mul_commut thm
R90846:90855 compcert.lib.Integers Make mul_commut thm
R90846:90855 compcert.lib.Integers Make mul_commut thm
R90868:90874 compcert.lib.Integers Make mul_one thm
R90868:90874 compcert.lib.Integers Make mul_one thm
R90868:90874 compcert.lib.Integers Make mul_one thm
R90883:90901 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R90883:90901 compcert.lib.Integers Make eqm_unsigned_repr_r thm
R90914:90926 compcert.lib.Integers Make unsigned_repr thm
R90914:90926 compcert.lib.Integers Make unsigned_repr thm
R90914:90926 compcert.lib.Integers Make unsigned_repr thm
R90914:90926 compcert.lib.Integers Make unsigned_repr thm
R90964:90968 Coq.Lists.List <> in_eq thm
R90964:90968 Coq.Lists.List <> in_eq thm
R90985:90992 Coq.ZArith.BinInt Z of_nat def
R90994:91001 compcert.lib.Integers Make wordsize def
R91009:91017 compcert.lib.Integers Make zwordsize def
R90985:90992 Coq.ZArith.BinInt Z of_nat def
R90994:91001 compcert.lib.Integers Make wordsize def
R91009:91017 compcert.lib.Integers Make zwordsize def
R91033:91053 compcert.lib.Integers Make wordsize_max_unsigned thm
R91033:91053 compcert.lib.Integers Make wordsize_max_unsigned thm
prf 91167:91176 Make negate_cmp
binder 91188:91188 <> c:700
binder 91190:91190 <> x:701
binder 91192:91192 <> y:702
R91224:91226 Coq.Init.Logic <> ::type_scope:x_'='_x not
R91195:91197 compcert.lib.Integers Make cmp def
R91223:91223 compcert.lib.Integers <> y:702 var
R91221:91221 compcert.lib.Integers <> x:701 var
R91200:91216 compcert.lib.Integers <> negate_comparison def
R91218:91218 compcert.lib.Integers <> c:700 var
R91227:91230 Coq.Init.Datatypes <> negb def
R91233:91235 compcert.lib.Integers Make cmp def
R91241:91241 compcert.lib.Integers <> y:702 var
R91239:91239 compcert.lib.Integers <> x:701 var
R91237:91237 compcert.lib.Integers <> c:700 var
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
R91293:91301 Coq.Bool.Bool <> negb_elim syndef
prf 91324:91334 Make negate_cmpu
binder 91346:91346 <> c:703
binder 91348:91348 <> x:704
binder 91350:91350 <> y:705
R91383:91385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R91353:91356 compcert.lib.Integers Make cmpu def
R91382:91382 compcert.lib.Integers <> y:705 var
R91380:91380 compcert.lib.Integers <> x:704 var
R91359:91375 compcert.lib.Integers <> negate_comparison def
R91377:91377 compcert.lib.Integers <> c:703 var
R91386:91389 Coq.Init.Datatypes <> negb def
R91392:91395 compcert.lib.Integers Make cmpu def
R91401:91401 compcert.lib.Integers <> y:705 var
R91399:91399 compcert.lib.Integers <> x:704 var
R91397:91397 compcert.lib.Integers <> c:703 var
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
R91453:91461 Coq.Bool.Bool <> negb_elim syndef
prf 91484:91491 Make swap_cmp
binder 91503:91503 <> c:706
binder 91505:91505 <> x:707
binder 91507:91507 <> y:708
R91537:91539 Coq.Init.Logic <> ::type_scope:x_'='_x not
R91510:91512 compcert.lib.Integers Make cmp def
R91536:91536 compcert.lib.Integers <> y:708 var
R91534:91534 compcert.lib.Integers <> x:707 var
R91515:91529 compcert.lib.Integers <> swap_comparison def
R91531:91531 compcert.lib.Integers <> c:706 var
R91540:91542 compcert.lib.Integers Make cmp def
R91548:91548 compcert.lib.Integers <> x:707 var
R91546:91546 compcert.lib.Integers <> y:708 var
R91544:91544 compcert.lib.Integers <> c:706 var
R91599:91604 compcert.lib.Integers Make eq_sym thm
R91599:91604 compcert.lib.Integers Make eq_sym thm
R91620:91625 compcert.lib.Integers Make eq_sym thm
R91620:91625 compcert.lib.Integers Make eq_sym thm
prf 91642:91650 Make swap_cmpu
binder 91662:91662 <> c:709
binder 91664:91664 <> x:710
binder 91666:91666 <> y:711
R91697:91699 Coq.Init.Logic <> ::type_scope:x_'='_x not
R91669:91672 compcert.lib.Integers Make cmpu def
R91696:91696 compcert.lib.Integers <> y:711 var
R91694:91694 compcert.lib.Integers <> x:710 var
R91675:91689 compcert.lib.Integers <> swap_comparison def
R91691:91691 compcert.lib.Integers <> c:709 var
R91700:91703 compcert.lib.Integers Make cmpu def
R91709:91709 compcert.lib.Integers <> x:710 var
R91707:91707 compcert.lib.Integers <> y:711 var
R91705:91705 compcert.lib.Integers <> c:709 var
R91760:91765 compcert.lib.Integers Make eq_sym thm
R91760:91765 compcert.lib.Integers Make eq_sym thm
R91781:91786 compcert.lib.Integers Make eq_sym thm
R91781:91786 compcert.lib.Integers Make eq_sym thm
prf 91801:91812 Make translate_eq
binder 91824:91824 <> x:712
binder 91826:91826 <> y:713
binder 91828:91828 <> d:714
R91855:91857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R91833:91834 compcert.lib.Integers Make eq def
R91847:91849 compcert.lib.Integers Make add def
R91853:91853 compcert.lib.Integers <> d:714 var
R91851:91851 compcert.lib.Integers <> y:713 var
R91837:91839 compcert.lib.Integers Make add def
R91843:91843 compcert.lib.Integers <> d:714 var
R91841:91841 compcert.lib.Integers <> x:712 var
R91858:91859 compcert.lib.Integers Make eq def
R91863:91863 compcert.lib.Integers <> y:713 var
R91861:91861 compcert.lib.Integers <> x:712 var
R91890:91891 compcert.lib.Integers Make eq def
R91900:91902 compcert.lib.Coqlib <> zeq def
R91918:91925 compcert.lib.Integers Make unsigned def
R91905:91912 compcert.lib.Integers Make unsigned def
R91900:91902 compcert.lib.Coqlib <> zeq def
R91918:91925 compcert.lib.Integers Make unsigned def
R91905:91912 compcert.lib.Integers Make unsigned def
R91948:91950 compcert.lib.Integers Make add def
R91970:91977 compcert.lib.Coqlib <> zeq_true thm
R91970:91977 compcert.lib.Coqlib <> zeq_true thm
R91988:91996 compcert.lib.Coqlib <> zeq_false thm
R91988:91996 compcert.lib.Coqlib <> zeq_false thm
R92006:92008 compcert.lib.Integers Make add def
R92040:92051 compcert.lib.Integers Make eqm_small_eq thm
R92040:92051 compcert.lib.Integers Make eqm_small_eq thm
R92081:92088 compcert.lib.Integers Make unsigned def
R92099:92099 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92123:92126 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92110:92112 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92100:92107 compcert.lib.Integers Make unsigned def
R92113:92120 compcert.lib.Integers Make unsigned def
R92127:92134 compcert.lib.Integers Make unsigned def
R92081:92088 compcert.lib.Integers Make unsigned def
R92099:92099 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92123:92126 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92110:92112 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92100:92107 compcert.lib.Integers Make unsigned def
R92113:92120 compcert.lib.Integers Make unsigned def
R92127:92134 compcert.lib.Integers Make unsigned def
R92151:92158 compcert.lib.Integers Make unsigned def
R92169:92169 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92193:92196 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92180:92182 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92170:92177 compcert.lib.Integers Make unsigned def
R92183:92190 compcert.lib.Integers Make unsigned def
R92197:92204 compcert.lib.Integers Make unsigned def
R92151:92158 compcert.lib.Integers Make unsigned def
R92169:92169 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92193:92196 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R92180:92182 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92170:92177 compcert.lib.Integers Make unsigned def
R92183:92190 compcert.lib.Integers Make unsigned def
R92197:92204 compcert.lib.Integers Make unsigned def
R92218:92224 compcert.lib.Integers Make eqm_sub thm
R92218:92224 compcert.lib.Integers Make eqm_sub thm
R92249:92256 compcert.lib.Integers Make unsigned def
R92259:92262 compcert.lib.Integers Make repr def
R92275:92277 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92265:92272 compcert.lib.Integers Make unsigned def
R92278:92285 compcert.lib.Integers Make unsigned def
R92233:92241 compcert.lib.Integers Make eqm_trans thm
R92249:92256 compcert.lib.Integers Make unsigned def
R92259:92262 compcert.lib.Integers Make repr def
R92275:92277 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92265:92272 compcert.lib.Integers Make unsigned def
R92278:92285 compcert.lib.Integers Make unsigned def
R92233:92241 compcert.lib.Integers Make eqm_trans thm
R92334:92341 compcert.lib.Integers Make unsigned def
R92344:92347 compcert.lib.Integers Make repr def
R92360:92362 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92350:92357 compcert.lib.Integers Make unsigned def
R92363:92370 compcert.lib.Integers Make unsigned def
R92318:92326 compcert.lib.Integers Make eqm_trans thm
R92334:92341 compcert.lib.Integers Make unsigned def
R92344:92347 compcert.lib.Integers Make repr def
R92360:92362 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92350:92357 compcert.lib.Integers Make unsigned def
R92363:92370 compcert.lib.Integers Make unsigned def
R92318:92326 compcert.lib.Integers Make eqm_trans thm
prf 92455:92467 Make translate_ltu
binder 92479:92479 <> x:715
binder 92481:92481 <> y:716
binder 92483:92483 <> d:717
R92532:92537 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R92582:92587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R92611:92613 Coq.Init.Logic <> ::type_scope:x_'='_x not
R92588:92590 compcert.lib.Integers Make ltu def
R92603:92605 compcert.lib.Integers Make add def
R92609:92609 compcert.lib.Integers <> d:717 var
R92607:92607 compcert.lib.Integers <> y:716 var
R92593:92595 compcert.lib.Integers Make add def
R92599:92599 compcert.lib.Integers <> d:717 var
R92597:92597 compcert.lib.Integers <> x:715 var
R92614:92616 compcert.lib.Integers Make ltu def
R92620:92620 compcert.lib.Integers <> y:716 var
R92618:92618 compcert.lib.Integers <> x:715 var
R92539:92542 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92566:92569 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92553:92555 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92543:92550 compcert.lib.Integers Make unsigned def
R92552:92552 compcert.lib.Integers <> y:716 var
R92556:92563 compcert.lib.Integers Make unsigned def
R92565:92565 compcert.lib.Integers <> d:717 var
R92553:92555 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92543:92550 compcert.lib.Integers Make unsigned def
R92552:92552 compcert.lib.Integers <> y:716 var
R92556:92563 compcert.lib.Integers Make unsigned def
R92565:92565 compcert.lib.Integers <> d:717 var
R92570:92581 compcert.lib.Integers Make max_unsigned def
R92489:92492 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92516:92519 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92503:92505 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92493:92500 compcert.lib.Integers Make unsigned def
R92502:92502 compcert.lib.Integers <> x:715 var
R92506:92513 compcert.lib.Integers Make unsigned def
R92515:92515 compcert.lib.Integers <> d:717 var
R92503:92505 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92493:92500 compcert.lib.Integers Make unsigned def
R92502:92502 compcert.lib.Integers <> x:715 var
R92506:92513 compcert.lib.Integers Make unsigned def
R92515:92515 compcert.lib.Integers <> d:717 var
R92520:92531 compcert.lib.Integers Make max_unsigned def
R92647:92649 compcert.lib.Integers Make add def
R92659:92661 compcert.lib.Integers Make ltu def
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92681:92693 compcert.lib.Integers Make unsigned_repr thm
R92708:92710 compcert.lib.Coqlib <> zlt def
R92726:92733 compcert.lib.Integers Make unsigned def
R92713:92720 compcert.lib.Integers Make unsigned def
R92708:92710 compcert.lib.Coqlib <> zlt def
R92726:92733 compcert.lib.Integers Make unsigned def
R92713:92720 compcert.lib.Integers Make unsigned def
R92755:92762 compcert.lib.Coqlib <> zlt_true thm
R92755:92762 compcert.lib.Coqlib <> zlt_true thm
R92778:92786 compcert.lib.Coqlib <> zlt_false thm
R92778:92786 compcert.lib.Coqlib <> zlt_false thm
prf 92808:92821 Make translate_cmpu
binder 92833:92833 <> c:718
binder 92835:92835 <> x:719
binder 92837:92837 <> y:720
binder 92839:92839 <> d:721
R92888:92893 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R92938:92943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R92970:92972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R92944:92947 compcert.lib.Integers Make cmpu def
R92962:92964 compcert.lib.Integers Make add def
R92968:92968 compcert.lib.Integers <> d:721 var
R92966:92966 compcert.lib.Integers <> y:720 var
R92952:92954 compcert.lib.Integers Make add def
R92958:92958 compcert.lib.Integers <> d:721 var
R92956:92956 compcert.lib.Integers <> x:719 var
R92949:92949 compcert.lib.Integers <> c:718 var
R92973:92976 compcert.lib.Integers Make cmpu def
R92982:92982 compcert.lib.Integers <> y:720 var
R92980:92980 compcert.lib.Integers <> x:719 var
R92978:92978 compcert.lib.Integers <> c:718 var
R92895:92898 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92922:92925 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92909:92911 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92899:92906 compcert.lib.Integers Make unsigned def
R92908:92908 compcert.lib.Integers <> y:720 var
R92912:92919 compcert.lib.Integers Make unsigned def
R92921:92921 compcert.lib.Integers <> d:721 var
R92909:92911 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92899:92906 compcert.lib.Integers Make unsigned def
R92908:92908 compcert.lib.Integers <> y:720 var
R92912:92919 compcert.lib.Integers Make unsigned def
R92921:92921 compcert.lib.Integers <> d:721 var
R92926:92937 compcert.lib.Integers Make max_unsigned def
R92845:92848 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92872:92875 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R92859:92861 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92849:92856 compcert.lib.Integers Make unsigned def
R92858:92858 compcert.lib.Integers <> x:719 var
R92862:92869 compcert.lib.Integers Make unsigned def
R92871:92871 compcert.lib.Integers <> d:721 var
R92859:92861 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R92849:92856 compcert.lib.Integers Make unsigned def
R92858:92858 compcert.lib.Integers <> x:719 var
R92862:92869 compcert.lib.Integers Make unsigned def
R92871:92871 compcert.lib.Integers <> d:721 var
R92876:92887 compcert.lib.Integers Make max_unsigned def
R93009:93012 compcert.lib.Integers Make cmpu def
R93025:93036 compcert.lib.Integers Make translate_eq thm
R93025:93036 compcert.lib.Integers Make translate_eq thm
R93025:93036 compcert.lib.Integers Make translate_eq thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
R93054:93066 compcert.lib.Integers Make translate_ltu thm
prf 93087:93098 Make translate_lt
binder 93110:93110 <> x:722
binder 93112:93112 <> y:723
binder 93114:93114 <> d:724
R93166:93171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93219:93224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93247:93249 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93225:93226 compcert.lib.Integers Make lt def
R93239:93241 compcert.lib.Integers Make add def
R93245:93245 compcert.lib.Integers <> d:724 var
R93243:93243 compcert.lib.Integers <> y:723 var
R93229:93231 compcert.lib.Integers Make add def
R93235:93235 compcert.lib.Integers <> d:724 var
R93233:93233 compcert.lib.Integers <> x:722 var
R93250:93251 compcert.lib.Integers Make lt def
R93255:93255 compcert.lib.Integers <> y:723 var
R93253:93253 compcert.lib.Integers <> x:722 var
R93182:93185 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93205:93208 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93172:93181 compcert.lib.Integers Make min_signed def
R93194:93196 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93186:93191 compcert.lib.Integers Make signed def
R93193:93193 compcert.lib.Integers <> y:723 var
R93197:93202 compcert.lib.Integers Make signed def
R93204:93204 compcert.lib.Integers <> d:724 var
R93194:93196 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93186:93191 compcert.lib.Integers Make signed def
R93193:93193 compcert.lib.Integers <> y:723 var
R93197:93202 compcert.lib.Integers Make signed def
R93204:93204 compcert.lib.Integers <> d:724 var
R93209:93218 compcert.lib.Integers Make max_signed def
R93129:93132 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93152:93155 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93119:93128 compcert.lib.Integers Make min_signed def
R93141:93143 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93133:93138 compcert.lib.Integers Make signed def
R93140:93140 compcert.lib.Integers <> x:722 var
R93144:93149 compcert.lib.Integers Make signed def
R93151:93151 compcert.lib.Integers <> d:724 var
R93141:93143 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93133:93138 compcert.lib.Integers Make signed def
R93140:93140 compcert.lib.Integers <> x:722 var
R93144:93149 compcert.lib.Integers Make signed def
R93151:93151 compcert.lib.Integers <> d:724 var
R93156:93165 compcert.lib.Integers Make max_signed def
R93290:93299 compcert.lib.Integers Make add_signed thm
R93290:93299 compcert.lib.Integers Make add_signed thm
R93290:93299 compcert.lib.Integers Make add_signed thm
R93290:93299 compcert.lib.Integers Make add_signed thm
R93290:93299 compcert.lib.Integers Make add_signed thm
R93290:93299 compcert.lib.Integers Make add_signed thm
R93309:93310 compcert.lib.Integers Make lt def
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93330:93340 compcert.lib.Integers Make signed_repr thm
R93355:93357 compcert.lib.Coqlib <> zlt def
R93371:93376 compcert.lib.Integers Make signed def
R93360:93365 compcert.lib.Integers Make signed def
R93355:93357 compcert.lib.Coqlib <> zlt def
R93371:93376 compcert.lib.Integers Make signed def
R93360:93365 compcert.lib.Integers Make signed def
R93398:93405 compcert.lib.Coqlib <> zlt_true thm
R93398:93405 compcert.lib.Coqlib <> zlt_true thm
R93421:93429 compcert.lib.Coqlib <> zlt_false thm
R93421:93429 compcert.lib.Coqlib <> zlt_false thm
prf 93451:93463 Make translate_cmp
binder 93475:93475 <> c:725
binder 93477:93477 <> x:726
binder 93479:93479 <> y:727
binder 93481:93481 <> d:728
R93533:93538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93586:93591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93617:93619 Coq.Init.Logic <> ::type_scope:x_'='_x not
R93592:93594 compcert.lib.Integers Make cmp def
R93609:93611 compcert.lib.Integers Make add def
R93615:93615 compcert.lib.Integers <> d:728 var
R93613:93613 compcert.lib.Integers <> y:727 var
R93599:93601 compcert.lib.Integers Make add def
R93605:93605 compcert.lib.Integers <> d:728 var
R93603:93603 compcert.lib.Integers <> x:726 var
R93596:93596 compcert.lib.Integers <> c:725 var
R93620:93622 compcert.lib.Integers Make cmp def
R93628:93628 compcert.lib.Integers <> y:727 var
R93626:93626 compcert.lib.Integers <> x:726 var
R93624:93624 compcert.lib.Integers <> c:725 var
R93549:93552 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93572:93575 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93539:93548 compcert.lib.Integers Make min_signed def
R93561:93563 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93553:93558 compcert.lib.Integers Make signed def
R93560:93560 compcert.lib.Integers <> y:727 var
R93564:93569 compcert.lib.Integers Make signed def
R93571:93571 compcert.lib.Integers <> d:728 var
R93561:93563 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93553:93558 compcert.lib.Integers Make signed def
R93560:93560 compcert.lib.Integers <> y:727 var
R93564:93569 compcert.lib.Integers Make signed def
R93571:93571 compcert.lib.Integers <> d:728 var
R93576:93585 compcert.lib.Integers Make max_signed def
R93496:93499 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93519:93522 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R93486:93495 compcert.lib.Integers Make min_signed def
R93508:93510 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93500:93505 compcert.lib.Integers Make signed def
R93507:93507 compcert.lib.Integers <> x:726 var
R93511:93516 compcert.lib.Integers Make signed def
R93518:93518 compcert.lib.Integers <> d:728 var
R93508:93510 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R93500:93505 compcert.lib.Integers Make signed def
R93507:93507 compcert.lib.Integers <> x:726 var
R93511:93516 compcert.lib.Integers Make signed def
R93518:93518 compcert.lib.Integers <> d:728 var
R93523:93532 compcert.lib.Integers Make max_signed def
R93655:93657 compcert.lib.Integers Make cmp def
R93670:93681 compcert.lib.Integers Make translate_eq thm
R93670:93681 compcert.lib.Integers Make translate_eq thm
R93670:93681 compcert.lib.Integers Make translate_eq thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
R93699:93710 compcert.lib.Integers Make translate_lt thm
prf 93733:93754 Make notbool_isfalse_istrue
binder 93766:93766 <> x:729
R93779:93782 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93783:93789 compcert.lib.Integers Make is_true def
R93792:93798 compcert.lib.Integers Make notbool def
R93800:93800 compcert.lib.Integers <> x:729 var
R93769:93776 compcert.lib.Integers Make is_false def
R93778:93778 compcert.lib.Integers <> x:729 var
R93820:93827 compcert.lib.Integers Make is_false def
R93830:93836 compcert.lib.Integers Make is_true def
R93839:93845 compcert.lib.Integers Make notbool def
R93875:93881 compcert.lib.Integers Make eq_true thm
R93875:93881 compcert.lib.Integers Make eq_true thm
R93875:93881 compcert.lib.Integers Make eq_true thm
R93890:93901 compcert.lib.Integers Make one_not_zero thm
R93890:93901 compcert.lib.Integers Make one_not_zero thm
prf 93918:93939 Make notbool_istrue_isfalse
binder 93951:93951 <> x:730
R93963:93966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R93967:93974 compcert.lib.Integers Make is_false def
R93977:93983 compcert.lib.Integers Make notbool def
R93985:93985 compcert.lib.Integers <> x:730 var
R93954:93960 compcert.lib.Integers Make is_true def
R93962:93962 compcert.lib.Integers <> x:730 var
R94005:94012 compcert.lib.Integers Make is_false def
R94015:94021 compcert.lib.Integers Make is_true def
R94024:94030 compcert.lib.Integers Make notbool def
R94055:94061 compcert.lib.Integers Make eq_spec thm
R94065:94068 compcert.lib.Integers Make zero def
R94055:94061 compcert.lib.Integers Make eq_spec thm
R94065:94068 compcert.lib.Integers Make zero def
R94078:94079 compcert.lib.Integers Make eq def
R94083:94086 compcert.lib.Integers Make zero def
R94078:94079 compcert.lib.Integers Make eq def
R94083:94086 compcert.lib.Integers Make zero def
prf 94134:94147 Make ltu_range_test
binder 94159:94159 <> x:731
binder 94161:94161 <> y:732
R94180:94183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94208:94213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R94215:94218 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R94227:94229 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R94219:94224 compcert.lib.Integers Make signed def
R94226:94226 compcert.lib.Integers <> x:731 var
R94219:94224 compcert.lib.Integers Make signed def
R94226:94226 compcert.lib.Integers <> x:731 var
R94230:94237 compcert.lib.Integers Make unsigned def
R94239:94239 compcert.lib.Integers <> y:732 var
R94194:94197 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R94184:94191 compcert.lib.Integers Make unsigned def
R94193:94193 compcert.lib.Integers <> y:732 var
R94198:94207 compcert.lib.Integers Make max_signed def
R94173:94175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R94166:94168 compcert.lib.Integers Make ltu def
R94172:94172 compcert.lib.Integers <> y:732 var
R94170:94170 compcert.lib.Integers <> x:731 var
R94176:94179 Coq.Init.Datatypes <> true constr
R94268:94270 compcert.lib.Integers Make ltu def
R94288:94290 compcert.lib.Coqlib <> zlt def
R94306:94313 compcert.lib.Integers Make unsigned def
R94293:94300 compcert.lib.Integers Make unsigned def
R94288:94290 compcert.lib.Coqlib <> zlt def
R94306:94313 compcert.lib.Integers Make unsigned def
R94293:94300 compcert.lib.Integers Make unsigned def
R94348:94365 compcert.lib.Integers Make signed_eq_unsigned thm
R94348:94365 compcert.lib.Integers Make signed_eq_unsigned thm
R94348:94365 compcert.lib.Integers Make signed_eq_unsigned thm
R94348:94365 compcert.lib.Integers Make signed_eq_unsigned thm
R94382:94395 compcert.lib.Integers Make unsigned_range thm
R94382:94395 compcert.lib.Integers Make unsigned_range thm
prf 94425:94439 Make lt_sub_overflow
binder 94451:94451 <> x:733
binder 94453:94453 <> y:734
R94506:94508 Coq.Init.Logic <> ::type_scope:x_'='_x not
R94458:94460 compcert.lib.Integers Make xor def
R94487:94494 compcert.lib.Integers Make negative def
R94497:94499 compcert.lib.Integers Make sub def
R94503:94503 compcert.lib.Integers <> y:734 var
R94501:94501 compcert.lib.Integers <> x:733 var
R94463:94474 compcert.lib.Integers Make sub_overflow def
R94480:94483 compcert.lib.Integers Make zero def
R94478:94478 compcert.lib.Integers <> y:734 var
R94476:94476 compcert.lib.Integers <> x:733 var
R94512:94513 compcert.lib.Integers Make lt def
R94517:94517 compcert.lib.Integers <> y:734 var
R94515:94515 compcert.lib.Integers <> x:733 var
R94533:94536 compcert.lib.Integers Make zero def
R94524:94526 compcert.lib.Integers Make one def
R94563:94570 compcert.lib.Integers Make negative def
R94573:94584 compcert.lib.Integers Make sub_overflow def
R94587:94588 compcert.lib.Integers Make lt def
R94599:94608 compcert.lib.Integers Make sub_signed thm
R94599:94608 compcert.lib.Integers Make sub_signed thm
R94599:94608 compcert.lib.Integers Make sub_signed thm
R94621:94631 compcert.lib.Integers Make signed_zero thm
R94621:94631 compcert.lib.Integers Make signed_zero thm
R94621:94631 compcert.lib.Integers Make signed_zero thm
R94642:94650 Coq.ZArith.BinInt Z sub_0_r thm
R94642:94650 Coq.ZArith.BinInt Z sub_0_r thm
R94642:94650 Coq.ZArith.BinInt Z sub_0_r thm
R94667:94678 compcert.lib.Integers Make signed_range thm
R94684:94695 compcert.lib.Integers Make signed_range thm
R94667:94678 compcert.lib.Integers Make signed_range thm
R94684:94695 compcert.lib.Integers Make signed_range thm
R94713:94718 compcert.lib.Integers Make signed def
R94734:94739 compcert.lib.Integers Make signed def
R94713:94718 compcert.lib.Integers Make signed def
R94734:94739 compcert.lib.Integers Make signed def
R94768:94777 compcert.lib.Integers Make min_signed def
R94780:94789 compcert.lib.Integers Make max_signed def
R94810:94825 compcert.lib.Integers Make half_modulus_pos thm
R94827:94846 compcert.lib.Integers Make half_modulus_modulus thm
R94810:94825 compcert.lib.Integers Make half_modulus_pos thm
R94827:94846 compcert.lib.Integers Make half_modulus_modulus thm
R94875:94877 compcert.lib.Coqlib <> zle def
R94883:94885 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R94875:94877 compcert.lib.Coqlib <> zle def
R94883:94885 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R94900:94911 compcert.lib.Coqlib <> proj_sumbool def
R94927:94934 compcert.lib.Coqlib <> zle_true thm
R94927:94934 compcert.lib.Coqlib <> zle_true thm
R94927:94934 compcert.lib.Coqlib <> zle_true thm
R94967:94975 compcert.lib.Coqlib <> zlt_false thm
R94967:94975 compcert.lib.Coqlib <> zlt_false thm
R94967:94975 compcert.lib.Coqlib <> zlt_false thm
R95002:95004 compcert.lib.Coqlib <> zlt def
R95014:95025 compcert.lib.Integers Make half_modulus def
R95008:95010 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95002:95004 compcert.lib.Coqlib <> zlt def
R95014:95025 compcert.lib.Integers Make half_modulus def
R95008:95010 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95040:95051 compcert.lib.Coqlib <> proj_sumbool def
R95062:95069 compcert.lib.Coqlib <> zle_true thm
R95062:95069 compcert.lib.Coqlib <> zle_true thm
R95062:95069 compcert.lib.Coqlib <> zle_true thm
R95091:95101 compcert.lib.Integers Make signed_repr thm
R95091:95101 compcert.lib.Integers Make signed_repr thm
R95091:95101 compcert.lib.Integers Make signed_repr thm
R95091:95101 compcert.lib.Integers Make signed_repr thm
R95112:95120 compcert.lib.Coqlib <> zlt_false thm
R95112:95120 compcert.lib.Coqlib <> zlt_false thm
R95112:95120 compcert.lib.Coqlib <> zlt_false thm
R95136:95143 compcert.lib.Integers Make xor_idem thm
R95136:95143 compcert.lib.Integers Make xor_idem thm
R95157:95166 compcert.lib.Integers Make min_signed def
R95169:95178 compcert.lib.Integers Make max_signed def
R95197:95208 compcert.lib.Coqlib <> proj_sumbool def
R95219:95227 compcert.lib.Coqlib <> zle_false thm
R95219:95227 compcert.lib.Coqlib <> zle_false thm
R95219:95227 compcert.lib.Coqlib <> zle_false thm
R95250:95255 compcert.lib.Integers Make signed def
R95258:95261 compcert.lib.Integers Make repr def
R95265:95267 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95284:95286 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95280:95282 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95287:95293 compcert.lib.Integers Make modulus def
R95250:95255 compcert.lib.Integers Make signed def
R95258:95261 compcert.lib.Integers Make repr def
R95265:95267 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95284:95286 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95280:95282 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95287:95293 compcert.lib.Integers Make modulus def
R95309:95316 compcert.lib.Coqlib <> zlt_true thm
R95309:95316 compcert.lib.Coqlib <> zlt_true thm
R95309:95316 compcert.lib.Coqlib <> zlt_true thm
R95332:95339 compcert.lib.Integers Make xor_idem thm
R95332:95339 compcert.lib.Integers Make xor_idem thm
R95354:95367 compcert.lib.Integers Make signed_repr_eq thm
R95354:95367 compcert.lib.Integers Make signed_repr_eq thm
R95354:95367 compcert.lib.Integers Make signed_repr_eq thm
R95379:95379 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95385:95390 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95381:95383 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95391:95397 compcert.lib.Integers Make modulus def
R95407:95409 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95379:95379 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95385:95390 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95381:95383 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95391:95397 compcert.lib.Integers Make modulus def
R95407:95409 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95426:95434 compcert.lib.Coqlib <> zlt_false thm
R95426:95434 compcert.lib.Coqlib <> zlt_false thm
R95426:95434 compcert.lib.Coqlib <> zlt_false thm
R95426:95434 compcert.lib.Coqlib <> zlt_false thm
R95463:95473 compcert.lib.Coqlib <> Zmod_unique thm
R95463:95473 compcert.lib.Coqlib <> Zmod_unique thm
R95497:95508 compcert.lib.Coqlib <> proj_sumbool def
R95524:95531 compcert.lib.Coqlib <> zle_true thm
R95524:95531 compcert.lib.Coqlib <> zle_true thm
R95524:95531 compcert.lib.Coqlib <> zle_true thm
R95554:95564 Coq.Bool.Bool <> andb_true_r thm
R95554:95564 Coq.Bool.Bool <> andb_true_r thm
R95554:95564 Coq.Bool.Bool <> andb_true_r thm
R95578:95585 compcert.lib.Coqlib <> zlt_true thm
R95578:95585 compcert.lib.Coqlib <> zlt_true thm
R95578:95585 compcert.lib.Coqlib <> zlt_true thm
R95612:95614 compcert.lib.Coqlib <> zlt def
R95625:95625 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R95626:95637 compcert.lib.Integers Make half_modulus def
R95618:95620 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95612:95614 compcert.lib.Coqlib <> zlt def
R95625:95625 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R95626:95637 compcert.lib.Integers Make half_modulus def
R95618:95620 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95653:95664 compcert.lib.Coqlib <> proj_sumbool def
R95675:95683 compcert.lib.Coqlib <> zle_false thm
R95675:95683 compcert.lib.Coqlib <> zle_false thm
R95675:95683 compcert.lib.Coqlib <> zle_false thm
R95706:95711 compcert.lib.Integers Make signed def
R95714:95717 compcert.lib.Integers Make repr def
R95721:95723 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95740:95742 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R95736:95738 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95743:95749 compcert.lib.Integers Make modulus def
R95706:95711 compcert.lib.Integers Make signed def
R95714:95717 compcert.lib.Integers Make repr def
R95721:95723 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95740:95742 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R95736:95738 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95743:95749 compcert.lib.Integers Make modulus def
R95765:95773 compcert.lib.Coqlib <> zlt_false thm
R95765:95773 compcert.lib.Coqlib <> zlt_false thm
R95765:95773 compcert.lib.Coqlib <> zlt_false thm
R95789:95796 compcert.lib.Integers Make xor_zero thm
R95789:95796 compcert.lib.Integers Make xor_zero thm
R95811:95824 compcert.lib.Integers Make signed_repr_eq thm
R95811:95824 compcert.lib.Integers Make signed_repr_eq thm
R95811:95824 compcert.lib.Integers Make signed_repr_eq thm
R95836:95836 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95842:95847 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95838:95840 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95848:95854 compcert.lib.Integers Make modulus def
R95868:95870 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R95864:95866 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95871:95877 compcert.lib.Integers Make modulus def
R95836:95836 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95842:95847 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R95838:95840 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95848:95854 compcert.lib.Integers Make modulus def
R95868:95870 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R95864:95866 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R95871:95877 compcert.lib.Integers Make modulus def
R95893:95900 compcert.lib.Coqlib <> zlt_true thm
R95893:95900 compcert.lib.Coqlib <> zlt_true thm
R95893:95900 compcert.lib.Coqlib <> zlt_true thm
R95936:95946 compcert.lib.Coqlib <> Zmod_unique thm
R95936:95946 compcert.lib.Coqlib <> Zmod_unique thm
R95975:95986 compcert.lib.Coqlib <> proj_sumbool def
R95997:96004 compcert.lib.Coqlib <> zle_true thm
R95997:96004 compcert.lib.Coqlib <> zle_true thm
R95997:96004 compcert.lib.Coqlib <> zle_true thm
R96026:96036 compcert.lib.Integers Make signed_repr thm
R96026:96036 compcert.lib.Integers Make signed_repr thm
R96026:96036 compcert.lib.Integers Make signed_repr thm
R96026:96036 compcert.lib.Integers Make signed_repr thm
R96047:96054 compcert.lib.Coqlib <> zlt_true thm
R96047:96054 compcert.lib.Coqlib <> zlt_true thm
R96047:96054 compcert.lib.Coqlib <> zlt_true thm
R96070:96079 compcert.lib.Integers Make xor_zero_l thm
R96070:96079 compcert.lib.Integers Make xor_zero_l thm
R96093:96102 compcert.lib.Integers Make min_signed def
R96105:96114 compcert.lib.Integers Make max_signed def
prf 96134:96142 Make signed_eq
binder 96154:96154 <> x:735
binder 96156:96156 <> y:736
R96165:96167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R96159:96160 compcert.lib.Integers Make eq def
R96164:96164 compcert.lib.Integers <> y:736 var
R96162:96162 compcert.lib.Integers <> x:735 var
R96168:96170 compcert.lib.Coqlib <> zeq def
R96184:96189 compcert.lib.Integers Make signed def
R96191:96191 compcert.lib.Integers <> y:736 var
R96173:96178 compcert.lib.Integers Make signed def
R96180:96180 compcert.lib.Integers <> x:735 var
R96219:96220 compcert.lib.Integers Make eq def
R96230:96241 compcert.lib.Coqlib <> proj_sumbool def
R96256:96258 compcert.lib.Coqlib <> zeq def
R96274:96281 compcert.lib.Integers Make unsigned def
R96261:96268 compcert.lib.Integers Make unsigned def
R96300:96302 compcert.lib.Coqlib <> zeq def
R96316:96321 compcert.lib.Integers Make signed def
R96305:96310 compcert.lib.Integers Make signed def
R96256:96258 compcert.lib.Coqlib <> zeq def
R96274:96281 compcert.lib.Integers Make unsigned def
R96261:96268 compcert.lib.Integers Make unsigned def
R96300:96302 compcert.lib.Coqlib <> zeq def
R96316:96321 compcert.lib.Integers Make signed def
R96305:96310 compcert.lib.Integers Make signed def
R96300:96302 compcert.lib.Coqlib <> zeq def
R96316:96321 compcert.lib.Integers Make signed def
R96305:96310 compcert.lib.Integers Make signed def
R96351:96356 compcert.lib.Integers Make signed def
R96392:96403 compcert.lib.Integers Make eqm_small_eq thm
R96392:96403 compcert.lib.Integers Make eqm_small_eq thm
R96431:96439 compcert.lib.Integers Make eqm_trans thm
R96431:96439 compcert.lib.Integers Make eqm_trans thm
R96448:96454 compcert.lib.Integers Make eqm_sym thm
R96448:96454 compcert.lib.Integers Make eqm_sym thm
R96463:96481 compcert.lib.Integers Make eqm_signed_unsigned thm
R96463:96481 compcert.lib.Integers Make eqm_signed_unsigned thm
R96503:96521 compcert.lib.Integers Make eqm_signed_unsigned thm
R96503:96521 compcert.lib.Integers Make eqm_signed_unsigned thm
prf 96536:96541 Make not_lt
binder 96553:96553 <> x:737
binder 96555:96555 <> y:738
R96571:96574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R96591:96591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R96558:96561 Coq.Init.Datatypes <> negb def
R96564:96565 compcert.lib.Integers Make lt def
R96569:96569 compcert.lib.Integers <> x:737 var
R96567:96567 compcert.lib.Integers <> y:738 var
R96581:96584 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R96575:96576 compcert.lib.Integers Make lt def
R96580:96580 compcert.lib.Integers <> y:738 var
R96578:96578 compcert.lib.Integers <> x:737 var
R96585:96586 compcert.lib.Integers Make eq def
R96590:96590 compcert.lib.Integers <> y:738 var
R96588:96588 compcert.lib.Integers <> x:737 var
R96618:96619 compcert.lib.Integers Make lt def
R96630:96638 compcert.lib.Integers Make signed_eq thm
R96630:96638 compcert.lib.Integers Make signed_eq thm
R96630:96638 compcert.lib.Integers Make signed_eq thm
R96648:96659 compcert.lib.Coqlib <> proj_sumbool def
R96674:96676 compcert.lib.Coqlib <> zlt def
R96690:96695 compcert.lib.Integers Make signed def
R96679:96684 compcert.lib.Integers Make signed def
R96674:96676 compcert.lib.Coqlib <> zlt def
R96690:96695 compcert.lib.Integers Make signed def
R96679:96684 compcert.lib.Integers Make signed def
R96712:96720 compcert.lib.Coqlib <> zlt_false thm
R96712:96720 compcert.lib.Coqlib <> zlt_false thm
R96712:96720 compcert.lib.Coqlib <> zlt_false thm
R96712:96720 compcert.lib.Coqlib <> zlt_false thm
R96731:96739 compcert.lib.Coqlib <> zeq_false thm
R96731:96739 compcert.lib.Coqlib <> zeq_false thm
R96731:96739 compcert.lib.Coqlib <> zeq_false thm
R96731:96739 compcert.lib.Coqlib <> zeq_false thm
R96770:96772 compcert.lib.Coqlib <> zeq def
R96786:96791 compcert.lib.Integers Make signed def
R96775:96780 compcert.lib.Integers Make signed def
R96770:96772 compcert.lib.Coqlib <> zeq def
R96786:96791 compcert.lib.Integers Make signed def
R96775:96780 compcert.lib.Integers Make signed def
R96808:96816 compcert.lib.Coqlib <> zlt_false thm
R96808:96816 compcert.lib.Coqlib <> zlt_false thm
R96808:96816 compcert.lib.Coqlib <> zlt_false thm
R96808:96816 compcert.lib.Coqlib <> zlt_false thm
R96840:96847 compcert.lib.Coqlib <> zlt_true thm
R96840:96847 compcert.lib.Coqlib <> zlt_true thm
R96840:96847 compcert.lib.Coqlib <> zlt_true thm
R96840:96847 compcert.lib.Coqlib <> zlt_true thm
prf 96873:96878 Make lt_not
binder 96890:96890 <> x:739
binder 96892:96892 <> y:740
R96901:96903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R96895:96896 compcert.lib.Integers Make lt def
R96900:96900 compcert.lib.Integers <> x:739 var
R96898:96898 compcert.lib.Integers <> y:740 var
R96917:96920 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R96904:96907 Coq.Init.Datatypes <> negb def
R96910:96911 compcert.lib.Integers Make lt def
R96915:96915 compcert.lib.Integers <> y:740 var
R96913:96913 compcert.lib.Integers <> x:739 var
R96921:96924 Coq.Init.Datatypes <> negb def
R96927:96928 compcert.lib.Integers Make eq def
R96932:96932 compcert.lib.Integers <> y:740 var
R96930:96930 compcert.lib.Integers <> x:739 var
R96964:96971 Coq.Bool.Bool <> negb_orb thm
R96964:96971 Coq.Bool.Bool <> negb_orb thm
R96964:96971 Coq.Bool.Bool <> negb_orb thm
R96985:96990 compcert.lib.Integers Make not_lt thm
R96985:96990 compcert.lib.Integers Make not_lt thm
R96985:96990 compcert.lib.Integers Make not_lt thm
R97001:97015 Coq.Bool.Bool <> negb_involutive thm
R97001:97015 Coq.Bool.Bool <> negb_involutive thm
R97001:97015 Coq.Bool.Bool <> negb_involutive thm
prf 97036:97042 Make not_ltu
binder 97054:97054 <> x:741
binder 97056:97056 <> y:742
R97073:97076 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97094:97094 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97059:97062 Coq.Init.Datatypes <> negb def
R97065:97067 compcert.lib.Integers Make ltu def
R97071:97071 compcert.lib.Integers <> x:741 var
R97069:97069 compcert.lib.Integers <> y:742 var
R97084:97087 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R97077:97079 compcert.lib.Integers Make ltu def
R97083:97083 compcert.lib.Integers <> y:742 var
R97081:97081 compcert.lib.Integers <> x:741 var
R97088:97089 compcert.lib.Integers Make eq def
R97093:97093 compcert.lib.Integers <> y:742 var
R97091:97091 compcert.lib.Integers <> x:741 var
R97121:97123 compcert.lib.Integers Make ltu def
R97126:97127 compcert.lib.Integers Make eq def
R97142:97144 compcert.lib.Coqlib <> zlt def
R97160:97167 compcert.lib.Integers Make unsigned def
R97147:97154 compcert.lib.Integers Make unsigned def
R97142:97144 compcert.lib.Coqlib <> zlt def
R97160:97167 compcert.lib.Integers Make unsigned def
R97147:97154 compcert.lib.Integers Make unsigned def
R97184:97192 compcert.lib.Coqlib <> zlt_false thm
R97184:97192 compcert.lib.Coqlib <> zlt_false thm
R97184:97192 compcert.lib.Coqlib <> zlt_false thm
R97184:97192 compcert.lib.Coqlib <> zlt_false thm
R97203:97211 compcert.lib.Coqlib <> zeq_false thm
R97203:97211 compcert.lib.Coqlib <> zeq_false thm
R97203:97211 compcert.lib.Coqlib <> zeq_false thm
R97203:97211 compcert.lib.Coqlib <> zeq_false thm
R97242:97244 compcert.lib.Coqlib <> zeq def
R97260:97267 compcert.lib.Integers Make unsigned def
R97247:97254 compcert.lib.Integers Make unsigned def
R97242:97244 compcert.lib.Coqlib <> zeq def
R97260:97267 compcert.lib.Integers Make unsigned def
R97247:97254 compcert.lib.Integers Make unsigned def
R97284:97292 compcert.lib.Coqlib <> zlt_false thm
R97284:97292 compcert.lib.Coqlib <> zlt_false thm
R97284:97292 compcert.lib.Coqlib <> zlt_false thm
R97284:97292 compcert.lib.Coqlib <> zlt_false thm
R97316:97323 compcert.lib.Coqlib <> zlt_true thm
R97316:97323 compcert.lib.Coqlib <> zlt_true thm
R97316:97323 compcert.lib.Coqlib <> zlt_true thm
R97316:97323 compcert.lib.Coqlib <> zlt_true thm
prf 97349:97355 Make ltu_not
binder 97367:97367 <> x:743
binder 97369:97369 <> y:744
R97379:97381 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97372:97374 compcert.lib.Integers Make ltu def
R97378:97378 compcert.lib.Integers <> x:743 var
R97376:97376 compcert.lib.Integers <> y:744 var
R97396:97399 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R97382:97385 Coq.Init.Datatypes <> negb def
R97388:97390 compcert.lib.Integers Make ltu def
R97394:97394 compcert.lib.Integers <> y:744 var
R97392:97392 compcert.lib.Integers <> x:743 var
R97400:97403 Coq.Init.Datatypes <> negb def
R97406:97407 compcert.lib.Integers Make eq def
R97411:97411 compcert.lib.Integers <> y:744 var
R97409:97409 compcert.lib.Integers <> x:743 var
R97443:97450 Coq.Bool.Bool <> negb_orb thm
R97443:97450 Coq.Bool.Bool <> negb_orb thm
R97443:97450 Coq.Bool.Bool <> negb_orb thm
R97464:97470 compcert.lib.Integers Make not_ltu thm
R97464:97470 compcert.lib.Integers Make not_ltu thm
R97464:97470 compcert.lib.Integers Make not_ltu thm
R97481:97495 Coq.Bool.Bool <> negb_involutive thm
R97481:97495 Coq.Bool.Bool <> negb_involutive thm
R97481:97495 Coq.Bool.Bool <> negb_involutive thm
def 97553:97562 Make no_overlap
R97571:97573 compcert.lib.Integers Make int rec
binder 97565:97568 <> ofs1:745
R97582:97582 Coq.Numbers.BinNums <> Z ind
binder 97577:97579 <> sz1:746
R97592:97594 compcert.lib.Integers Make int rec
binder 97586:97589 <> ofs2:747
R97603:97603 Coq.Numbers.BinNums <> Z ind
binder 97598:97600 <> sz2:748
R97608:97611 Coq.Init.Datatypes <> bool ind
R97628:97635 compcert.lib.Integers Make unsigned def
R97637:97640 compcert.lib.Integers <> ofs1:745 var
binder 97622:97623 <> x1:749
R97655:97662 compcert.lib.Integers Make unsigned def
R97664:97667 compcert.lib.Integers <> ofs2:747 var
binder 97649:97650 <> x2:750
R97725:97731 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R97770:97770 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R97699:97702 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R97677:97679 compcert.lib.Coqlib <> zlt def
R97692:97698 compcert.lib.Integers Make modulus def
R97684:97686 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R97682:97683 compcert.lib.Integers <> x1:749 var
R97687:97689 compcert.lib.Integers <> sz1:746 var
R97703:97705 compcert.lib.Coqlib <> zlt def
R97718:97724 compcert.lib.Integers Make modulus def
R97710:97712 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R97708:97709 compcert.lib.Integers <> x2:750 var
R97713:97715 compcert.lib.Integers <> sz2:748 var
R97749:97752 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R97732:97734 compcert.lib.Coqlib <> zle def
R97747:97748 compcert.lib.Integers <> x2:750 var
R97739:97741 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R97737:97738 compcert.lib.Integers <> x1:749 var
R97742:97744 compcert.lib.Integers <> sz1:746 var
R97753:97755 compcert.lib.Coqlib <> zle def
R97768:97769 compcert.lib.Integers <> x1:749 var
R97760:97762 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R97758:97759 compcert.lib.Integers <> x2:750 var
R97763:97765 compcert.lib.Integers <> sz2:748 var
prf 97780:97795 Make no_overlap_sound
binder 97807:97810 <> ofs1:751
binder 97812:97814 <> sz1:752
binder 97816:97819 <> ofs2:753
binder 97821:97823 <> sz2:754
binder 97825:97828 <> base:755
R97840:97843 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R97851:97854 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R97890:97895 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R97954:97959 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R97926:97929 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R97920:97922 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R97896:97903 compcert.lib.Integers Make unsigned def
R97906:97908 compcert.lib.Integers Make add def
R97915:97918 compcert.lib.Integers <> ofs1:751 var
R97910:97913 compcert.lib.Integers <> base:755 var
R97923:97925 compcert.lib.Integers <> sz1:752 var
R97930:97937 compcert.lib.Integers Make unsigned def
R97940:97942 compcert.lib.Integers Make add def
R97949:97952 compcert.lib.Integers <> ofs2:753 var
R97944:97947 compcert.lib.Integers <> base:755 var
R97990:97993 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R97984:97986 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R97960:97967 compcert.lib.Integers Make unsigned def
R97970:97972 compcert.lib.Integers Make add def
R97979:97982 compcert.lib.Integers <> ofs2:753 var
R97974:97977 compcert.lib.Integers <> base:755 var
R97987:97989 compcert.lib.Integers <> sz2:754 var
R97994:98001 compcert.lib.Integers Make unsigned def
R98004:98006 compcert.lib.Integers Make add def
R98013:98016 compcert.lib.Integers <> ofs1:751 var
R98008:98011 compcert.lib.Integers <> base:755 var
R97883:97885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R97855:97864 compcert.lib.Integers Make no_overlap def
R97880:97882 compcert.lib.Integers <> sz2:754 var
R97875:97878 compcert.lib.Integers <> ofs2:753 var
R97871:97873 compcert.lib.Integers <> sz1:752 var
R97866:97869 compcert.lib.Integers <> ofs1:751 var
R97886:97889 Coq.Init.Datatypes <> true constr
R97847:97849 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R97844:97846 compcert.lib.Integers <> sz2:754 var
R97836:97838 Coq.ZArith.BinInt <> ::Z_scope:x_'>'_x not
R97833:97835 compcert.lib.Integers <> sz1:752 var
R98049:98057 Coq.Init.Datatypes <> andb_prop thm
R98049:98057 Coq.Init.Datatypes <> andb_prop thm
R98090:98098 Coq.Init.Datatypes <> andb_prop thm
R98090:98098 Coq.Init.Datatypes <> andb_prop thm
R98127:98143 compcert.lib.Coqlib <> proj_sumbool_true thm
R98127:98143 compcert.lib.Coqlib <> proj_sumbool_true thm
R98160:98176 compcert.lib.Coqlib <> proj_sumbool_true thm
R98160:98176 compcert.lib.Coqlib <> proj_sumbool_true thm
R98231:98234 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R98214:98217 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98208:98210 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98195:98202 compcert.lib.Integers Make unsigned def
R98218:98225 compcert.lib.Integers Make unsigned def
R98254:98257 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98248:98250 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98235:98242 compcert.lib.Integers Make unsigned def
R98258:98265 compcert.lib.Integers Make unsigned def
R98231:98234 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R98214:98217 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98208:98210 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98195:98202 compcert.lib.Integers Make unsigned def
R98218:98225 compcert.lib.Integers Make unsigned def
R98254:98257 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R98248:98250 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R98235:98242 compcert.lib.Integers Make unsigned def
R98258:98265 compcert.lib.Integers Make unsigned def
R98286:98293 Coq.Bool.Bool <> orb_prop thm
R98286:98293 Coq.Bool.Bool <> orb_prop thm
R98317:98333 compcert.lib.Coqlib <> proj_sumbool_true thm
R98317:98333 compcert.lib.Coqlib <> proj_sumbool_true thm
R98357:98373 compcert.lib.Coqlib <> proj_sumbool_true thm
R98357:98373 compcert.lib.Coqlib <> proj_sumbool_true thm
R98409:98422 compcert.lib.Integers Make unsigned_range thm
R98431:98444 compcert.lib.Integers Make unsigned_range thm
R98409:98422 compcert.lib.Integers Make unsigned_range thm
R98431:98444 compcert.lib.Integers Make unsigned_range thm
R98479:98497 compcert.lib.Integers Make unsigned_add_either thm
R98511:98529 compcert.lib.Integers Make unsigned_add_either thm
R98479:98497 compcert.lib.Integers Make unsigned_add_either thm
R98511:98529 compcert.lib.Integers Make unsigned_add_either thm
def 98625:98628 Make size
R98634:98636 compcert.lib.Integers Make int rec
binder 98631:98631 <> x:756
R98641:98641 Coq.Numbers.BinNums <> Z ind
R98646:98650 compcert.lib.Zbits <> Zsize def
R98653:98660 compcert.lib.Integers Make unsigned def
R98662:98662 compcert.lib.Integers <> x:756 var
prf 98675:98683 Make size_zero
R98695:98697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98686:98689 compcert.lib.Integers Make size def
R98691:98694 compcert.lib.Integers Make zero def
R98717:98720 compcert.lib.Integers Make size def
R98731:98743 compcert.lib.Integers Make unsigned_zero thm
R98731:98743 compcert.lib.Integers Make unsigned_zero thm
R98731:98743 compcert.lib.Integers Make unsigned_zero thm
prf 98766:98776 Make bits_size_1
binder 98788:98788 <> x:757
R98799:98802 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R98792:98794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98791:98791 compcert.lib.Integers <> x:757 var
R98795:98798 compcert.lib.Integers Make zero def
R98830:98832 Coq.Init.Logic <> ::type_scope:x_'='_x not
R98803:98809 compcert.lib.Integers Make testbit def
R98814:98819 Coq.ZArith.BinInt Z pred def
R98822:98825 compcert.lib.Integers Make size def
R98827:98827 compcert.lib.Integers <> x:757 var
R98811:98811 compcert.lib.Integers <> x:757 var
R98833:98836 Coq.Init.Datatypes <> true constr
R98866:98868 compcert.lib.Coqlib <> zeq def
R98871:98878 compcert.lib.Integers Make unsigned def
R98866:98868 compcert.lib.Coqlib <> zeq def
R98871:98878 compcert.lib.Integers Make unsigned def
R98907:98919 compcert.lib.Integers Make repr_unsigned thm
R98907:98919 compcert.lib.Integers Make repr_unsigned thm
R98907:98919 compcert.lib.Integers Make repr_unsigned thm
R98957:98971 compcert.lib.Zbits <> Ztestbit_size_1 thm
R98957:98971 compcert.lib.Zbits <> Ztestbit_size_1 thm
R98986:98999 compcert.lib.Integers Make unsigned_range thm
R98986:98999 compcert.lib.Integers Make unsigned_range thm
prf 99024:99034 Make bits_size_2
binder 99046:99046 <> x:758
binder 99048:99048 <> i:759
R99062:99065 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99077:99079 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99066:99072 compcert.lib.Integers Make testbit def
R99076:99076 compcert.lib.Integers <> i:759 var
R99074:99074 compcert.lib.Integers <> x:758 var
R99080:99084 Coq.Init.Datatypes <> false constr
R99057:99060 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R99051:99054 compcert.lib.Integers Make size def
R99056:99056 compcert.lib.Integers <> x:758 var
R99061:99061 compcert.lib.Integers <> i:759 var
R99110:99124 compcert.lib.Zbits <> Ztestbit_size_2 thm
R99110:99124 compcert.lib.Zbits <> Ztestbit_size_2 thm
R99139:99152 compcert.lib.Integers Make unsigned_range thm
R99139:99152 compcert.lib.Integers Make unsigned_range thm
R99171:99174 compcert.lib.Integers Make size def
R99171:99174 compcert.lib.Integers Make size def
prf 99199:99208 Make size_range
binder 99220:99220 <> x:760
R99224:99227 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R99234:99237 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R99228:99231 compcert.lib.Integers Make size def
R99233:99233 compcert.lib.Integers <> x:760 var
R99228:99231 compcert.lib.Integers Make size def
R99233:99233 compcert.lib.Integers <> x:760 var
R99238:99246 compcert.lib.Integers Make zwordsize def
R99279:99287 compcert.lib.Zbits <> Zsize_pos thm
R99279:99287 compcert.lib.Zbits <> Zsize_pos thm
R99302:99312 compcert.lib.Integers Make bits_size_1 thm
R99302:99312 compcert.lib.Integers Make bits_size_1 thm
R99336:99339 compcert.lib.Integers Make size def
R99350:99362 compcert.lib.Integers Make unsigned_zero thm
R99350:99362 compcert.lib.Integers Make unsigned_zero thm
R99350:99362 compcert.lib.Integers Make unsigned_zero thm
R99383:99394 compcert.lib.Integers Make wordsize_pos thm
R99383:99394 compcert.lib.Integers Make wordsize_pos thm
R99414:99416 compcert.lib.Coqlib <> zle def
R99427:99435 compcert.lib.Integers Make zwordsize def
R99419:99422 compcert.lib.Integers Make size def
R99414:99416 compcert.lib.Coqlib <> zle def
R99427:99435 compcert.lib.Integers Make zwordsize def
R99419:99422 compcert.lib.Integers Make size def
R99455:99464 compcert.lib.Integers Make bits_above thm
R99455:99464 compcert.lib.Integers Make bits_above thm
R99455:99464 compcert.lib.Integers Make bits_above thm
R99455:99464 compcert.lib.Integers Make bits_above thm
prf 99503:99513 Make bits_size_3
binder 99525:99525 <> x:761
binder 99527:99527 <> n:762
R99538:99543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99544:99544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99596:99602 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99609:99612 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R99603:99606 compcert.lib.Integers Make size def
R99608:99608 compcert.lib.Integers <> x:761 var
R99613:99613 compcert.lib.Integers <> n:762 var
binder 99552:99552 <> i:763
R99573:99576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99588:99590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99577:99583 compcert.lib.Integers Make testbit def
R99587:99587 compcert.lib.Integers <> i:763 var
R99585:99585 compcert.lib.Integers <> x:761 var
R99591:99595 Coq.Init.Datatypes <> false constr
R99556:99559 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R99561:99563 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R99555:99555 compcert.lib.Integers <> n:762 var
R99560:99560 compcert.lib.Integers <> i:763 var
R99560:99560 compcert.lib.Integers <> i:763 var
R99564:99572 compcert.lib.Integers Make zwordsize def
R99533:99536 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R99537:99537 compcert.lib.Integers <> n:762 var
R99643:99645 compcert.lib.Coqlib <> zle def
R99648:99651 compcert.lib.Integers Make size def
R99643:99645 compcert.lib.Coqlib <> zle def
R99648:99651 compcert.lib.Integers Make size def
R99678:99688 compcert.lib.Integers Make bits_size_1 thm
R99678:99688 compcert.lib.Integers Make bits_size_1 thm
R99712:99715 compcert.lib.Integers Make size def
R99726:99738 compcert.lib.Integers Make unsigned_zero thm
R99726:99738 compcert.lib.Integers Make unsigned_zero thm
R99726:99738 compcert.lib.Integers Make unsigned_zero thm
R99768:99773 Coq.ZArith.BinInt Z pred def
R99776:99779 compcert.lib.Integers Make size def
R99768:99773 Coq.ZArith.BinInt Z pred def
R99776:99779 compcert.lib.Integers Make size def
R99768:99773 Coq.ZArith.BinInt Z pred def
R99776:99779 compcert.lib.Integers Make size def
R99768:99773 Coq.ZArith.BinInt Z pred def
R99776:99779 compcert.lib.Integers Make size def
R99819:99828 compcert.lib.Integers Make size_range thm
R99819:99828 compcert.lib.Integers Make size_range thm
prf 99853:99863 Make bits_size_4
binder 99875:99875 <> x:764
binder 99877:99877 <> n:765
R99888:99893 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99921:99926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99927:99927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99979:99985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99992:99994 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99986:99989 compcert.lib.Integers Make size def
R99991:99991 compcert.lib.Integers <> x:764 var
R99995:99995 compcert.lib.Integers <> n:765 var
binder 99935:99935 <> i:766
R99956:99959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R99971:99973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99960:99966 compcert.lib.Integers Make testbit def
R99970:99970 compcert.lib.Integers <> i:766 var
R99968:99968 compcert.lib.Integers <> x:764 var
R99974:99978 Coq.Init.Datatypes <> false constr
R99939:99942 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R99944:99946 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R99938:99938 compcert.lib.Integers <> n:765 var
R99943:99943 compcert.lib.Integers <> i:766 var
R99943:99943 compcert.lib.Integers <> i:766 var
R99947:99955 compcert.lib.Integers Make zwordsize def
R99914:99916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R99894:99900 compcert.lib.Integers Make testbit def
R99905:99910 Coq.ZArith.BinInt Z pred def
R99912:99912 compcert.lib.Integers <> n:765 var
R99902:99902 compcert.lib.Integers <> x:764 var
R99917:99920 Coq.Init.Datatypes <> true constr
R99883:99886 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R99887:99887 compcert.lib.Integers <> n:765 var
R100031:100034 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100025:100028 compcert.lib.Integers Make size def
R100031:100034 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100025:100028 compcert.lib.Integers Make size def
R100049:100059 compcert.lib.Integers Make bits_size_3 thm
R100049:100059 compcert.lib.Integers Make bits_size_3 thm
R100080:100082 compcert.lib.Coqlib <> zlt def
R100085:100088 compcert.lib.Integers Make size def
R100080:100082 compcert.lib.Coqlib <> zlt def
R100085:100088 compcert.lib.Integers Make size def
R100107:100117 compcert.lib.Integers Make bits_size_2 thm
R100107:100117 compcert.lib.Integers Make bits_size_2 thm
R100107:100117 compcert.lib.Integers Make bits_size_2 thm
R100107:100117 compcert.lib.Integers Make bits_size_2 thm
prf 100164:100178 Make size_interval_1
binder 100190:100190 <> x:767
R100194:100197 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100208:100210 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100198:100205 compcert.lib.Integers Make unsigned def
R100207:100207 compcert.lib.Integers <> x:767 var
R100198:100205 compcert.lib.Integers Make unsigned def
R100207:100207 compcert.lib.Integers <> x:767 var
R100211:100215 Coq.ZArith.Zpower <> two_p def
R100218:100221 compcert.lib.Integers Make size def
R100223:100223 compcert.lib.Integers <> x:767 var
R100250:100265 compcert.lib.Zbits <> Zsize_interval_1 thm
R100250:100265 compcert.lib.Zbits <> Zsize_interval_1 thm
R100280:100293 compcert.lib.Integers Make unsigned_range thm
R100280:100293 compcert.lib.Integers Make unsigned_range thm
prf 100318:100332 Make size_interval_2
binder 100344:100344 <> x:768
binder 100346:100346 <> n:769
R100355:100358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100384:100387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R100389:100392 Coq.ZArith.BinInt <> ::Z_scope:x_'>='_x not
R100388:100388 compcert.lib.Integers <> n:769 var
R100393:100396 compcert.lib.Integers Make size def
R100398:100398 compcert.lib.Integers <> x:768 var
R100360:100363 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100374:100376 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100364:100371 compcert.lib.Integers Make unsigned def
R100373:100373 compcert.lib.Integers <> x:768 var
R100364:100371 compcert.lib.Integers Make unsigned def
R100373:100373 compcert.lib.Integers <> x:768 var
R100377:100381 Coq.ZArith.Zpower <> two_p def
R100383:100383 compcert.lib.Integers <> n:769 var
R100350:100353 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100354:100354 compcert.lib.Integers <> n:769 var
R100424:100439 compcert.lib.Zbits <> Zsize_interval_2 thm
R100424:100439 compcert.lib.Zbits <> Zsize_interval_2 thm
prf 100462:100469 Make size_and
binder 100481:100481 <> a:770
binder 100483:100483 <> b:771
R100500:100503 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100486:100489 compcert.lib.Integers Make size def
R100492:100494 compcert.lib.Integers Make and def
R100498:100498 compcert.lib.Integers <> b:771 var
R100496:100496 compcert.lib.Integers <> a:770 var
R100504:100508 Coq.ZArith.BinInt Z min def
R100520:100523 compcert.lib.Integers Make size def
R100525:100525 compcert.lib.Integers <> b:771 var
R100511:100514 compcert.lib.Integers Make size def
R100516:100516 compcert.lib.Integers <> a:770 var
R100557:100560 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100561:100565 Coq.ZArith.BinInt Z min def
R100577:100580 compcert.lib.Integers Make size def
R100568:100571 compcert.lib.Integers Make size def
R100557:100560 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100561:100565 Coq.ZArith.BinInt Z min def
R100577:100580 compcert.lib.Integers Make size def
R100568:100571 compcert.lib.Integers Make size def
R100603:100612 compcert.lib.Integers Make size_range thm
R100618:100627 compcert.lib.Integers Make size_range thm
R100603:100612 compcert.lib.Integers Make size_range thm
R100618:100627 compcert.lib.Integers Make size_range thm
R100652:100662 compcert.lib.Integers Make bits_size_3 thm
R100652:100662 compcert.lib.Integers Make bits_size_3 thm
R100689:100696 compcert.lib.Integers Make bits_and thm
R100689:100696 compcert.lib.Integers Make bits_and thm
R100689:100696 compcert.lib.Integers Make bits_and thm
R100716:100729 Coq.Bool.Bool <> andb_false_iff thm
R100716:100729 Coq.Bool.Bool <> andb_false_iff thm
R100716:100729 Coq.Bool.Bool <> andb_false_iff thm
R100746:100756 compcert.lib.Integers Make bits_size_2 thm
R100746:100756 compcert.lib.Integers Make bits_size_2 thm
R100778:100788 compcert.lib.Integers Make bits_size_2 thm
R100778:100788 compcert.lib.Integers Make bits_size_2 thm
prf 100831:100842 Make and_interval
binder 100854:100854 <> a:772
binder 100856:100856 <> b:773
R100860:100863 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100882:100884 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R100864:100871 compcert.lib.Integers Make unsigned def
R100874:100876 compcert.lib.Integers Make and def
R100880:100880 compcert.lib.Integers <> b:773 var
R100878:100878 compcert.lib.Integers <> a:772 var
R100864:100871 compcert.lib.Integers Make unsigned def
R100874:100876 compcert.lib.Integers Make and def
R100880:100880 compcert.lib.Integers <> b:773 var
R100878:100878 compcert.lib.Integers <> a:772 var
R100885:100889 Coq.ZArith.Zpower <> two_p def
R100892:100896 Coq.ZArith.BinInt Z min def
R100908:100911 compcert.lib.Integers Make size def
R100913:100913 compcert.lib.Integers <> b:773 var
R100899:100902 compcert.lib.Integers Make size def
R100904:100904 compcert.lib.Integers <> a:772 var
R100949:100963 compcert.lib.Integers Make size_interval_1 thm
R100966:100968 compcert.lib.Integers Make and def
R100949:100963 compcert.lib.Integers Make size_interval_1 thm
R100966:100968 compcert.lib.Integers Make and def
R101017:101020 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100995:100999 Coq.ZArith.Zpower <> two_p def
R101002:101005 compcert.lib.Integers Make size def
R101008:101010 compcert.lib.Integers Make and def
R101021:101025 Coq.ZArith.Zpower <> two_p def
R101028:101032 Coq.ZArith.BinInt Z min def
R101044:101047 compcert.lib.Integers Make size def
R101035:101038 compcert.lib.Integers Make size def
R101017:101020 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R100995:100999 Coq.ZArith.Zpower <> two_p def
R101002:101005 compcert.lib.Integers Make size def
R101008:101010 compcert.lib.Integers Make and def
R101021:101025 Coq.ZArith.Zpower <> two_p def
R101028:101032 Coq.ZArith.BinInt Z min def
R101044:101047 compcert.lib.Integers Make size def
R101035:101038 compcert.lib.Integers Make size def
R101063:101076 compcert.lib.Coqlib <> two_p_monotone thm
R101063:101076 compcert.lib.Coqlib <> two_p_monotone thm
R101098:101107 compcert.lib.Integers Make size_range thm
R101110:101112 compcert.lib.Integers Make and def
R101098:101107 compcert.lib.Integers Make size_range thm
R101110:101112 compcert.lib.Integers Make and def
R101134:101141 compcert.lib.Integers Make size_and thm
R101134:101141 compcert.lib.Integers Make size_and thm
prf 101165:101171 Make size_or
binder 101183:101183 <> a:774
binder 101185:101185 <> b:775
R101201:101203 Coq.Init.Logic <> ::type_scope:x_'='_x not
R101188:101191 compcert.lib.Integers Make size def
R101194:101195 compcert.lib.Integers Make or def
R101199:101199 compcert.lib.Integers <> b:775 var
R101197:101197 compcert.lib.Integers <> a:774 var
R101204:101208 Coq.ZArith.BinInt Z max def
R101220:101223 compcert.lib.Integers Make size def
R101225:101225 compcert.lib.Integers <> b:775 var
R101211:101214 compcert.lib.Integers Make size def
R101216:101216 compcert.lib.Integers <> a:774 var
R101258:101267 compcert.lib.Integers Make size_range thm
R101273:101282 compcert.lib.Integers Make size_range thm
R101258:101267 compcert.lib.Integers Make size_range thm
R101273:101282 compcert.lib.Integers Make size_range thm
R101308:101318 compcert.lib.Integers Make bits_size_1 thm
R101308:101318 compcert.lib.Integers Make bits_size_1 thm
R101343:101351 compcert.lib.Integers Make size_zero thm
R101343:101351 compcert.lib.Integers Make size_zero thm
R101343:101351 compcert.lib.Integers Make size_zero thm
R101362:101370 compcert.lib.Integers Make or_zero_l thm
R101362:101370 compcert.lib.Integers Make or_zero_l thm
R101362:101370 compcert.lib.Integers Make or_zero_l thm
R101396:101406 compcert.lib.Integers Make bits_size_1 thm
R101396:101406 compcert.lib.Integers Make bits_size_1 thm
R101431:101439 compcert.lib.Integers Make size_zero thm
R101431:101439 compcert.lib.Integers Make size_zero thm
R101431:101439 compcert.lib.Integers Make size_zero thm
R101450:101456 compcert.lib.Integers Make or_zero thm
R101450:101456 compcert.lib.Integers Make or_zero thm
R101450:101456 compcert.lib.Integers Make or_zero thm
R101525:101535 compcert.lib.Integers Make bits_size_4 thm
R101525:101535 compcert.lib.Integers Make bits_size_4 thm
R101553:101559 compcert.lib.Integers Make bits_or thm
R101553:101559 compcert.lib.Integers Make bits_or thm
R101553:101559 compcert.lib.Integers Make bits_or thm
R101553:101559 compcert.lib.Integers Make bits_or thm
R101580:101589 Coq.Bool.Bool <> orb_true_r thm
R101580:101589 Coq.Bool.Bool <> orb_true_r thm
R101617:101623 compcert.lib.Integers Make bits_or thm
R101617:101623 compcert.lib.Integers Make bits_or thm
R101617:101623 compcert.lib.Integers Make bits_or thm
R101617:101623 compcert.lib.Integers Make bits_or thm
R101635:101645 compcert.lib.Integers Make bits_size_2 thm
R101635:101645 compcert.lib.Integers Make bits_size_2 thm
R101635:101645 compcert.lib.Integers Make bits_size_2 thm
R101635:101645 compcert.lib.Integers Make bits_size_2 thm
R101635:101645 compcert.lib.Integers Make bits_size_2 thm
R101635:101645 compcert.lib.Integers Make bits_size_2 thm
R101635:101645 compcert.lib.Integers Make bits_size_2 thm
R101677:101687 compcert.lib.Integers Make bits_size_4 thm
R101677:101687 compcert.lib.Integers Make bits_size_4 thm
R101705:101711 compcert.lib.Integers Make bits_or thm
R101705:101711 compcert.lib.Integers Make bits_or thm
R101705:101711 compcert.lib.Integers Make bits_or thm
R101705:101711 compcert.lib.Integers Make bits_or thm
R101732:101741 Coq.Bool.Bool <> orb_true_l thm
R101732:101741 Coq.Bool.Bool <> orb_true_l thm
R101756:101758 compcert.lib.Coqlib <> zeq def
R101761:101764 compcert.lib.Integers Make size def
R101756:101758 compcert.lib.Coqlib <> zeq def
R101761:101764 compcert.lib.Integers Make size def
R101780:101786 compcert.lib.Integers Make testbit def
R101803:101817 Coq.ZArith.BinInt Z testbit_neg_r thm
R101803:101817 Coq.ZArith.BinInt Z testbit_neg_r thm
R101803:101817 Coq.ZArith.BinInt Z testbit_neg_r thm
R101803:101817 Coq.ZArith.BinInt Z testbit_neg_r thm
R101868:101874 compcert.lib.Integers Make bits_or thm
R101868:101874 compcert.lib.Integers Make bits_or thm
R101868:101874 compcert.lib.Integers Make bits_or thm
R101868:101874 compcert.lib.Integers Make bits_or thm
R101886:101896 compcert.lib.Integers Make bits_size_2 thm
R101886:101896 compcert.lib.Integers Make bits_size_2 thm
R101886:101896 compcert.lib.Integers Make bits_size_2 thm
R101886:101896 compcert.lib.Integers Make bits_size_2 thm
R101886:101896 compcert.lib.Integers Make bits_size_2 thm
R101886:101896 compcert.lib.Integers Make bits_size_2 thm
R101886:101896 compcert.lib.Integers Make bits_size_2 thm
prf 101936:101946 Make or_interval
binder 101958:101958 <> a:776
binder 101960:101960 <> b:777
R101964:101967 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R101985:101987 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R101968:101975 compcert.lib.Integers Make unsigned def
R101978:101979 compcert.lib.Integers Make or def
R101983:101983 compcert.lib.Integers <> b:777 var
R101981:101981 compcert.lib.Integers <> a:776 var
R101968:101975 compcert.lib.Integers Make unsigned def
R101978:101979 compcert.lib.Integers Make or def
R101983:101983 compcert.lib.Integers <> b:777 var
R101981:101981 compcert.lib.Integers <> a:776 var
R101988:101992 Coq.ZArith.Zpower <> two_p def
R101995:101999 Coq.ZArith.BinInt Z max def
R102011:102014 compcert.lib.Integers Make size def
R102016:102016 compcert.lib.Integers <> b:777 var
R102002:102005 compcert.lib.Integers Make size def
R102007:102007 compcert.lib.Integers <> a:776 var
R102049:102055 compcert.lib.Integers Make size_or thm
R102049:102055 compcert.lib.Integers Make size_or thm
R102049:102055 compcert.lib.Integers Make size_or thm
R102064:102078 compcert.lib.Integers Make size_interval_1 thm
R102064:102078 compcert.lib.Integers Make size_interval_1 thm
prf 102095:102102 Make size_xor
binder 102114:102114 <> a:778
binder 102116:102116 <> b:779
R102133:102136 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102119:102122 compcert.lib.Integers Make size def
R102125:102127 compcert.lib.Integers Make xor def
R102131:102131 compcert.lib.Integers <> b:779 var
R102129:102129 compcert.lib.Integers <> a:778 var
R102137:102141 Coq.ZArith.BinInt Z max def
R102153:102156 compcert.lib.Integers Make size def
R102158:102158 compcert.lib.Integers <> b:779 var
R102144:102147 compcert.lib.Integers Make size def
R102149:102149 compcert.lib.Integers <> a:778 var
R102190:102193 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102194:102198 Coq.ZArith.BinInt Z max def
R102210:102213 compcert.lib.Integers Make size def
R102201:102204 compcert.lib.Integers Make size def
R102190:102193 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102194:102198 Coq.ZArith.BinInt Z max def
R102210:102213 compcert.lib.Integers Make size def
R102201:102204 compcert.lib.Integers Make size def
R102236:102245 compcert.lib.Integers Make size_range thm
R102251:102260 compcert.lib.Integers Make size_range thm
R102236:102245 compcert.lib.Integers Make size_range thm
R102251:102260 compcert.lib.Integers Make size_range thm
R102285:102295 compcert.lib.Integers Make bits_size_3 thm
R102285:102295 compcert.lib.Integers Make bits_size_3 thm
R102322:102329 compcert.lib.Integers Make bits_xor thm
R102322:102329 compcert.lib.Integers Make bits_xor thm
R102322:102329 compcert.lib.Integers Make bits_xor thm
R102322:102329 compcert.lib.Integers Make bits_xor thm
R102341:102351 compcert.lib.Integers Make bits_size_2 thm
R102341:102351 compcert.lib.Integers Make bits_size_2 thm
R102341:102351 compcert.lib.Integers Make bits_size_2 thm
R102341:102351 compcert.lib.Integers Make bits_size_2 thm
R102341:102351 compcert.lib.Integers Make bits_size_2 thm
R102341:102351 compcert.lib.Integers Make bits_size_2 thm
R102341:102351 compcert.lib.Integers Make bits_size_2 thm
prf 102409:102420 Make xor_interval
binder 102432:102432 <> a:780
binder 102434:102434 <> b:781
R102438:102441 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R102460:102462 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R102442:102449 compcert.lib.Integers Make unsigned def
R102452:102454 compcert.lib.Integers Make xor def
R102458:102458 compcert.lib.Integers <> b:781 var
R102456:102456 compcert.lib.Integers <> a:780 var
R102442:102449 compcert.lib.Integers Make unsigned def
R102452:102454 compcert.lib.Integers Make xor def
R102458:102458 compcert.lib.Integers <> b:781 var
R102456:102456 compcert.lib.Integers <> a:780 var
R102463:102467 Coq.ZArith.Zpower <> two_p def
R102470:102474 Coq.ZArith.BinInt Z max def
R102486:102489 compcert.lib.Integers Make size def
R102491:102491 compcert.lib.Integers <> b:781 var
R102477:102480 compcert.lib.Integers Make size def
R102482:102482 compcert.lib.Integers <> a:780 var
R102527:102541 compcert.lib.Integers Make size_interval_1 thm
R102544:102546 compcert.lib.Integers Make xor def
R102527:102541 compcert.lib.Integers Make size_interval_1 thm
R102544:102546 compcert.lib.Integers Make xor def
R102595:102598 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102573:102577 Coq.ZArith.Zpower <> two_p def
R102580:102583 compcert.lib.Integers Make size def
R102586:102588 compcert.lib.Integers Make xor def
R102599:102603 Coq.ZArith.Zpower <> two_p def
R102606:102610 Coq.ZArith.BinInt Z max def
R102622:102625 compcert.lib.Integers Make size def
R102613:102616 compcert.lib.Integers Make size def
R102595:102598 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R102573:102577 Coq.ZArith.Zpower <> two_p def
R102580:102583 compcert.lib.Integers Make size def
R102586:102588 compcert.lib.Integers Make xor def
R102599:102603 Coq.ZArith.Zpower <> two_p def
R102606:102610 Coq.ZArith.BinInt Z max def
R102622:102625 compcert.lib.Integers Make size def
R102613:102616 compcert.lib.Integers Make size def
R102641:102654 compcert.lib.Coqlib <> two_p_monotone thm
R102641:102654 compcert.lib.Coqlib <> two_p_monotone thm
R102676:102685 compcert.lib.Integers Make size_range thm
R102688:102690 compcert.lib.Integers Make xor def
R102676:102685 compcert.lib.Integers Make size_range thm
R102688:102690 compcert.lib.Integers Make xor def
R102712:102719 compcert.lib.Integers Make size_xor thm
R102712:102719 compcert.lib.Integers Make size_xor thm
R102739:102742 compcert.lib.Integers Make <> mod
mod 102817:102827 <> Wordsize_32
def 102843:102850 Wordsize_32 wordsize
prf 102872:102888 Wordsize_32 wordsize_not_zero
R102899:102902 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R102891:102898 compcert.lib.Integers Wordsize_32 wordsize def
R102926:102933 compcert.lib.Integers Wordsize_32 wordsize def
R102957:102967 compcert.lib.Integers Wordsize_32 <> mod
R102988:103007 compcert.lib.Integers <> wordsize def
R103026:103029 compcert.lib.Integers Make <> modtype
R103031:103041 compcert.lib.Integers Wordsize_32 <> modtype
mod 103019:103021 <> Int
R103058:103077 compcert.lib.Integers <> wordsize def
syndef 103091:103093 <> int
R103098:103104 compcert.lib.Integers <> int rec
prf 103115:103142 <> int_wordsize_divides_modulus
R103147:103154 Coq.ZArith.BinInt Z divide def
R103180:103190 compcert.lib.Integers <> modulus def
R103157:103164 Coq.ZArith.BinInt Z of_nat def
R103166:103177 compcert.lib.Integers <> wordsize def
R103210:103214 Coq.ZArith.Zpower <> two_p def
R103219:103219 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R103210:103214 Coq.ZArith.Zpower <> two_p def
R103219:103219 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
mod 103251:103260 <> Wordsize_8
def 103276:103283 Wordsize_8 wordsize
prf 103304:103320 Wordsize_8 wordsize_not_zero
R103331:103334 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R103323:103330 compcert.lib.Integers Wordsize_8 wordsize def
R103358:103365 compcert.lib.Integers Wordsize_8 wordsize def
R103389:103398 compcert.lib.Integers Wordsize_8 <> mod
R103419:103437 compcert.lib.Integers <> wordsize def
R103457:103460 compcert.lib.Integers Make <> modtype
R103462:103471 compcert.lib.Integers Wordsize_8 <> modtype
mod 103449:103452 <> Byte
R103488:103506 compcert.lib.Integers <> wordsize def
syndef 103520:103523 <> byte
R103528:103535 compcert.lib.Integers <> int rec
mod 103546:103556 <> Wordsize_64
def 103572:103579 Wordsize_64 wordsize
prf 103601:103617 Wordsize_64 wordsize_not_zero
R103628:103631 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R103620:103627 compcert.lib.Integers Wordsize_64 wordsize def
R103655:103662 compcert.lib.Integers Wordsize_64 wordsize def
R103686:103696 compcert.lib.Integers Wordsize_64 <> mod
R103717:103736 compcert.lib.Integers <> wordsize def
mod 103748:103752 <> Int64
R103764:103767 compcert.lib.Integers Make <> modtype
R103769:103779 compcert.lib.Integers Wordsize_64 <> modtype
def 103848:103857 Int64 iwordsize'
R103860:103866 compcert.lib.Integers Int int rec
R103871:103878 compcert.lib.Integers Int repr def
R103880:103888 compcert.lib.Integers Int64 zwordsize def
def 103903:103906 Int64 shl'
R103912:103914 compcert.lib.Integers Int64 int rec
binder 103909:103909 <> x:782
R103921:103927 compcert.lib.Integers Int int rec
binder 103918:103918 <> y:783
R103931:103933 compcert.lib.Integers Int64 int rec
R103940:103943 compcert.lib.Integers Int64 repr def
R103946:103953 Coq.ZArith.BinInt Z shiftl def
R103969:103980 compcert.lib.Integers Int unsigned def
R103982:103982 compcert.lib.Integers <> y:783 var
R103956:103963 compcert.lib.Integers Int64 unsigned def
R103965:103965 compcert.lib.Integers <> x:782 var
def 103998:104002 Int64 shru'
R104008:104010 compcert.lib.Integers Int64 int rec
binder 104005:104005 <> x:784
R104017:104023 compcert.lib.Integers Int int rec
binder 104014:104014 <> y:785
R104027:104029 compcert.lib.Integers Int64 int rec
R104036:104039 compcert.lib.Integers Int64 repr def
R104042:104049 Coq.ZArith.BinInt Z shiftr def
R104065:104076 compcert.lib.Integers Int unsigned def
R104078:104078 compcert.lib.Integers <> y:785 var
R104052:104059 compcert.lib.Integers Int64 unsigned def
R104061:104061 compcert.lib.Integers <> x:784 var
def 104094:104097 Int64 shr'
R104103:104105 compcert.lib.Integers Int64 int rec
binder 104100:104100 <> x:786
R104112:104118 compcert.lib.Integers Int int rec
binder 104109:104109 <> y:787
R104122:104124 compcert.lib.Integers Int64 int rec
R104131:104134 compcert.lib.Integers Int64 repr def
R104137:104144 Coq.ZArith.BinInt Z shiftr def
R104158:104169 compcert.lib.Integers Int unsigned def
R104171:104171 compcert.lib.Integers <> y:787 var
R104147:104152 compcert.lib.Integers Int64 signed def
R104154:104154 compcert.lib.Integers <> x:786 var
def 104187:104190 Int64 rol'
R104196:104198 compcert.lib.Integers Int64 int rec
binder 104193:104193 <> x:788
R104205:104211 compcert.lib.Integers Int int rec
binder 104202:104202 <> y:789
R104215:104217 compcert.lib.Integers Int64 int rec
R104224:104226 compcert.lib.Integers Int64 rol def
R104231:104234 compcert.lib.Integers Int64 repr def
R104237:104248 compcert.lib.Integers Int unsigned def
R104250:104250 compcert.lib.Integers <> y:789 var
R104228:104228 compcert.lib.Integers <> x:788 var
def 104266:104270 Int64 shrx'
R104276:104278 compcert.lib.Integers Int64 int rec
binder 104273:104273 <> x:790
R104285:104291 compcert.lib.Integers Int int rec
binder 104282:104282 <> y:791
R104295:104297 compcert.lib.Integers Int64 int rec
R104304:104307 compcert.lib.Integers Int64 divs def
R104312:104315 compcert.lib.Integers Int64 shl' def
R104321:104321 compcert.lib.Integers <> y:791 var
R104317:104319 compcert.lib.Integers Int64 one def
R104309:104309 compcert.lib.Integers <> x:790 var
def 104336:104345 Int64 shr_carry'
R104351:104353 compcert.lib.Integers Int64 int rec
binder 104348:104348 <> x:792
R104360:104366 compcert.lib.Integers Int int rec
binder 104357:104357 <> y:793
R104370:104372 compcert.lib.Integers Int64 int rec
R104391:104394 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R104382:104383 compcert.lib.Integers Int64 lt def
R104387:104390 compcert.lib.Integers Int64 zero def
R104385:104385 compcert.lib.Integers <> x:792 var
R104395:104398 Coq.Init.Datatypes <> negb def
R104401:104402 compcert.lib.Integers Int64 eq def
R104435:104438 compcert.lib.Integers Int64 zero def
R104405:104407 compcert.lib.Integers Int64 and def
R104412:104414 compcert.lib.Integers Int64 sub def
R104429:104431 compcert.lib.Integers Int64 one def
R104417:104420 compcert.lib.Integers Int64 shl' def
R104426:104426 compcert.lib.Integers <> y:793 var
R104422:104424 compcert.lib.Integers Int64 one def
R104409:104409 compcert.lib.Integers <> x:792 var
R104457:104460 compcert.lib.Integers Int64 zero def
R104448:104450 compcert.lib.Integers Int64 one def
prf 104470:104478 Int64 bits_shl'
binder 104490:104490 <> x:794
binder 104492:104492 <> y:795
binder 104494:104494 <> i:796
R104517:104522 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R104543:104547 Coq.Init.Logic <> ::type_scope:x_'='_x not
R104523:104529 compcert.lib.Integers Int64 testbit def
R104542:104542 compcert.lib.Integers <> i:796 var
R104532:104535 compcert.lib.Integers Int64 shl' def
R104539:104539 compcert.lib.Integers <> y:795 var
R104537:104537 compcert.lib.Integers <> x:794 var
R104551:104553 compcert.lib.Coqlib <> zlt def
R104558:104569 compcert.lib.Integers Int unsigned def
R104571:104571 compcert.lib.Integers <> y:795 var
R104555:104555 compcert.lib.Integers <> i:796 var
R104590:104596 compcert.lib.Integers Int64 testbit def
R104602:104604 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R104601:104601 compcert.lib.Integers <> i:796 var
R104605:104616 compcert.lib.Integers Int unsigned def
R104618:104618 compcert.lib.Integers <> y:795 var
R104598:104598 compcert.lib.Integers <> x:794 var
R104579:104583 Coq.Init.Datatypes <> false constr
R104500:104503 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R104505:104507 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R104504:104504 compcert.lib.Integers <> i:796 var
R104504:104504 compcert.lib.Integers <> i:796 var
R104508:104516 compcert.lib.Integers Int64 zwordsize def
R104646:104649 compcert.lib.Integers Int64 shl' def
R104660:104671 compcert.lib.Integers Int64 testbit_repr thm
R104660:104671 compcert.lib.Integers Int64 testbit_repr thm
R104660:104671 compcert.lib.Integers Int64 testbit_repr thm
R104660:104671 compcert.lib.Integers Int64 testbit_repr thm
R104692:104694 compcert.lib.Coqlib <> zlt def
R104699:104710 compcert.lib.Integers Int unsigned def
R104692:104694 compcert.lib.Coqlib <> zlt def
R104699:104710 compcert.lib.Integers Int unsigned def
R104725:104741 Coq.ZArith.BinInt Z shiftl_spec_low thm
R104725:104741 Coq.ZArith.BinInt Z shiftl_spec_low thm
R104758:104775 Coq.ZArith.BinInt Z shiftl_spec_high thm
R104758:104775 Coq.ZArith.BinInt Z shiftl_spec_high thm
prf 104800:104809 Int64 bits_shru'
binder 104821:104821 <> x:797
binder 104823:104823 <> y:798
binder 104825:104825 <> i:799
R104848:104853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R104875:104879 Coq.Init.Logic <> ::type_scope:x_'='_x not
R104854:104860 compcert.lib.Integers Int64 testbit def
R104874:104874 compcert.lib.Integers <> i:799 var
R104863:104867 compcert.lib.Integers Int64 shru' def
R104871:104871 compcert.lib.Integers <> y:798 var
R104869:104869 compcert.lib.Integers <> x:797 var
R104883:104885 compcert.lib.Coqlib <> zlt def
R104908:104916 compcert.lib.Integers Int64 zwordsize def
R104889:104891 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R104888:104888 compcert.lib.Integers <> i:799 var
R104892:104903 compcert.lib.Integers Int unsigned def
R104905:104905 compcert.lib.Integers <> y:798 var
R104959:104963 Coq.Init.Datatypes <> false constr
R104923:104929 compcert.lib.Integers Int64 testbit def
R104935:104937 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R104934:104934 compcert.lib.Integers <> i:799 var
R104938:104949 compcert.lib.Integers Int unsigned def
R104951:104951 compcert.lib.Integers <> y:798 var
R104931:104931 compcert.lib.Integers <> x:797 var
R104831:104834 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R104836:104838 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R104835:104835 compcert.lib.Integers <> i:799 var
R104835:104835 compcert.lib.Integers <> i:799 var
R104839:104847 compcert.lib.Integers Int64 zwordsize def
R104990:104994 compcert.lib.Integers Int64 shru' def
R105005:105016 compcert.lib.Integers Int64 testbit_repr thm
R105005:105016 compcert.lib.Integers Int64 testbit_repr thm
R105005:105016 compcert.lib.Integers Int64 testbit_repr thm
R105005:105016 compcert.lib.Integers Int64 testbit_repr thm
R105035:105047 Coq.ZArith.BinInt Z shiftr_spec thm
R105035:105047 Coq.ZArith.BinInt Z shiftr_spec thm
R105035:105047 Coq.ZArith.BinInt Z shiftr_spec thm
R105035:105047 Coq.ZArith.BinInt Z shiftr_spec thm
R105056:105062 compcert.lib.Integers Int64 testbit def
R105068:105070 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105071:105082 compcert.lib.Integers Int unsigned def
R105056:105062 compcert.lib.Integers Int64 testbit def
R105068:105070 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105071:105082 compcert.lib.Integers Int unsigned def
R105101:105103 compcert.lib.Coqlib <> zlt def
R105126:105134 compcert.lib.Integers Int64 zwordsize def
R105107:105109 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105110:105121 compcert.lib.Integers Int unsigned def
R105101:105103 compcert.lib.Coqlib <> zlt def
R105126:105134 compcert.lib.Integers Int64 zwordsize def
R105107:105109 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105110:105121 compcert.lib.Integers Int unsigned def
R105154:105163 compcert.lib.Integers Int64 bits_above thm
R105154:105163 compcert.lib.Integers Int64 bits_above thm
prf 105191:105199 Int64 bits_shr'
binder 105211:105211 <> x:800
binder 105213:105213 <> y:801
binder 105215:105215 <> i:802
R105238:105243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R105264:105268 Coq.Init.Logic <> ::type_scope:x_'='_x not
R105244:105250 compcert.lib.Integers Int64 testbit def
R105263:105263 compcert.lib.Integers <> i:802 var
R105253:105256 compcert.lib.Integers Int64 shr' def
R105260:105260 compcert.lib.Integers <> y:801 var
R105258:105258 compcert.lib.Integers <> x:800 var
R105269:105275 compcert.lib.Integers Int64 testbit def
R105283:105285 compcert.lib.Coqlib <> zlt def
R105308:105316 compcert.lib.Integers Int64 zwordsize def
R105289:105291 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105288:105288 compcert.lib.Integers <> i:802 var
R105292:105303 compcert.lib.Integers Int unsigned def
R105305:105305 compcert.lib.Integers <> y:801 var
R105356:105358 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R105347:105355 compcert.lib.Integers Int64 zwordsize def
R105324:105326 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R105323:105323 compcert.lib.Integers <> i:802 var
R105327:105338 compcert.lib.Integers Int unsigned def
R105340:105340 compcert.lib.Integers <> y:801 var
R105277:105277 compcert.lib.Integers <> x:800 var
R105221:105224 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105226:105228 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R105225:105225 compcert.lib.Integers <> i:802 var
R105225:105225 compcert.lib.Integers <> i:802 var
R105229:105237 compcert.lib.Integers Int64 zwordsize def
R105387:105390 compcert.lib.Integers Int64 shr' def
R105401:105412 compcert.lib.Integers Int64 testbit_repr thm
R105401:105412 compcert.lib.Integers Int64 testbit_repr thm
R105401:105412 compcert.lib.Integers Int64 testbit_repr thm
R105401:105412 compcert.lib.Integers Int64 testbit_repr thm
R105431:105443 Coq.ZArith.BinInt Z shiftr_spec thm
R105431:105443 Coq.ZArith.BinInt Z shiftr_spec thm
R105431:105443 Coq.ZArith.BinInt Z shiftr_spec thm
R105431:105443 Coq.ZArith.BinInt Z shiftr_spec thm
R105452:105462 compcert.lib.Integers Int64 bits_signed thm
R105452:105462 compcert.lib.Integers Int64 bits_signed thm
R105479:105496 compcert.lib.Integers Int unsigned_range thm
R105479:105496 compcert.lib.Integers Int unsigned_range thm
prf 105526:105539 Int64 shl'_mul_two_p
binder 105551:105551 <> x:803
binder 105553:105553 <> y:804
R105566:105568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R105558:105561 compcert.lib.Integers Int64 shl' def
R105565:105565 compcert.lib.Integers <> y:804 var
R105563:105563 compcert.lib.Integers <> x:803 var
R105569:105571 compcert.lib.Integers Int64 mul def
R105576:105579 compcert.lib.Integers Int64 repr def
R105582:105586 Coq.ZArith.Zpower <> two_p def
R105589:105600 compcert.lib.Integers Int unsigned def
R105602:105602 compcert.lib.Integers <> y:804 var
R105573:105573 compcert.lib.Integers <> x:803 var
R105632:105635 compcert.lib.Integers Int64 shl' def
R105638:105640 compcert.lib.Integers Int64 mul def
R105649:105660 compcert.lib.Integers Int64 eqm_samerepr thm
R105649:105660 compcert.lib.Integers Int64 eqm_samerepr thm
R105673:105689 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R105673:105689 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R105673:105689 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R105673:105689 compcert.lib.Zbits <> Zshiftl_mul_two_p thm
R105698:105705 compcert.lib.Integers Int64 eqm_mult thm
R105698:105705 compcert.lib.Integers Int64 eqm_mult thm
R105714:105721 compcert.lib.Integers Int64 eqm_refl thm
R105714:105721 compcert.lib.Integers Int64 eqm_refl thm
R105730:105746 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R105730:105746 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R105763:105780 compcert.lib.Integers Int unsigned_range thm
R105763:105780 compcert.lib.Integers Int unsigned_range thm
prf 105803:105816 Int64 shl'_one_two_p
binder 105828:105828 <> y:805
R105841:105843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R105831:105834 compcert.lib.Integers Int64 shl' def
R105840:105840 compcert.lib.Integers <> y:805 var
R105836:105838 compcert.lib.Integers Int64 one def
R105844:105847 compcert.lib.Integers Int64 repr def
R105850:105854 Coq.ZArith.Zpower <> two_p def
R105857:105868 compcert.lib.Integers Int unsigned def
R105870:105870 compcert.lib.Integers <> y:805 var
R105900:105913 compcert.lib.Integers Int64 shl'_mul_two_p thm
R105900:105913 compcert.lib.Integers Int64 shl'_mul_two_p thm
R105900:105913 compcert.lib.Integers Int64 shl'_mul_two_p thm
R105924:105933 compcert.lib.Integers Int64 mul_commut thm
R105924:105933 compcert.lib.Integers Int64 mul_commut thm
R105924:105933 compcert.lib.Integers Int64 mul_commut thm
R105944:105950 compcert.lib.Integers Int64 mul_one thm
R105944:105950 compcert.lib.Integers Int64 mul_one thm
R105944:105950 compcert.lib.Integers Int64 mul_one thm
prf 105973:105980 Int64 shl'_mul
binder 105992:105992 <> x:806
binder 105994:105994 <> y:807
R106007:106009 Coq.Init.Logic <> ::type_scope:x_'='_x not
R105999:106002 compcert.lib.Integers Int64 shl' def
R106006:106006 compcert.lib.Integers <> y:807 var
R106004:106004 compcert.lib.Integers <> x:806 var
R106010:106012 compcert.lib.Integers Int64 mul def
R106017:106020 compcert.lib.Integers Int64 shl' def
R106026:106026 compcert.lib.Integers <> y:807 var
R106022:106024 compcert.lib.Integers Int64 one def
R106014:106014 compcert.lib.Integers <> x:806 var
R106055:106068 compcert.lib.Integers Int64 shl'_one_two_p thm
R106055:106068 compcert.lib.Integers Int64 shl'_one_two_p thm
R106055:106068 compcert.lib.Integers Int64 shl'_one_two_p thm
R106077:106090 compcert.lib.Integers Int64 shl'_mul_two_p thm
R106077:106090 compcert.lib.Integers Int64 shl'_mul_two_p thm
prf 106107:106115 Int64 shl'_zero
binder 106127:106127 <> x:808
R106145:106147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106130:106133 compcert.lib.Integers Int64 shl' def
R106137:106144 compcert.lib.Integers Int zero def
R106135:106135 compcert.lib.Integers <> x:808 var
R106148:106148 compcert.lib.Integers <> x:808 var
R106175:106178 compcert.lib.Integers Int64 shl' def
R106189:106205 compcert.lib.Integers Int unsigned_zero thm
R106189:106205 compcert.lib.Integers Int unsigned_zero thm
R106189:106205 compcert.lib.Integers Int unsigned_zero thm
R106215:106222 Coq.ZArith.BinInt Z shiftl def
R106233:106245 compcert.lib.Integers Int64 repr_unsigned thm
R106233:106245 compcert.lib.Integers Int64 repr_unsigned thm
prf 106262:106271 Int64 shru'_zero
binder 106284:106284 <> x:809
R106303:106305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106287:106291 compcert.lib.Integers Int64 shru' def
R106295:106302 compcert.lib.Integers Int zero def
R106293:106293 compcert.lib.Integers <> x:809 var
R106306:106306 compcert.lib.Integers <> x:809 var
R106333:106337 compcert.lib.Integers Int64 shru' def
R106348:106364 compcert.lib.Integers Int unsigned_zero thm
R106348:106364 compcert.lib.Integers Int unsigned_zero thm
R106348:106364 compcert.lib.Integers Int unsigned_zero thm
R106374:106381 Coq.ZArith.BinInt Z shiftr def
R106392:106404 compcert.lib.Integers Int64 repr_unsigned thm
R106392:106404 compcert.lib.Integers Int64 repr_unsigned thm
prf 106421:106429 Int64 shr'_zero
binder 106442:106442 <> x:810
R106460:106462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106445:106448 compcert.lib.Integers Int64 shr' def
R106452:106459 compcert.lib.Integers Int zero def
R106450:106450 compcert.lib.Integers <> x:810 var
R106463:106463 compcert.lib.Integers <> x:810 var
R106490:106493 compcert.lib.Integers Int64 shr' def
R106504:106520 compcert.lib.Integers Int unsigned_zero thm
R106504:106520 compcert.lib.Integers Int unsigned_zero thm
R106504:106520 compcert.lib.Integers Int unsigned_zero thm
R106530:106537 Coq.ZArith.BinInt Z shiftr def
R106548:106558 compcert.lib.Integers Int64 repr_signed thm
R106548:106558 compcert.lib.Integers Int64 repr_signed thm
prf 106575:106584 Int64 shrx'_zero
binder 106596:106596 <> x:811
R106615:106617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106599:106603 compcert.lib.Integers Int64 shrx' def
R106607:106614 compcert.lib.Integers Int zero def
R106605:106605 compcert.lib.Integers <> x:811 var
R106618:106618 compcert.lib.Integers <> x:811 var
R106646:106650 compcert.lib.Integers Int64 shrx' def
R106654:106661 compcert.lib.Integers Int zero def
R106670:106673 compcert.lib.Integers Int64 shrx def
R106677:106680 compcert.lib.Integers Int64 zero def
R106646:106650 compcert.lib.Integers Int64 shrx' def
R106654:106661 compcert.lib.Integers Int zero def
R106670:106673 compcert.lib.Integers Int64 shrx def
R106677:106680 compcert.lib.Integers Int64 zero def
R106690:106698 compcert.lib.Integers Int64 shrx_zero thm
R106690:106698 compcert.lib.Integers Int64 shrx_zero thm
prf 106730:106740 Int64 shrx'_carry
binder 106752:106752 <> x:812
binder 106754:106754 <> y:813
R106789:106794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R106804:106806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106795:106799 compcert.lib.Integers Int64 shrx' def
R106803:106803 compcert.lib.Integers <> y:813 var
R106801:106801 compcert.lib.Integers <> x:812 var
R106807:106809 compcert.lib.Integers Int64 add def
R106823:106832 compcert.lib.Integers Int64 shr_carry' def
R106836:106836 compcert.lib.Integers <> y:813 var
R106834:106834 compcert.lib.Integers <> x:812 var
R106812:106815 compcert.lib.Integers Int64 shr' def
R106819:106819 compcert.lib.Integers <> y:813 var
R106817:106817 compcert.lib.Integers <> x:812 var
R106782:106784 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106759:106765 compcert.lib.Integers Int ltu def
R106770:106777 compcert.lib.Integers Int repr def
R106767:106767 compcert.lib.Integers <> y:813 var
R106785:106788 Coq.Init.Datatypes <> true constr
R106863:106873 compcert.lib.Integers Int ltu_inv thm
R106863:106873 compcert.lib.Integers Int ltu_inv thm
R106889:106900 compcert.lib.Integers Int unsigned def
R106903:106910 compcert.lib.Integers Int repr def
R106889:106900 compcert.lib.Integers Int unsigned def
R106903:106910 compcert.lib.Integers Int repr def
R106944:106953 compcert.lib.Integers Int64 repr def
R106956:106967 compcert.lib.Integers Int unsigned def
R106944:106953 compcert.lib.Integers Int64 repr def
R106956:106967 compcert.lib.Integers Int unsigned def
R106998:107000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106987:106994 compcert.lib.Integers Int64 unsigned def
R107001:107012 compcert.lib.Integers Int unsigned def
R106998:107000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R106987:106994 compcert.lib.Integers Int64 unsigned def
R107001:107012 compcert.lib.Integers Int unsigned def
R107028:107040 compcert.lib.Integers Int64 unsigned_repr thm
R107028:107040 compcert.lib.Integers Int64 unsigned_repr thm
R107053:107055 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107056:107067 compcert.lib.Integers Int64 max_unsigned def
R107053:107055 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107056:107067 compcert.lib.Integers Int64 max_unsigned def
R107109:107112 compcert.lib.Integers Int64 shrx def
R107109:107112 compcert.lib.Integers Int64 shrx def
R107130:107134 compcert.lib.Integers Int64 shrx' def
R107137:107140 compcert.lib.Integers Int64 shrx def
R107143:107146 compcert.lib.Integers Int64 shl' def
R107149:107151 compcert.lib.Integers Int64 shl def
R107181:107190 compcert.lib.Integers Int64 shrx_carry thm
R107181:107190 compcert.lib.Integers Int64 shrx_carry thm
R107181:107190 compcert.lib.Integers Int64 shrx_carry thm
R107181:107190 compcert.lib.Integers Int64 shrx_carry thm
R107215:107217 compcert.lib.Integers Int64 shr def
R107220:107223 compcert.lib.Integers Int64 shr' def
R107252:107260 compcert.lib.Integers Int64 shr_carry def
R107263:107272 compcert.lib.Integers Int64 shr_carry' def
R107275:107277 compcert.lib.Integers Int64 shl def
R107280:107283 compcert.lib.Integers Int64 shl' def
R107312:107314 compcert.lib.Integers Int64 ltu def
R107323:107330 compcert.lib.Coqlib <> zlt_true thm
R107323:107330 compcert.lib.Coqlib <> zlt_true thm
prf 107366:107376 Int64 shrx'_shr_2
binder 107388:107388 <> x:814
binder 107390:107390 <> y:815
R107425:107430 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R107440:107442 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107431:107435 compcert.lib.Integers Int64 shrx' def
R107439:107439 compcert.lib.Integers <> y:815 var
R107437:107437 compcert.lib.Integers <> x:814 var
R107443:107446 compcert.lib.Integers Int64 shr' def
R107513:107513 compcert.lib.Integers <> y:815 var
R107449:107451 compcert.lib.Integers Int64 add def
R107456:107460 compcert.lib.Integers Int64 shru' def
R107486:107492 compcert.lib.Integers Int sub def
R107508:107508 compcert.lib.Integers <> y:815 var
R107495:107502 compcert.lib.Integers Int repr def
R107463:107466 compcert.lib.Integers Int64 shr' def
R107471:107478 compcert.lib.Integers Int repr def
R107468:107468 compcert.lib.Integers <> x:814 var
R107453:107453 compcert.lib.Integers <> x:814 var
R107418:107420 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107395:107401 compcert.lib.Integers Int ltu def
R107406:107413 compcert.lib.Integers Int repr def
R107403:107403 compcert.lib.Integers <> y:815 var
R107421:107424 Coq.Init.Datatypes <> true constr
R107545:107548 compcert.lib.Integers Int64 repr def
R107551:107562 compcert.lib.Integers Int unsigned def
R107545:107548 compcert.lib.Integers Int64 repr def
R107551:107562 compcert.lib.Integers Int unsigned def
R107577:107587 compcert.lib.Integers Int ltu_inv thm
R107577:107587 compcert.lib.Integers Int ltu_inv thm
R107603:107614 compcert.lib.Integers Int unsigned def
R107617:107624 compcert.lib.Integers Int repr def
R107603:107614 compcert.lib.Integers Int unsigned def
R107617:107624 compcert.lib.Integers Int repr def
R107661:107663 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107664:107675 compcert.lib.Integers Int64 max_unsigned def
R107661:107663 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107664:107675 compcert.lib.Integers Int64 max_unsigned def
R107710:107712 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107713:107728 compcert.lib.Integers Int max_unsigned def
R107710:107712 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R107713:107728 compcert.lib.Integers Int max_unsigned def
R107770:107772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107760:107767 compcert.lib.Integers Int64 unsigned def
R107773:107784 compcert.lib.Integers Int unsigned def
R107770:107772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107760:107767 compcert.lib.Integers Int64 unsigned def
R107773:107784 compcert.lib.Integers Int unsigned def
R107810:107822 compcert.lib.Integers Int64 unsigned_repr thm
R107810:107822 compcert.lib.Integers Int64 unsigned_repr thm
R107871:107873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107845:107852 compcert.lib.Integers Int64 unsigned def
R107855:107857 compcert.lib.Integers Int64 sub def
R107860:107863 compcert.lib.Integers Int64 repr def
R107874:107885 compcert.lib.Integers Int unsigned def
R107888:107894 compcert.lib.Integers Int sub def
R107897:107904 compcert.lib.Integers Int repr def
R107871:107873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R107845:107852 compcert.lib.Integers Int64 unsigned def
R107855:107857 compcert.lib.Integers Int64 sub def
R107860:107863 compcert.lib.Integers Int64 repr def
R107874:107885 compcert.lib.Integers Int unsigned def
R107888:107894 compcert.lib.Integers Int sub def
R107897:107904 compcert.lib.Integers Int repr def
R107936:107938 compcert.lib.Integers Int64 sub def
R107941:107947 compcert.lib.Integers Int sub def
R107962:107969 compcert.lib.Integers Int64 unsigned def
R107972:107975 compcert.lib.Integers Int64 repr def
R107962:107969 compcert.lib.Integers Int64 unsigned def
R107972:107975 compcert.lib.Integers Int64 repr def
R108003:108014 compcert.lib.Integers Int unsigned def
R108017:108024 compcert.lib.Integers Int repr def
R108003:108014 compcert.lib.Integers Int unsigned def
R108017:108024 compcert.lib.Integers Int repr def
R108053:108065 compcert.lib.Integers Int64 unsigned_repr thm
R108068:108079 compcert.lib.Integers Int unsigned def
R108053:108065 compcert.lib.Integers Int64 unsigned_repr thm
R108068:108079 compcert.lib.Integers Int unsigned def
R108053:108065 compcert.lib.Integers Int64 unsigned_repr thm
R108068:108079 compcert.lib.Integers Int unsigned def
R108105:108117 compcert.lib.Integers Int64 unsigned_repr thm
R108120:108136 compcert.lib.Integers Int unsigned_repr thm
R108105:108117 compcert.lib.Integers Int64 unsigned_repr thm
R108105:108117 compcert.lib.Integers Int64 unsigned_repr thm
R108120:108136 compcert.lib.Integers Int unsigned_repr thm
R108120:108136 compcert.lib.Integers Int unsigned_repr thm
R108167:108171 compcert.lib.Integers Int64 shrx' def
R108174:108177 compcert.lib.Integers Int64 shr' def
R108180:108184 compcert.lib.Integers Int64 shru' def
R108187:108190 compcert.lib.Integers Int64 shl' def
R108219:108230 compcert.lib.Integers Int unsigned def
R108233:108240 compcert.lib.Integers Int repr def
R108253:108260 compcert.lib.Integers Int64 unsigned def
R108263:108266 compcert.lib.Integers Int64 repr def
R108219:108230 compcert.lib.Integers Int unsigned def
R108233:108240 compcert.lib.Integers Int repr def
R108253:108260 compcert.lib.Integers Int64 unsigned def
R108263:108266 compcert.lib.Integers Int64 repr def
R108298:108307 compcert.lib.Integers Int64 shrx_shr_2 thm
R108298:108307 compcert.lib.Integers Int64 shrx_shr_2 thm
R108319:108321 compcert.lib.Integers Int64 ltu def
R108330:108337 compcert.lib.Coqlib <> zlt_true thm
R108330:108337 compcert.lib.Coqlib <> zlt_true thm
R108358:108360 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108348:108355 compcert.lib.Integers Int64 unsigned def
R108358:108360 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108348:108355 compcert.lib.Integers Int64 unsigned def
prf 108395:108407 Int64 int_ltu_2_inv
binder 108419:108419 <> y:816
binder 108421:108421 <> z:817
R108453:108458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R108486:108491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R108545:108550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R108561:108564 compcert.lib.Integers Int64 repr def
R108567:108578 compcert.lib.Integers Int unsigned def
R108580:108580 compcert.lib.Integers <> y:816 var
binder 108555:108556 <> y':818
R108598:108601 compcert.lib.Integers Int64 repr def
R108604:108615 compcert.lib.Integers Int unsigned def
R108617:108617 compcert.lib.Integers <> z:817 var
binder 108592:108593 <> z':819
R108656:108661 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R108642:108644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108628:108639 compcert.lib.Integers Int unsigned def
R108641:108641 compcert.lib.Integers <> y:816 var
R108645:108652 compcert.lib.Integers Int64 unsigned def
R108654:108655 compcert.lib.Integers <> y':818 var
R108690:108695 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R108676:108678 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108662:108673 compcert.lib.Integers Int unsigned def
R108675:108675 compcert.lib.Integers <> z:817 var
R108679:108686 compcert.lib.Integers Int64 unsigned def
R108688:108689 compcert.lib.Integers <> z':819 var
R108719:108724 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R108712:108714 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108696:108698 compcert.lib.Integers Int64 ltu def
R108703:108711 compcert.lib.Integers Int64 iwordsize def
R108700:108701 compcert.lib.Integers <> y':818 var
R108715:108718 Coq.Init.Datatypes <> true constr
R108748:108753 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R108741:108743 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108725:108727 compcert.lib.Integers Int64 ltu def
R108732:108740 compcert.lib.Integers Int64 iwordsize def
R108729:108730 compcert.lib.Integers <> z':819 var
R108744:108747 Coq.Init.Datatypes <> true constr
R108803:108808 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R108780:108782 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108754:108765 compcert.lib.Integers Int unsigned def
R108768:108774 compcert.lib.Integers Int add def
R108778:108778 compcert.lib.Integers <> z:817 var
R108776:108776 compcert.lib.Integers <> y:816 var
R108783:108790 compcert.lib.Integers Int64 unsigned def
R108793:108795 compcert.lib.Integers Int64 add def
R108800:108801 compcert.lib.Integers <> z':819 var
R108797:108798 compcert.lib.Integers <> y':818 var
R108818:108820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108809:108811 compcert.lib.Integers Int64 add def
R108816:108817 compcert.lib.Integers <> z':819 var
R108813:108814 compcert.lib.Integers <> y':818 var
R108821:108824 compcert.lib.Integers Int64 repr def
R108827:108838 compcert.lib.Integers Int unsigned def
R108841:108847 compcert.lib.Integers Int add def
R108851:108851 compcert.lib.Integers <> z:817 var
R108849:108849 compcert.lib.Integers <> y:816 var
R108518:108521 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R108492:108503 compcert.lib.Integers Int unsigned def
R108506:108512 compcert.lib.Integers Int add def
R108516:108516 compcert.lib.Integers <> z:817 var
R108514:108514 compcert.lib.Integers <> y:816 var
R108522:108533 compcert.lib.Integers Int unsigned def
R108535:108544 compcert.lib.Integers Int64 iwordsize' def
R108479:108481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108459:108465 compcert.lib.Integers Int ltu def
R108469:108478 compcert.lib.Integers Int64 iwordsize' def
R108467:108467 compcert.lib.Integers <> z:817 var
R108482:108485 Coq.Init.Datatypes <> true constr
R108446:108448 Coq.Init.Logic <> ::type_scope:x_'='_x not
R108426:108432 compcert.lib.Integers Int ltu def
R108436:108445 compcert.lib.Integers Int64 iwordsize' def
R108434:108434 compcert.lib.Integers <> y:816 var
R108449:108452 Coq.Init.Datatypes <> true constr
R108879:108889 compcert.lib.Integers Int ltu_inv thm
R108879:108889 compcert.lib.Integers Int ltu_inv thm
R108903:108913 compcert.lib.Integers Int ltu_inv thm
R108903:108913 compcert.lib.Integers Int ltu_inv thm
R108932:108943 compcert.lib.Integers Int unsigned def
R108945:108954 compcert.lib.Integers Int64 iwordsize' def
R108932:108943 compcert.lib.Integers Int unsigned def
R108945:108954 compcert.lib.Integers Int64 iwordsize' def
R108984:108986 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108987:108998 compcert.lib.Integers Int64 max_unsigned def
R108984:108986 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R108987:108998 compcert.lib.Integers Int64 max_unsigned def
R109030:109032 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109033:109048 compcert.lib.Integers Int max_unsigned def
R109030:109032 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R109033:109048 compcert.lib.Integers Int max_unsigned def
R109091:109093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109080:109087 compcert.lib.Integers Int64 unsigned def
R109094:109105 compcert.lib.Integers Int unsigned def
R109120:109132 compcert.lib.Integers Int64 unsigned_repr thm
R109091:109093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109080:109087 compcert.lib.Integers Int64 unsigned def
R109094:109105 compcert.lib.Integers Int unsigned def
R109120:109132 compcert.lib.Integers Int64 unsigned_repr thm
R109165:109167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109154:109161 compcert.lib.Integers Int64 unsigned def
R109168:109179 compcert.lib.Integers Int unsigned def
R109194:109206 compcert.lib.Integers Int64 unsigned_repr thm
R109165:109167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109154:109161 compcert.lib.Integers Int64 unsigned def
R109168:109179 compcert.lib.Integers Int unsigned def
R109194:109206 compcert.lib.Integers Int64 unsigned_repr thm
R109254:109256 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109228:109239 compcert.lib.Integers Int unsigned def
R109242:109248 compcert.lib.Integers Int add def
R109257:109264 compcert.lib.Integers Int64 unsigned def
R109267:109269 compcert.lib.Integers Int64 add def
R109254:109256 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109228:109239 compcert.lib.Integers Int unsigned def
R109242:109248 compcert.lib.Integers Int add def
R109257:109264 compcert.lib.Integers Int64 unsigned def
R109267:109269 compcert.lib.Integers Int64 add def
R109291:109297 compcert.lib.Integers Int add def
R109308:109324 compcert.lib.Integers Int unsigned_repr thm
R109308:109324 compcert.lib.Integers Int unsigned_repr thm
R109308:109324 compcert.lib.Integers Int unsigned_repr thm
R109345:109347 compcert.lib.Integers Int64 add def
R109358:109370 compcert.lib.Integers Int64 unsigned_repr thm
R109358:109370 compcert.lib.Integers Int64 unsigned_repr thm
R109358:109370 compcert.lib.Integers Int64 unsigned_repr thm
R109420:109427 compcert.lib.Coqlib <> zlt_true thm
R109420:109427 compcert.lib.Coqlib <> zlt_true thm
R109455:109462 compcert.lib.Coqlib <> zlt_true thm
R109455:109462 compcert.lib.Coqlib <> zlt_true thm
R109503:109515 compcert.lib.Integers Int64 repr_unsigned thm
R109503:109515 compcert.lib.Integers Int64 repr_unsigned thm
R109503:109515 compcert.lib.Integers Int64 repr_unsigned thm
prf 109538:109544 Int64 or_ror'
binder 109556:109556 <> x:820
binder 109558:109558 <> y:821
binder 109560:109560 <> z:822
R109592:109597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R109625:109630 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R109655:109660 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R109690:109692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109661:109663 compcert.lib.Integers Int64 ror def
R109668:109671 compcert.lib.Integers Int64 repr def
R109674:109685 compcert.lib.Integers Int unsigned def
R109687:109687 compcert.lib.Integers <> z:822 var
R109665:109665 compcert.lib.Integers <> x:820 var
R109693:109694 compcert.lib.Integers Int64 or def
R109708:109712 compcert.lib.Integers Int64 shru' def
R109716:109716 compcert.lib.Integers <> z:822 var
R109714:109714 compcert.lib.Integers <> x:820 var
R109697:109700 compcert.lib.Integers Int64 shl' def
R109704:109704 compcert.lib.Integers <> y:821 var
R109702:109702 compcert.lib.Integers <> x:820 var
R109642:109644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109631:109637 compcert.lib.Integers Int add def
R109641:109641 compcert.lib.Integers <> z:822 var
R109639:109639 compcert.lib.Integers <> y:821 var
R109645:109654 compcert.lib.Integers Int64 iwordsize' def
R109618:109620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109598:109604 compcert.lib.Integers Int ltu def
R109608:109617 compcert.lib.Integers Int64 iwordsize' def
R109606:109606 compcert.lib.Integers <> z:822 var
R109621:109624 Coq.Init.Datatypes <> true constr
R109585:109587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R109565:109571 compcert.lib.Integers Int ltu def
R109575:109584 compcert.lib.Integers Int64 iwordsize' def
R109573:109573 compcert.lib.Integers <> y:821 var
R109588:109591 Coq.Init.Datatypes <> true constr
R109747:109759 compcert.lib.Integers Int64 int_ltu_2_inv thm
R109747:109759 compcert.lib.Integers Int64 int_ltu_2_inv thm
R109828:109831 compcert.lib.Integers Int64 shl' def
R109844:109846 compcert.lib.Integers Int64 shl def
R109851:109854 compcert.lib.Integers Int64 repr def
R109857:109868 compcert.lib.Integers Int unsigned def
R109828:109831 compcert.lib.Integers Int64 shl' def
R109844:109846 compcert.lib.Integers Int64 shl def
R109851:109854 compcert.lib.Integers Int64 repr def
R109857:109868 compcert.lib.Integers Int unsigned def
R109887:109891 compcert.lib.Integers Int64 shru' def
R109904:109907 compcert.lib.Integers Int64 shru def
R109912:109915 compcert.lib.Integers Int64 repr def
R109918:109929 compcert.lib.Integers Int unsigned def
R109887:109891 compcert.lib.Integers Int64 shru' def
R109904:109907 compcert.lib.Integers Int64 shru def
R109912:109915 compcert.lib.Integers Int64 repr def
R109918:109929 compcert.lib.Integers Int unsigned def
R109945:109950 compcert.lib.Integers Int64 or_ror thm
R109945:109950 compcert.lib.Integers Int64 or_ror thm
R109996:109999 compcert.lib.Integers Int64 shru def
R110002:110006 compcert.lib.Integers Int64 shru' def
R110038:110040 compcert.lib.Integers Int64 shl def
R110043:110046 compcert.lib.Integers Int64 shl' def
prf 110083:110091 Int64 shl'_shl'
binder 110103:110103 <> x:823
binder 110105:110105 <> y:824
binder 110107:110107 <> z:825
R110139:110144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110172:110177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110217:110222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110240:110242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110223:110226 compcert.lib.Integers Int64 shl' def
R110239:110239 compcert.lib.Integers <> z:825 var
R110229:110232 compcert.lib.Integers Int64 shl' def
R110236:110236 compcert.lib.Integers <> y:824 var
R110234:110234 compcert.lib.Integers <> x:823 var
R110243:110246 compcert.lib.Integers Int64 shl' def
R110251:110257 compcert.lib.Integers Int add def
R110261:110261 compcert.lib.Integers <> z:825 var
R110259:110259 compcert.lib.Integers <> y:824 var
R110248:110248 compcert.lib.Integers <> x:823 var
R110210:110212 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110178:110184 compcert.lib.Integers Int ltu def
R110200:110209 compcert.lib.Integers Int64 iwordsize' def
R110187:110193 compcert.lib.Integers Int add def
R110197:110197 compcert.lib.Integers <> z:825 var
R110195:110195 compcert.lib.Integers <> y:824 var
R110213:110216 Coq.Init.Datatypes <> true constr
R110165:110167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110145:110151 compcert.lib.Integers Int ltu def
R110155:110164 compcert.lib.Integers Int64 iwordsize' def
R110153:110153 compcert.lib.Integers <> z:825 var
R110168:110171 Coq.Init.Datatypes <> true constr
R110132:110134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110112:110118 compcert.lib.Integers Int ltu def
R110122:110131 compcert.lib.Integers Int64 iwordsize' def
R110120:110120 compcert.lib.Integers <> y:824 var
R110135:110138 Coq.Init.Datatypes <> true constr
R110288:110298 compcert.lib.Integers Int ltu_inv thm
R110288:110298 compcert.lib.Integers Int ltu_inv thm
R110319:110331 compcert.lib.Integers Int64 int_ltu_2_inv thm
R110319:110331 compcert.lib.Integers Int64 int_ltu_2_inv thm
R110390:110393 compcert.lib.Integers Int64 repr def
R110396:110407 compcert.lib.Integers Int unsigned def
R110390:110393 compcert.lib.Integers Int64 repr def
R110396:110407 compcert.lib.Integers Int unsigned def
R110432:110435 compcert.lib.Integers Int64 repr def
R110438:110449 compcert.lib.Integers Int unsigned def
R110432:110435 compcert.lib.Integers Int64 repr def
R110438:110449 compcert.lib.Integers Int unsigned def
R110472:110475 compcert.lib.Integers Int64 shl' def
R110488:110490 compcert.lib.Integers Int64 shl def
R110472:110475 compcert.lib.Integers Int64 shl' def
R110488:110490 compcert.lib.Integers Int64 shl def
R110510:110513 compcert.lib.Integers Int64 shl' def
R110516:110518 compcert.lib.Integers Int64 shl def
R110535:110537 compcert.lib.Integers Int64 shl def
R110540:110542 compcert.lib.Integers Int64 shl def
R110510:110513 compcert.lib.Integers Int64 shl' def
R110516:110518 compcert.lib.Integers Int64 shl def
R110535:110537 compcert.lib.Integers Int64 shl def
R110540:110542 compcert.lib.Integers Int64 shl def
R110566:110569 compcert.lib.Integers Int64 shl' def
R110574:110580 compcert.lib.Integers Int add def
R110594:110596 compcert.lib.Integers Int64 shl def
R110601:110603 compcert.lib.Integers Int64 add def
R110566:110569 compcert.lib.Integers Int64 shl' def
R110574:110580 compcert.lib.Integers Int add def
R110594:110596 compcert.lib.Integers Int64 shl def
R110601:110603 compcert.lib.Integers Int64 add def
R110622:110628 compcert.lib.Integers Int64 shl_shl thm
R110622:110628 compcert.lib.Integers Int64 shl_shl thm
R110643:110650 compcert.lib.Coqlib <> zlt_true thm
R110643:110650 compcert.lib.Coqlib <> zlt_true thm
R110677:110684 compcert.lib.Integers Int64 unsigned def
R110686:110694 compcert.lib.Integers Int64 iwordsize def
R110702:110710 compcert.lib.Integers Int64 zwordsize def
R110677:110684 compcert.lib.Integers Int64 unsigned def
R110686:110694 compcert.lib.Integers Int64 iwordsize def
R110702:110710 compcert.lib.Integers Int64 zwordsize def
R110729:110731 compcert.lib.Integers Int64 shl def
R110734:110737 compcert.lib.Integers Int64 shl' def
R110766:110768 compcert.lib.Integers Int64 shl def
R110776:110779 compcert.lib.Integers Int64 shl' def
R110811:110813 compcert.lib.Integers Int64 shl def
R110816:110819 compcert.lib.Integers Int64 shl' def
prf 110856:110866 Int64 shru'_shru'
binder 110878:110878 <> x:826
binder 110880:110880 <> y:827
binder 110882:110882 <> z:828
R110914:110919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110947:110952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R110992:110997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R111017:111019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110998:111002 compcert.lib.Integers Int64 shru' def
R111016:111016 compcert.lib.Integers <> z:828 var
R111005:111009 compcert.lib.Integers Int64 shru' def
R111013:111013 compcert.lib.Integers <> y:827 var
R111011:111011 compcert.lib.Integers <> x:826 var
R111020:111024 compcert.lib.Integers Int64 shru' def
R111029:111035 compcert.lib.Integers Int add def
R111039:111039 compcert.lib.Integers <> z:828 var
R111037:111037 compcert.lib.Integers <> y:827 var
R111026:111026 compcert.lib.Integers <> x:826 var
R110985:110987 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110953:110959 compcert.lib.Integers Int ltu def
R110975:110984 compcert.lib.Integers Int64 iwordsize' def
R110962:110968 compcert.lib.Integers Int add def
R110972:110972 compcert.lib.Integers <> z:828 var
R110970:110970 compcert.lib.Integers <> y:827 var
R110988:110991 Coq.Init.Datatypes <> true constr
R110940:110942 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110920:110926 compcert.lib.Integers Int ltu def
R110930:110939 compcert.lib.Integers Int64 iwordsize' def
R110928:110928 compcert.lib.Integers <> z:828 var
R110943:110946 Coq.Init.Datatypes <> true constr
R110907:110909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R110887:110893 compcert.lib.Integers Int ltu def
R110897:110906 compcert.lib.Integers Int64 iwordsize' def
R110895:110895 compcert.lib.Integers <> y:827 var
R110910:110913 Coq.Init.Datatypes <> true constr
R111066:111076 compcert.lib.Integers Int ltu_inv thm
R111066:111076 compcert.lib.Integers Int ltu_inv thm
R111097:111109 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111097:111109 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111168:111171 compcert.lib.Integers Int64 repr def
R111174:111185 compcert.lib.Integers Int unsigned def
R111168:111171 compcert.lib.Integers Int64 repr def
R111174:111185 compcert.lib.Integers Int unsigned def
R111210:111213 compcert.lib.Integers Int64 repr def
R111216:111227 compcert.lib.Integers Int unsigned def
R111210:111213 compcert.lib.Integers Int64 repr def
R111216:111227 compcert.lib.Integers Int unsigned def
R111250:111254 compcert.lib.Integers Int64 shru' def
R111267:111270 compcert.lib.Integers Int64 shru def
R111250:111254 compcert.lib.Integers Int64 shru' def
R111267:111270 compcert.lib.Integers Int64 shru def
R111290:111294 compcert.lib.Integers Int64 shru' def
R111297:111300 compcert.lib.Integers Int64 shru def
R111317:111320 compcert.lib.Integers Int64 shru def
R111323:111326 compcert.lib.Integers Int64 shru def
R111290:111294 compcert.lib.Integers Int64 shru' def
R111297:111300 compcert.lib.Integers Int64 shru def
R111317:111320 compcert.lib.Integers Int64 shru def
R111323:111326 compcert.lib.Integers Int64 shru def
R111350:111354 compcert.lib.Integers Int64 shru' def
R111359:111365 compcert.lib.Integers Int add def
R111379:111382 compcert.lib.Integers Int64 shru def
R111387:111389 compcert.lib.Integers Int64 add def
R111350:111354 compcert.lib.Integers Int64 shru' def
R111359:111365 compcert.lib.Integers Int add def
R111379:111382 compcert.lib.Integers Int64 shru def
R111387:111389 compcert.lib.Integers Int64 add def
R111408:111416 compcert.lib.Integers Int64 shru_shru thm
R111408:111416 compcert.lib.Integers Int64 shru_shru thm
R111431:111438 compcert.lib.Coqlib <> zlt_true thm
R111431:111438 compcert.lib.Coqlib <> zlt_true thm
R111465:111472 compcert.lib.Integers Int64 unsigned def
R111474:111482 compcert.lib.Integers Int64 iwordsize def
R111490:111498 compcert.lib.Integers Int64 zwordsize def
R111465:111472 compcert.lib.Integers Int64 unsigned def
R111474:111482 compcert.lib.Integers Int64 iwordsize def
R111490:111498 compcert.lib.Integers Int64 zwordsize def
R111517:111520 compcert.lib.Integers Int64 shru def
R111523:111527 compcert.lib.Integers Int64 shru' def
R111556:111559 compcert.lib.Integers Int64 shru def
R111567:111571 compcert.lib.Integers Int64 shru' def
R111603:111606 compcert.lib.Integers Int64 shru def
R111609:111613 compcert.lib.Integers Int64 shru' def
prf 111650:111658 Int64 shr'_shr'
binder 111670:111670 <> x:829
binder 111672:111672 <> y:830
binder 111674:111674 <> z:831
R111706:111711 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R111739:111744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R111784:111789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R111807:111809 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111790:111793 compcert.lib.Integers Int64 shr' def
R111806:111806 compcert.lib.Integers <> z:831 var
R111796:111799 compcert.lib.Integers Int64 shr' def
R111803:111803 compcert.lib.Integers <> y:830 var
R111801:111801 compcert.lib.Integers <> x:829 var
R111810:111813 compcert.lib.Integers Int64 shr' def
R111818:111824 compcert.lib.Integers Int add def
R111828:111828 compcert.lib.Integers <> z:831 var
R111826:111826 compcert.lib.Integers <> y:830 var
R111815:111815 compcert.lib.Integers <> x:829 var
R111777:111779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111745:111751 compcert.lib.Integers Int ltu def
R111767:111776 compcert.lib.Integers Int64 iwordsize' def
R111754:111760 compcert.lib.Integers Int add def
R111764:111764 compcert.lib.Integers <> z:831 var
R111762:111762 compcert.lib.Integers <> y:830 var
R111780:111783 Coq.Init.Datatypes <> true constr
R111732:111734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111712:111718 compcert.lib.Integers Int ltu def
R111722:111731 compcert.lib.Integers Int64 iwordsize' def
R111720:111720 compcert.lib.Integers <> z:831 var
R111735:111738 Coq.Init.Datatypes <> true constr
R111699:111701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R111679:111685 compcert.lib.Integers Int ltu def
R111689:111698 compcert.lib.Integers Int64 iwordsize' def
R111687:111687 compcert.lib.Integers <> y:830 var
R111702:111705 Coq.Init.Datatypes <> true constr
R111855:111865 compcert.lib.Integers Int ltu_inv thm
R111855:111865 compcert.lib.Integers Int ltu_inv thm
R111886:111898 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111886:111898 compcert.lib.Integers Int64 int_ltu_2_inv thm
R111957:111960 compcert.lib.Integers Int64 repr def
R111963:111974 compcert.lib.Integers Int unsigned def
R111957:111960 compcert.lib.Integers Int64 repr def
R111963:111974 compcert.lib.Integers Int unsigned def
R111999:112002 compcert.lib.Integers Int64 repr def
R112005:112016 compcert.lib.Integers Int unsigned def
R111999:112002 compcert.lib.Integers Int64 repr def
R112005:112016 compcert.lib.Integers Int unsigned def
R112039:112042 compcert.lib.Integers Int64 shr' def
R112055:112057 compcert.lib.Integers Int64 shr def
R112039:112042 compcert.lib.Integers Int64 shr' def
R112055:112057 compcert.lib.Integers Int64 shr def
R112077:112080 compcert.lib.Integers Int64 shr' def
R112083:112085 compcert.lib.Integers Int64 shr def
R112102:112104 compcert.lib.Integers Int64 shr def
R112107:112109 compcert.lib.Integers Int64 shr def
R112077:112080 compcert.lib.Integers Int64 shr' def
R112083:112085 compcert.lib.Integers Int64 shr def
R112102:112104 compcert.lib.Integers Int64 shr def
R112107:112109 compcert.lib.Integers Int64 shr def
R112133:112136 compcert.lib.Integers Int64 shr' def
R112141:112147 compcert.lib.Integers Int add def
R112161:112163 compcert.lib.Integers Int64 shr def
R112168:112170 compcert.lib.Integers Int64 add def
R112133:112136 compcert.lib.Integers Int64 shr' def
R112141:112147 compcert.lib.Integers Int add def
R112161:112163 compcert.lib.Integers Int64 shr def
R112168:112170 compcert.lib.Integers Int64 add def
R112189:112195 compcert.lib.Integers Int64 shr_shr thm
R112189:112195 compcert.lib.Integers Int64 shr_shr thm
R112210:112217 compcert.lib.Coqlib <> zlt_true thm
R112210:112217 compcert.lib.Coqlib <> zlt_true thm
R112244:112251 compcert.lib.Integers Int64 unsigned def
R112253:112261 compcert.lib.Integers Int64 iwordsize def
R112269:112277 compcert.lib.Integers Int64 zwordsize def
R112244:112251 compcert.lib.Integers Int64 unsigned def
R112253:112261 compcert.lib.Integers Int64 iwordsize def
R112269:112277 compcert.lib.Integers Int64 zwordsize def
R112296:112298 compcert.lib.Integers Int64 shr def
R112301:112304 compcert.lib.Integers Int64 shr' def
R112333:112335 compcert.lib.Integers Int64 shr def
R112343:112346 compcert.lib.Integers Int64 shr' def
R112378:112380 compcert.lib.Integers Int64 shr def
R112383:112386 compcert.lib.Integers Int64 shr' def
prf 112423:112432 Int64 shru'_shl'
binder 112444:112444 <> x:832
binder 112446:112446 <> y:833
binder 112448:112448 <> z:834
R112478:112481 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R112509:112514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R112533:112537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R112515:112519 compcert.lib.Integers Int64 shru' def
R112532:112532 compcert.lib.Integers <> z:834 var
R112522:112525 compcert.lib.Integers Int64 shl' def
R112529:112529 compcert.lib.Integers <> y:833 var
R112527:112527 compcert.lib.Integers <> x:832 var
R112541:112547 compcert.lib.Integers Int ltu def
R112551:112551 compcert.lib.Integers <> y:833 var
R112549:112549 compcert.lib.Integers <> z:834 var
R112641:112648 compcert.lib.Integers Int64 zero_ext def
R112680:112684 compcert.lib.Integers Int64 shru' def
R112689:112695 compcert.lib.Integers Int sub def
R112699:112699 compcert.lib.Integers <> y:833 var
R112697:112697 compcert.lib.Integers <> z:834 var
R112686:112686 compcert.lib.Integers <> x:832 var
R112660:112662 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R112651:112659 compcert.lib.Integers Int64 zwordsize def
R112663:112674 compcert.lib.Integers Int unsigned def
R112676:112676 compcert.lib.Integers <> z:834 var
R112558:112561 compcert.lib.Integers Int64 shl' def
R112606:112612 compcert.lib.Integers Int sub def
R112616:112616 compcert.lib.Integers <> z:834 var
R112614:112614 compcert.lib.Integers <> y:833 var
R112564:112571 compcert.lib.Integers Int64 zero_ext def
R112602:112602 compcert.lib.Integers <> x:832 var
R112583:112585 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R112574:112582 compcert.lib.Integers Int64 zwordsize def
R112586:112597 compcert.lib.Integers Int unsigned def
R112599:112599 compcert.lib.Integers <> y:833 var
R112502:112504 Coq.Init.Logic <> ::type_scope:x_'='_x not
R112482:112488 compcert.lib.Integers Int ltu def
R112492:112501 compcert.lib.Integers Int64 iwordsize' def
R112490:112490 compcert.lib.Integers <> z:834 var
R112505:112508 Coq.Init.Datatypes <> true constr
R112471:112473 Coq.Init.Logic <> ::type_scope:x_'='_x not
R112451:112457 compcert.lib.Integers Int ltu def
R112461:112470 compcert.lib.Integers Int64 iwordsize' def
R112459:112459 compcert.lib.Integers <> y:833 var
R112474:112477 Coq.Init.Datatypes <> true constr
R112727:112737 compcert.lib.Integers Int ltu_inv thm
R112751:112761 compcert.lib.Integers Int ltu_inv thm
R112727:112737 compcert.lib.Integers Int ltu_inv thm
R112751:112761 compcert.lib.Integers Int ltu_inv thm
R112780:112791 compcert.lib.Integers Int unsigned def
R112793:112802 compcert.lib.Integers Int64 iwordsize' def
R112810:112818 compcert.lib.Integers Int64 zwordsize def
R112780:112791 compcert.lib.Integers Int unsigned def
R112793:112802 compcert.lib.Integers Int64 iwordsize' def
R112810:112818 compcert.lib.Integers Int64 zwordsize def
R112810:112818 compcert.lib.Integers Int64 zwordsize def
R112835:112841 compcert.lib.Integers Int ltu def
R112854:112865 compcert.lib.Integers Int unsigned def
R112886:112897 compcert.lib.Integers Int unsigned def
R112854:112865 compcert.lib.Integers Int unsigned def
R112886:112897 compcert.lib.Integers Int unsigned def
R112916:112927 compcert.lib.Integers Int64 same_bits_eq thm
R112916:112927 compcert.lib.Integers Int64 same_bits_eq thm
R112946:112955 compcert.lib.Integers Int64 bits_shru' thm
R112946:112955 compcert.lib.Integers Int64 bits_shru' thm
R112946:112955 compcert.lib.Integers Int64 bits_shru' thm
R112986:112988 compcert.lib.Coqlib <> zlt def
R112986:112988 compcert.lib.Coqlib <> zlt def
R113035:113037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113009:113020 compcert.lib.Integers Int unsigned def
R113023:113029 compcert.lib.Integers Int sub def
R113039:113041 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113035:113037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113009:113020 compcert.lib.Integers Int unsigned def
R113023:113029 compcert.lib.Integers Int sub def
R113039:113041 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113056:113072 compcert.lib.Integers Int unsigned_repr thm
R113056:113072 compcert.lib.Integers Int unsigned_repr thm
R113092:113094 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R113083:113091 compcert.lib.Integers Int64 zwordsize def
R113095:113110 compcert.lib.Integers Int max_unsigned def
R113092:113094 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R113083:113091 compcert.lib.Integers Int64 zwordsize def
R113095:113110 compcert.lib.Integers Int max_unsigned def
R113156:113164 compcert.lib.Integers Int64 bits_shl' thm
R113156:113164 compcert.lib.Integers Int64 bits_shl' thm
R113156:113164 compcert.lib.Integers Int64 bits_shl' thm
R113189:113191 compcert.lib.Coqlib <> zlt def
R113201:113209 compcert.lib.Integers Int64 zwordsize def
R113195:113197 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113189:113191 compcert.lib.Coqlib <> zlt def
R113201:113209 compcert.lib.Integers Int64 zwordsize def
R113195:113197 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113223:113231 compcert.lib.Integers Int64 bits_shl' thm
R113223:113231 compcert.lib.Integers Int64 bits_shl' thm
R113223:113231 compcert.lib.Integers Int64 bits_shl' thm
R113261:113263 compcert.lib.Coqlib <> zlt def
R113269:113271 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113286:113293 compcert.lib.Coqlib <> zlt_true thm
R113310:113318 compcert.lib.Coqlib <> zlt_false thm
R113261:113263 compcert.lib.Coqlib <> zlt def
R113269:113271 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113286:113293 compcert.lib.Coqlib <> zlt_true thm
R113286:113293 compcert.lib.Coqlib <> zlt_true thm
R113310:113318 compcert.lib.Coqlib <> zlt_false thm
R113310:113318 compcert.lib.Coqlib <> zlt_false thm
R113345:113357 compcert.lib.Integers Int64 bits_zero_ext thm
R113345:113357 compcert.lib.Integers Int64 bits_zero_ext thm
R113345:113357 compcert.lib.Integers Int64 bits_zero_ext thm
R113375:113382 compcert.lib.Coqlib <> zlt_true thm
R113375:113382 compcert.lib.Coqlib <> zlt_true thm
R113375:113382 compcert.lib.Coqlib <> zlt_true thm
R113416:113428 compcert.lib.Integers Int64 bits_zero_ext thm
R113416:113428 compcert.lib.Integers Int64 bits_zero_ext thm
R113416:113428 compcert.lib.Integers Int64 bits_zero_ext thm
R113448:113456 compcert.lib.Coqlib <> zlt_false thm
R113448:113456 compcert.lib.Coqlib <> zlt_false thm
R113448:113456 compcert.lib.Coqlib <> zlt_false thm
R113448:113456 compcert.lib.Coqlib <> zlt_false thm
R113448:113456 compcert.lib.Coqlib <> zlt_false thm
R113511:113513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113485:113496 compcert.lib.Integers Int unsigned def
R113499:113505 compcert.lib.Integers Int sub def
R113515:113517 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113511:113513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113485:113496 compcert.lib.Integers Int unsigned def
R113499:113505 compcert.lib.Integers Int sub def
R113515:113517 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R113532:113548 compcert.lib.Integers Int unsigned_repr thm
R113532:113548 compcert.lib.Integers Int unsigned_repr thm
R113568:113570 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R113559:113567 compcert.lib.Integers Int64 zwordsize def
R113571:113586 compcert.lib.Integers Int max_unsigned def
R113568:113570 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R113559:113567 compcert.lib.Integers Int64 zwordsize def
R113571:113586 compcert.lib.Integers Int max_unsigned def
R113622:113634 compcert.lib.Integers Int64 bits_zero_ext thm
R113637:113646 compcert.lib.Integers Int64 bits_shru' thm
R113622:113634 compcert.lib.Integers Int64 bits_zero_ext thm
R113622:113634 compcert.lib.Integers Int64 bits_zero_ext thm
R113637:113646 compcert.lib.Integers Int64 bits_shru' thm
R113637:113646 compcert.lib.Integers Int64 bits_shru' thm
R113671:113673 compcert.lib.Coqlib <> zlt def
R113683:113691 compcert.lib.Integers Int64 zwordsize def
R113677:113679 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113704:113711 compcert.lib.Coqlib <> zlt_true thm
R113728:113736 compcert.lib.Coqlib <> zlt_false thm
R113671:113673 compcert.lib.Coqlib <> zlt def
R113683:113691 compcert.lib.Integers Int64 zwordsize def
R113677:113679 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113704:113711 compcert.lib.Coqlib <> zlt_true thm
R113704:113711 compcert.lib.Coqlib <> zlt_true thm
R113728:113736 compcert.lib.Coqlib <> zlt_false thm
R113728:113736 compcert.lib.Coqlib <> zlt_false thm
R113763:113771 compcert.lib.Integers Int64 bits_shl' thm
R113763:113771 compcert.lib.Integers Int64 bits_shl' thm
R113763:113771 compcert.lib.Integers Int64 bits_shl' thm
R113801:113803 compcert.lib.Coqlib <> zlt def
R113807:113809 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113801:113803 compcert.lib.Coqlib <> zlt def
R113807:113809 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R113827:113835 compcert.lib.Coqlib <> zlt_false thm
R113827:113835 compcert.lib.Coqlib <> zlt_false thm
R113827:113835 compcert.lib.Coqlib <> zlt_false thm
R113861:113868 compcert.lib.Coqlib <> zlt_true thm
R113861:113868 compcert.lib.Coqlib <> zlt_true thm
R113861:113868 compcert.lib.Coqlib <> zlt_true thm
prf 113906:113914 Int64 shr'_shl'
binder 113926:113926 <> x:835
binder 113928:113928 <> y:836
binder 113930:113930 <> z:837
R113960:113963 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R113991:113996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R114014:114018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113997:114000 compcert.lib.Integers Int64 shr' def
R114013:114013 compcert.lib.Integers <> z:837 var
R114003:114006 compcert.lib.Integers Int64 shl' def
R114010:114010 compcert.lib.Integers <> y:836 var
R114008:114008 compcert.lib.Integers <> x:835 var
R114022:114028 compcert.lib.Integers Int ltu def
R114032:114032 compcert.lib.Integers <> y:836 var
R114030:114030 compcert.lib.Integers <> z:837 var
R114122:114129 compcert.lib.Integers Int64 sign_ext def
R114161:114164 compcert.lib.Integers Int64 shr' def
R114169:114175 compcert.lib.Integers Int sub def
R114179:114179 compcert.lib.Integers <> y:836 var
R114177:114177 compcert.lib.Integers <> z:837 var
R114166:114166 compcert.lib.Integers <> x:835 var
R114141:114143 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114132:114140 compcert.lib.Integers Int64 zwordsize def
R114144:114155 compcert.lib.Integers Int unsigned def
R114157:114157 compcert.lib.Integers <> z:837 var
R114039:114042 compcert.lib.Integers Int64 shl' def
R114087:114093 compcert.lib.Integers Int sub def
R114097:114097 compcert.lib.Integers <> z:837 var
R114095:114095 compcert.lib.Integers <> y:836 var
R114045:114052 compcert.lib.Integers Int64 sign_ext def
R114083:114083 compcert.lib.Integers <> x:835 var
R114064:114066 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114055:114063 compcert.lib.Integers Int64 zwordsize def
R114067:114078 compcert.lib.Integers Int unsigned def
R114080:114080 compcert.lib.Integers <> y:836 var
R113984:113986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113964:113970 compcert.lib.Integers Int ltu def
R113974:113983 compcert.lib.Integers Int64 iwordsize' def
R113972:113972 compcert.lib.Integers <> z:837 var
R113987:113990 Coq.Init.Datatypes <> true constr
R113953:113955 Coq.Init.Logic <> ::type_scope:x_'='_x not
R113933:113939 compcert.lib.Integers Int ltu def
R113943:113952 compcert.lib.Integers Int64 iwordsize' def
R113941:113941 compcert.lib.Integers <> y:836 var
R113956:113959 Coq.Init.Datatypes <> true constr
R114207:114217 compcert.lib.Integers Int ltu_inv thm
R114231:114241 compcert.lib.Integers Int ltu_inv thm
R114207:114217 compcert.lib.Integers Int ltu_inv thm
R114231:114241 compcert.lib.Integers Int ltu_inv thm
R114260:114271 compcert.lib.Integers Int unsigned def
R114273:114282 compcert.lib.Integers Int64 iwordsize' def
R114290:114298 compcert.lib.Integers Int64 zwordsize def
R114260:114271 compcert.lib.Integers Int unsigned def
R114273:114282 compcert.lib.Integers Int64 iwordsize' def
R114290:114298 compcert.lib.Integers Int64 zwordsize def
R114290:114298 compcert.lib.Integers Int64 zwordsize def
R114315:114321 compcert.lib.Integers Int ltu def
R114334:114345 compcert.lib.Integers Int unsigned def
R114366:114377 compcert.lib.Integers Int unsigned def
R114334:114345 compcert.lib.Integers Int unsigned def
R114366:114377 compcert.lib.Integers Int unsigned def
R114396:114407 compcert.lib.Integers Int64 same_bits_eq thm
R114396:114407 compcert.lib.Integers Int64 same_bits_eq thm
R114426:114434 compcert.lib.Integers Int64 bits_shr' thm
R114426:114434 compcert.lib.Integers Int64 bits_shr' thm
R114426:114434 compcert.lib.Integers Int64 bits_shr' thm
R114487:114489 compcert.lib.Coqlib <> zlt def
R114499:114507 compcert.lib.Integers Int64 zwordsize def
R114493:114495 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114463:114471 compcert.lib.Integers Int64 bits_shl' thm
R114463:114471 compcert.lib.Integers Int64 bits_shl' thm
R114487:114489 compcert.lib.Coqlib <> zlt def
R114499:114507 compcert.lib.Integers Int64 zwordsize def
R114493:114495 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114463:114471 compcert.lib.Integers Int64 bits_shl' thm
R114537:114539 compcert.lib.Coqlib <> zlt def
R114537:114539 compcert.lib.Coqlib <> zlt def
R114586:114588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R114560:114571 compcert.lib.Integers Int unsigned def
R114574:114580 compcert.lib.Integers Int sub def
R114590:114592 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114586:114588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R114560:114571 compcert.lib.Integers Int unsigned def
R114574:114580 compcert.lib.Integers Int sub def
R114590:114592 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114607:114623 compcert.lib.Integers Int unsigned_repr thm
R114607:114623 compcert.lib.Integers Int unsigned_repr thm
R114643:114645 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R114634:114642 compcert.lib.Integers Int64 zwordsize def
R114646:114661 compcert.lib.Integers Int max_unsigned def
R114643:114645 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R114634:114642 compcert.lib.Integers Int64 zwordsize def
R114646:114661 compcert.lib.Integers Int max_unsigned def
R114697:114705 compcert.lib.Integers Int64 bits_shl' thm
R114697:114705 compcert.lib.Integers Int64 bits_shl' thm
R114697:114705 compcert.lib.Integers Int64 bits_shl' thm
R114730:114732 compcert.lib.Coqlib <> zlt def
R114738:114740 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114730:114732 compcert.lib.Coqlib <> zlt def
R114738:114740 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R114754:114761 compcert.lib.Coqlib <> zlt_true thm
R114754:114761 compcert.lib.Coqlib <> zlt_true thm
R114774:114776 compcert.lib.Coqlib <> zlt def
R114786:114794 compcert.lib.Integers Int64 zwordsize def
R114780:114782 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114774:114776 compcert.lib.Coqlib <> zlt def
R114786:114794 compcert.lib.Integers Int64 zwordsize def
R114780:114782 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114837:114839 compcert.lib.Coqlib <> zlt def
R114849:114857 compcert.lib.Integers Int64 zwordsize def
R114843:114845 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114813:114821 compcert.lib.Coqlib <> zlt_false thm
R114813:114821 compcert.lib.Coqlib <> zlt_false thm
R114837:114839 compcert.lib.Coqlib <> zlt def
R114849:114857 compcert.lib.Integers Int64 zwordsize def
R114843:114845 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114813:114821 compcert.lib.Coqlib <> zlt_false thm
R114877:114889 compcert.lib.Integers Int64 bits_sign_ext thm
R114877:114889 compcert.lib.Integers Int64 bits_sign_ext thm
R114877:114889 compcert.lib.Integers Int64 bits_sign_ext thm
R114921:114923 compcert.lib.Coqlib <> zlt def
R114933:114941 compcert.lib.Integers Int64 zwordsize def
R114927:114929 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114921:114923 compcert.lib.Coqlib <> zlt def
R114933:114941 compcert.lib.Integers Int64 zwordsize def
R114927:114929 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R114955:114962 compcert.lib.Coqlib <> zlt_true thm
R114955:114962 compcert.lib.Coqlib <> zlt_true thm
R114955:114962 compcert.lib.Coqlib <> zlt_true thm
R114987:114995 compcert.lib.Coqlib <> zlt_false thm
R114987:114995 compcert.lib.Coqlib <> zlt_false thm
R114987:114995 compcert.lib.Coqlib <> zlt_false thm
R115049:115051 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115023:115034 compcert.lib.Integers Int unsigned def
R115037:115043 compcert.lib.Integers Int sub def
R115053:115055 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115049:115051 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115023:115034 compcert.lib.Integers Int unsigned def
R115037:115043 compcert.lib.Integers Int sub def
R115053:115055 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115070:115086 compcert.lib.Integers Int unsigned_repr thm
R115070:115086 compcert.lib.Integers Int unsigned_repr thm
R115106:115108 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R115097:115105 compcert.lib.Integers Int64 zwordsize def
R115109:115124 compcert.lib.Integers Int max_unsigned def
R115106:115108 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R115097:115105 compcert.lib.Integers Int64 zwordsize def
R115109:115124 compcert.lib.Integers Int max_unsigned def
R115160:115172 compcert.lib.Integers Int64 bits_sign_ext thm
R115160:115172 compcert.lib.Integers Int64 bits_sign_ext thm
R115160:115172 compcert.lib.Integers Int64 bits_sign_ext thm
R115216:115218 compcert.lib.Coqlib <> zlt def
R115232:115234 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115223:115231 compcert.lib.Integers Int64 zwordsize def
R115192:115200 compcert.lib.Integers Int64 bits_shr' thm
R115192:115200 compcert.lib.Integers Int64 bits_shr' thm
R115216:115218 compcert.lib.Coqlib <> zlt def
R115232:115234 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115223:115231 compcert.lib.Integers Int64 zwordsize def
R115192:115200 compcert.lib.Integers Int64 bits_shr' thm
R115291:115293 compcert.lib.Coqlib <> zlt def
R115303:115311 compcert.lib.Integers Int64 zwordsize def
R115297:115299 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115267:115275 compcert.lib.Coqlib <> zlt_false thm
R115267:115275 compcert.lib.Coqlib <> zlt_false thm
R115291:115293 compcert.lib.Coqlib <> zlt def
R115303:115311 compcert.lib.Integers Int64 zwordsize def
R115297:115299 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115267:115275 compcert.lib.Coqlib <> zlt_false thm
R115342:115344 compcert.lib.Coqlib <> zlt def
R115358:115360 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115349:115357 compcert.lib.Integers Int64 zwordsize def
R115342:115344 compcert.lib.Coqlib <> zlt def
R115358:115360 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115349:115357 compcert.lib.Integers Int64 zwordsize def
R115378:115385 compcert.lib.Coqlib <> zlt_true thm
R115378:115385 compcert.lib.Coqlib <> zlt_true thm
R115378:115385 compcert.lib.Coqlib <> zlt_true thm
R115378:115385 compcert.lib.Coqlib <> zlt_true thm
R115378:115385 compcert.lib.Coqlib <> zlt_true thm
R115412:115420 compcert.lib.Coqlib <> zlt_false thm
R115412:115420 compcert.lib.Coqlib <> zlt_false thm
R115412:115420 compcert.lib.Coqlib <> zlt_false thm
R115412:115420 compcert.lib.Coqlib <> zlt_false thm
R115438:115445 compcert.lib.Coqlib <> zlt_true thm
R115438:115445 compcert.lib.Coqlib <> zlt_true thm
R115438:115445 compcert.lib.Coqlib <> zlt_true thm
prf 115472:115484 Int64 shl'_zero_ext
binder 115496:115496 <> n:838
binder 115498:115498 <> m:839
binder 115500:115500 <> x:840
R115509:115514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R115536:115538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115515:115518 compcert.lib.Integers Int64 shl' def
R115535:115535 compcert.lib.Integers <> m:839 var
R115521:115528 compcert.lib.Integers Int64 zero_ext def
R115532:115532 compcert.lib.Integers <> x:840 var
R115530:115530 compcert.lib.Integers <> n:838 var
R115539:115546 compcert.lib.Integers Int64 zero_ext def
R115570:115573 compcert.lib.Integers Int64 shl' def
R115577:115577 compcert.lib.Integers <> m:839 var
R115575:115575 compcert.lib.Integers <> x:840 var
R115550:115552 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115549:115549 compcert.lib.Integers <> n:838 var
R115553:115564 compcert.lib.Integers Int unsigned def
R115566:115566 compcert.lib.Integers <> m:839 var
R115504:115507 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R115508:115508 compcert.lib.Integers <> n:838 var
R115604:115615 compcert.lib.Integers Int64 same_bits_eq thm
R115604:115615 compcert.lib.Integers Int64 same_bits_eq thm
R115636:115648 compcert.lib.Integers Int64 bits_zero_ext thm
R115653:115661 compcert.lib.Integers Int64 bits_shl' thm
R115636:115648 compcert.lib.Integers Int64 bits_zero_ext thm
R115636:115648 compcert.lib.Integers Int64 bits_zero_ext thm
R115653:115661 compcert.lib.Integers Int64 bits_shl' thm
R115653:115661 compcert.lib.Integers Int64 bits_shl' thm
R115653:115661 compcert.lib.Integers Int64 bits_shl' thm
R115653:115661 compcert.lib.Integers Int64 bits_shl' thm
R115683:115685 compcert.lib.Coqlib <> zlt def
R115690:115701 compcert.lib.Integers Int unsigned def
R115683:115685 compcert.lib.Coqlib <> zlt def
R115690:115701 compcert.lib.Integers Int unsigned def
R115718:115725 compcert.lib.Coqlib <> zlt_true thm
R115718:115725 compcert.lib.Coqlib <> zlt_true thm
R115718:115725 compcert.lib.Coqlib <> zlt_true thm
R115751:115763 compcert.lib.Integers Int64 bits_zero_ext thm
R115751:115763 compcert.lib.Integers Int64 bits_zero_ext thm
R115751:115763 compcert.lib.Integers Int64 bits_zero_ext thm
R115785:115787 compcert.lib.Coqlib <> zlt def
R115791:115793 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115794:115805 compcert.lib.Integers Int unsigned def
R115823:115830 compcert.lib.Coqlib <> zlt_true thm
R115847:115855 compcert.lib.Coqlib <> zlt_false thm
R115785:115787 compcert.lib.Coqlib <> zlt def
R115791:115793 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R115794:115805 compcert.lib.Integers Int unsigned def
R115823:115830 compcert.lib.Coqlib <> zlt_true thm
R115823:115830 compcert.lib.Coqlib <> zlt_true thm
R115847:115855 compcert.lib.Coqlib <> zlt_false thm
R115847:115855 compcert.lib.Coqlib <> zlt_false thm
prf 115884:115896 Int64 shl'_sign_ext
binder 115908:115908 <> n:841
binder 115910:115910 <> m:842
binder 115912:115912 <> x:843
R115920:115925 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R115947:115949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R115926:115929 compcert.lib.Integers Int64 shl' def
R115946:115946 compcert.lib.Integers <> m:842 var
R115932:115939 compcert.lib.Integers Int64 sign_ext def
R115943:115943 compcert.lib.Integers <> x:843 var
R115941:115941 compcert.lib.Integers <> n:841 var
R115950:115957 compcert.lib.Integers Int64 sign_ext def
R115981:115984 compcert.lib.Integers Int64 shl' def
R115988:115988 compcert.lib.Integers <> m:842 var
R115986:115986 compcert.lib.Integers <> x:843 var
R115961:115963 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R115960:115960 compcert.lib.Integers <> n:841 var
R115964:115975 compcert.lib.Integers Int unsigned def
R115977:115977 compcert.lib.Integers <> m:842 var
R115916:115918 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R115919:115919 compcert.lib.Integers <> n:841 var
R116021:116038 compcert.lib.Integers Int unsigned_range thm
R116021:116038 compcert.lib.Integers Int unsigned_range thm
R116060:116071 compcert.lib.Integers Int64 same_bits_eq thm
R116060:116071 compcert.lib.Integers Int64 same_bits_eq thm
R116092:116104 compcert.lib.Integers Int64 bits_sign_ext thm
R116109:116117 compcert.lib.Integers Int64 bits_shl' thm
R116092:116104 compcert.lib.Integers Int64 bits_sign_ext thm
R116092:116104 compcert.lib.Integers Int64 bits_sign_ext thm
R116109:116117 compcert.lib.Integers Int64 bits_shl' thm
R116109:116117 compcert.lib.Integers Int64 bits_shl' thm
R116109:116117 compcert.lib.Integers Int64 bits_shl' thm
R116139:116141 compcert.lib.Coqlib <> zlt def
R116147:116149 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116150:116161 compcert.lib.Integers Int unsigned def
R116139:116141 compcert.lib.Coqlib <> zlt def
R116147:116149 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116150:116161 compcert.lib.Integers Int unsigned def
R116178:116186 compcert.lib.Integers Int64 bits_shl' thm
R116178:116186 compcert.lib.Integers Int64 bits_shl' thm
R116178:116186 compcert.lib.Integers Int64 bits_shl' thm
R116207:116209 compcert.lib.Coqlib <> zlt def
R116214:116225 compcert.lib.Integers Int unsigned def
R116207:116209 compcert.lib.Coqlib <> zlt def
R116214:116225 compcert.lib.Integers Int unsigned def
R116248:116260 compcert.lib.Integers Int64 bits_sign_ext thm
R116248:116260 compcert.lib.Integers Int64 bits_sign_ext thm
R116248:116260 compcert.lib.Integers Int64 bits_sign_ext thm
R116285:116292 compcert.lib.Coqlib <> zlt_true thm
R116285:116292 compcert.lib.Coqlib <> zlt_true thm
R116310:116318 compcert.lib.Coqlib <> zlt_false thm
R116310:116318 compcert.lib.Coqlib <> zlt_false thm
R116310:116318 compcert.lib.Coqlib <> zlt_false thm
R116336:116344 compcert.lib.Integers Int64 bits_shl' thm
R116336:116344 compcert.lib.Integers Int64 bits_shl' thm
R116336:116344 compcert.lib.Integers Int64 bits_shl' thm
R116362:116370 compcert.lib.Coqlib <> zlt_false thm
R116362:116370 compcert.lib.Coqlib <> zlt_false thm
R116362:116370 compcert.lib.Coqlib <> zlt_false thm
R116390:116402 compcert.lib.Integers Int64 bits_sign_ext thm
R116390:116402 compcert.lib.Integers Int64 bits_sign_ext thm
R116390:116402 compcert.lib.Integers Int64 bits_sign_ext thm
R116429:116437 compcert.lib.Coqlib <> zlt_false thm
R116429:116437 compcert.lib.Coqlib <> zlt_false thm
R116429:116437 compcert.lib.Coqlib <> zlt_false thm
prf 116464:116477 Int64 shru'_zero_ext
binder 116489:116489 <> n:844
binder 116491:116491 <> m:845
binder 116493:116493 <> x:846
R116502:116507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R116549:116551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R116508:116512 compcert.lib.Integers Int64 shru' def
R116548:116548 compcert.lib.Integers <> m:845 var
R116515:116522 compcert.lib.Integers Int64 zero_ext def
R116545:116545 compcert.lib.Integers <> x:846 var
R116526:116528 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116525:116525 compcert.lib.Integers <> n:844 var
R116529:116540 compcert.lib.Integers Int unsigned def
R116542:116542 compcert.lib.Integers <> m:845 var
R116552:116559 compcert.lib.Integers Int64 zero_ext def
R116564:116568 compcert.lib.Integers Int64 shru' def
R116572:116572 compcert.lib.Integers <> m:845 var
R116570:116570 compcert.lib.Integers <> x:846 var
R116561:116561 compcert.lib.Integers <> n:844 var
R116497:116500 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R116501:116501 compcert.lib.Integers <> n:844 var
R116605:116622 compcert.lib.Integers Int unsigned_range thm
R116605:116622 compcert.lib.Integers Int unsigned_range thm
R116665:116674 compcert.lib.Integers Int64 bits_shru' thm
R116677:116689 compcert.lib.Integers Int64 bits_zero_ext thm
R116692:116701 compcert.lib.Integers Int64 bits_shru' thm
R116665:116674 compcert.lib.Integers Int64 bits_shru' thm
R116665:116674 compcert.lib.Integers Int64 bits_shru' thm
R116677:116689 compcert.lib.Integers Int64 bits_zero_ext thm
R116677:116689 compcert.lib.Integers Int64 bits_zero_ext thm
R116692:116701 compcert.lib.Integers Int64 bits_shru' thm
R116692:116701 compcert.lib.Integers Int64 bits_shru' thm
R116723:116725 compcert.lib.Coqlib <> zlt def
R116748:116756 compcert.lib.Integers Int64 zwordsize def
R116729:116731 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116732:116743 compcert.lib.Integers Int unsigned def
R116723:116725 compcert.lib.Coqlib <> zlt def
R116748:116756 compcert.lib.Integers Int64 zwordsize def
R116729:116731 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R116732:116743 compcert.lib.Integers Int unsigned def
R116772:116774 compcert.lib.Coqlib <> zlt def
R116791:116798 compcert.lib.Coqlib <> zlt_true thm
R116815:116823 compcert.lib.Coqlib <> zlt_false thm
R116772:116774 compcert.lib.Coqlib <> zlt def
R116791:116798 compcert.lib.Coqlib <> zlt_true thm
R116791:116798 compcert.lib.Coqlib <> zlt_true thm
R116815:116823 compcert.lib.Coqlib <> zlt_false thm
R116815:116823 compcert.lib.Coqlib <> zlt_false thm
R116852:116854 compcert.lib.Coqlib <> zlt def
R116852:116854 compcert.lib.Coqlib <> zlt def
prf 116880:116895 Int64 shru'_zero_ext_0
binder 116907:116907 <> n:847
binder 116909:116909 <> m:848
binder 116911:116911 <> x:849
R116933:116938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R116961:116963 Coq.Init.Logic <> ::type_scope:x_'='_x not
R116939:116943 compcert.lib.Integers Int64 shru' def
R116960:116960 compcert.lib.Integers <> m:848 var
R116946:116953 compcert.lib.Integers Int64 zero_ext def
R116957:116957 compcert.lib.Integers <> x:849 var
R116955:116955 compcert.lib.Integers <> n:847 var
R116964:116967 compcert.lib.Integers Int64 zero def
R116915:116918 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R116914:116914 compcert.lib.Integers <> n:847 var
R116919:116930 compcert.lib.Integers Int unsigned def
R116932:116932 compcert.lib.Integers <> m:848 var
R116999:117016 compcert.lib.Integers Int unsigned_range thm
R116999:117016 compcert.lib.Integers Int unsigned_range thm
R117051:117060 compcert.lib.Integers Int64 bits_shru' thm
R117063:117075 compcert.lib.Integers Int64 bits_zero_ext thm
R117051:117060 compcert.lib.Integers Int64 bits_shru' thm
R117051:117060 compcert.lib.Integers Int64 bits_shru' thm
R117063:117075 compcert.lib.Integers Int64 bits_zero_ext thm
R117063:117075 compcert.lib.Integers Int64 bits_zero_ext thm
R117097:117099 compcert.lib.Coqlib <> zlt def
R117122:117130 compcert.lib.Integers Int64 zwordsize def
R117103:117105 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117106:117117 compcert.lib.Integers Int unsigned def
R117097:117099 compcert.lib.Coqlib <> zlt def
R117122:117130 compcert.lib.Integers Int64 zwordsize def
R117103:117105 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117106:117117 compcert.lib.Integers Int unsigned def
R117148:117156 compcert.lib.Coqlib <> zlt_false thm
R117148:117156 compcert.lib.Coqlib <> zlt_false thm
prf 117176:117188 Int64 shr'_sign_ext
binder 117200:117200 <> n:850
binder 117202:117202 <> m:851
binder 117204:117204 <> x:852
R117212:117215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R117246:117251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R117292:117294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R117252:117255 compcert.lib.Integers Int64 shr' def
R117291:117291 compcert.lib.Integers <> m:851 var
R117258:117265 compcert.lib.Integers Int64 sign_ext def
R117288:117288 compcert.lib.Integers <> x:852 var
R117269:117271 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117268:117268 compcert.lib.Integers <> n:850 var
R117272:117283 compcert.lib.Integers Int unsigned def
R117285:117285 compcert.lib.Integers <> m:851 var
R117295:117302 compcert.lib.Integers Int64 sign_ext def
R117307:117310 compcert.lib.Integers Int64 shr' def
R117314:117314 compcert.lib.Integers <> m:851 var
R117312:117312 compcert.lib.Integers <> x:852 var
R117304:117304 compcert.lib.Integers <> n:850 var
R117234:117236 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R117217:117219 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117216:117216 compcert.lib.Integers <> n:850 var
R117220:117231 compcert.lib.Integers Int unsigned def
R117233:117233 compcert.lib.Integers <> m:851 var
R117237:117245 compcert.lib.Integers Int64 zwordsize def
R117208:117210 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R117211:117211 compcert.lib.Integers <> n:850 var
R117347:117364 compcert.lib.Integers Int unsigned_range thm
R117347:117364 compcert.lib.Integers Int unsigned_range thm
R117386:117397 compcert.lib.Integers Int64 same_bits_eq thm
R117386:117397 compcert.lib.Integers Int64 same_bits_eq thm
R117418:117430 compcert.lib.Integers Int64 bits_sign_ext thm
R117433:117441 compcert.lib.Integers Int64 bits_shr' thm
R117418:117430 compcert.lib.Integers Int64 bits_sign_ext thm
R117418:117430 compcert.lib.Integers Int64 bits_sign_ext thm
R117433:117441 compcert.lib.Integers Int64 bits_shr' thm
R117433:117441 compcert.lib.Integers Int64 bits_shr' thm
R117462:117474 compcert.lib.Integers Int64 bits_sign_ext thm
R117477:117485 compcert.lib.Integers Int64 bits_shr' thm
R117462:117474 compcert.lib.Integers Int64 bits_sign_ext thm
R117462:117474 compcert.lib.Integers Int64 bits_sign_ext thm
R117462:117474 compcert.lib.Integers Int64 bits_sign_ext thm
R117477:117485 compcert.lib.Integers Int64 bits_shr' thm
R117477:117485 compcert.lib.Integers Int64 bits_shr' thm
R117477:117485 compcert.lib.Integers Int64 bits_shr' thm
R117511:117513 compcert.lib.Coqlib <> zlt def
R117522:117524 compcert.lib.Coqlib <> zlt def
R117547:117555 compcert.lib.Integers Int64 zwordsize def
R117528:117530 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117531:117542 compcert.lib.Integers Int unsigned def
R117511:117513 compcert.lib.Coqlib <> zlt def
R117522:117524 compcert.lib.Coqlib <> zlt def
R117547:117555 compcert.lib.Integers Int64 zwordsize def
R117528:117530 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117531:117542 compcert.lib.Integers Int unsigned def
R117522:117524 compcert.lib.Coqlib <> zlt def
R117547:117555 compcert.lib.Integers Int64 zwordsize def
R117528:117530 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117531:117542 compcert.lib.Integers Int unsigned def
R117567:117574 compcert.lib.Coqlib <> zlt_true thm
R117567:117574 compcert.lib.Coqlib <> zlt_true thm
R117590:117597 compcert.lib.Coqlib <> zlt_true thm
R117590:117597 compcert.lib.Coqlib <> zlt_true thm
R117615:117623 compcert.lib.Coqlib <> zlt_false thm
R117615:117623 compcert.lib.Coqlib <> zlt_false thm
R117615:117623 compcert.lib.Coqlib <> zlt_false thm
R117641:117648 compcert.lib.Coqlib <> zlt_true thm
R117641:117648 compcert.lib.Coqlib <> zlt_true thm
R117641:117648 compcert.lib.Coqlib <> zlt_true thm
R117673:117681 compcert.lib.Coqlib <> zlt_false thm
R117673:117681 compcert.lib.Coqlib <> zlt_false thm
R117673:117681 compcert.lib.Coqlib <> zlt_false thm
R117699:117706 compcert.lib.Coqlib <> zlt_true thm
R117699:117706 compcert.lib.Coqlib <> zlt_true thm
R117699:117706 compcert.lib.Coqlib <> zlt_true thm
R117733:117735 compcert.lib.Coqlib <> zlt def
R117733:117735 compcert.lib.Coqlib <> zlt def
R117760:117762 compcert.lib.Coqlib <> zlt def
R117785:117793 compcert.lib.Integers Int64 zwordsize def
R117766:117768 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117769:117780 compcert.lib.Integers Int unsigned def
R117760:117762 compcert.lib.Coqlib <> zlt def
R117785:117793 compcert.lib.Integers Int64 zwordsize def
R117766:117768 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R117769:117780 compcert.lib.Integers Int unsigned def
prf 117814:117831 Int64 zero_ext_shru'_min
binder 117843:117843 <> s:853
binder 117845:117845 <> x:854
binder 117847:117847 <> n:855
R117877:117882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R117905:117907 Coq.Init.Logic <> ::type_scope:x_'='_x not
R117883:117890 compcert.lib.Integers Int64 zero_ext def
R117895:117899 compcert.lib.Integers Int64 shru' def
R117903:117903 compcert.lib.Integers <> n:855 var
R117901:117901 compcert.lib.Integers <> x:854 var
R117892:117892 compcert.lib.Integers <> s:853 var
R117908:117915 compcert.lib.Integers Int64 zero_ext def
R117957:117961 compcert.lib.Integers Int64 shru' def
R117965:117965 compcert.lib.Integers <> n:855 var
R117963:117963 compcert.lib.Integers <> x:854 var
R117918:117922 Coq.ZArith.BinInt Z min def
R117936:117938 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R117927:117935 compcert.lib.Integers Int64 zwordsize def
R117939:117950 compcert.lib.Integers Int unsigned def
R117952:117952 compcert.lib.Integers <> n:855 var
R117924:117924 compcert.lib.Integers <> s:853 var
R117870:117872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R117850:117856 compcert.lib.Integers Int ltu def
R117860:117869 compcert.lib.Integers Int64 iwordsize' def
R117858:117858 compcert.lib.Integers <> n:855 var
R117873:117876 Coq.Init.Datatypes <> true constr
R117992:118002 compcert.lib.Integers Int ltu_inv thm
R117992:118002 compcert.lib.Integers Int ltu_inv thm
R118018:118029 compcert.lib.Integers Int unsigned def
R118031:118040 compcert.lib.Integers Int64 iwordsize' def
R118048:118056 compcert.lib.Integers Int64 zwordsize def
R118018:118029 compcert.lib.Integers Int unsigned def
R118031:118040 compcert.lib.Integers Int64 iwordsize' def
R118048:118056 compcert.lib.Integers Int64 zwordsize def
R118072:118088 Coq.ZArith.BinInt Z min_case_strong thm
R118072:118088 Coq.ZArith.BinInt Z min_case_strong thm
R118137:118146 compcert.lib.Integers Int64 bits_shru' thm
R118137:118146 compcert.lib.Integers Int64 bits_shru' thm
R118137:118146 compcert.lib.Integers Int64 bits_shru' thm
R118137:118146 compcert.lib.Integers Int64 bits_shru' thm
R118169:118171 compcert.lib.Coqlib <> zlt def
R118185:118187 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118176:118184 compcert.lib.Integers Int64 zwordsize def
R118188:118199 compcert.lib.Integers Int unsigned def
R118169:118171 compcert.lib.Coqlib <> zlt def
R118185:118187 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118176:118184 compcert.lib.Integers Int64 zwordsize def
R118188:118199 compcert.lib.Integers Int unsigned def
R118216:118223 compcert.lib.Coqlib <> zlt_true thm
R118216:118223 compcert.lib.Coqlib <> zlt_true thm
R118216:118223 compcert.lib.Coqlib <> zlt_true thm
R118251:118253 compcert.lib.Coqlib <> zlt def
R118251:118253 compcert.lib.Coqlib <> zlt def
R118275:118283 compcert.lib.Coqlib <> zlt_false thm
R118275:118283 compcert.lib.Coqlib <> zlt_false thm
R118275:118283 compcert.lib.Coqlib <> zlt_false thm
prf 118311:118327 Int64 sign_ext_shr'_min
binder 118339:118339 <> s:856
binder 118341:118341 <> x:857
binder 118343:118343 <> n:858
R118373:118378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R118400:118402 Coq.Init.Logic <> ::type_scope:x_'='_x not
R118379:118386 compcert.lib.Integers Int64 sign_ext def
R118391:118394 compcert.lib.Integers Int64 shr' def
R118398:118398 compcert.lib.Integers <> n:858 var
R118396:118396 compcert.lib.Integers <> x:857 var
R118388:118388 compcert.lib.Integers <> s:856 var
R118403:118410 compcert.lib.Integers Int64 sign_ext def
R118452:118455 compcert.lib.Integers Int64 shr' def
R118459:118459 compcert.lib.Integers <> n:858 var
R118457:118457 compcert.lib.Integers <> x:857 var
R118413:118417 Coq.ZArith.BinInt Z min def
R118431:118433 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118422:118430 compcert.lib.Integers Int64 zwordsize def
R118434:118445 compcert.lib.Integers Int unsigned def
R118447:118447 compcert.lib.Integers <> n:858 var
R118419:118419 compcert.lib.Integers <> s:856 var
R118366:118368 Coq.Init.Logic <> ::type_scope:x_'='_x not
R118346:118352 compcert.lib.Integers Int ltu def
R118356:118365 compcert.lib.Integers Int64 iwordsize' def
R118354:118354 compcert.lib.Integers <> n:858 var
R118369:118372 Coq.Init.Datatypes <> true constr
R118486:118496 compcert.lib.Integers Int ltu_inv thm
R118486:118496 compcert.lib.Integers Int ltu_inv thm
R118512:118523 compcert.lib.Integers Int unsigned def
R118525:118534 compcert.lib.Integers Int64 iwordsize' def
R118542:118550 compcert.lib.Integers Int64 zwordsize def
R118512:118523 compcert.lib.Integers Int unsigned def
R118525:118534 compcert.lib.Integers Int64 iwordsize' def
R118542:118550 compcert.lib.Integers Int64 zwordsize def
R118568:118577 Coq.ZArith.BinInt Z min_comm thm
R118568:118577 Coq.ZArith.BinInt Z min_comm thm
R118568:118577 Coq.ZArith.BinInt Z min_comm thm
R118593:118602 Coq.ZArith.BinInt Z min_spec thm
R118614:118616 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118605:118613 compcert.lib.Integers Int64 zwordsize def
R118617:118628 compcert.lib.Integers Int unsigned def
R118593:118602 Coq.ZArith.BinInt Z min_spec thm
R118614:118616 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118605:118613 compcert.lib.Integers Int64 zwordsize def
R118617:118628 compcert.lib.Integers Int unsigned def
R118681:118692 compcert.lib.Integers Int64 same_bits_eq thm
R118681:118692 compcert.lib.Integers Int64 same_bits_eq thm
R118713:118725 compcert.lib.Integers Int64 bits_sign_ext thm
R118713:118725 compcert.lib.Integers Int64 bits_sign_ext thm
R118713:118725 compcert.lib.Integers Int64 bits_sign_ext thm
R118713:118725 compcert.lib.Integers Int64 bits_sign_ext thm
R118713:118725 compcert.lib.Integers Int64 bits_sign_ext thm
R118748:118750 compcert.lib.Coqlib <> zlt def
R118764:118766 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118755:118763 compcert.lib.Integers Int64 zwordsize def
R118767:118778 compcert.lib.Integers Int unsigned def
R118748:118750 compcert.lib.Coqlib <> zlt def
R118764:118766 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118755:118763 compcert.lib.Integers Int64 zwordsize def
R118767:118778 compcert.lib.Integers Int unsigned def
R118796:118803 compcert.lib.Coqlib <> zlt_true thm
R118796:118803 compcert.lib.Coqlib <> zlt_true thm
R118796:118803 compcert.lib.Coqlib <> zlt_true thm
R118883:118885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R118832:118838 compcert.lib.Integers Int64 testbit def
R118878:118880 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118861:118863 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118852:118860 compcert.lib.Integers Int64 zwordsize def
R118864:118875 compcert.lib.Integers Int unsigned def
R118841:118844 compcert.lib.Integers Int64 shr' def
R118886:118892 compcert.lib.Integers Int64 testbit def
R118906:118908 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118897:118905 compcert.lib.Integers Int64 zwordsize def
R118883:118885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R118832:118838 compcert.lib.Integers Int64 testbit def
R118878:118880 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118861:118863 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118852:118860 compcert.lib.Integers Int64 zwordsize def
R118864:118875 compcert.lib.Integers Int unsigned def
R118841:118844 compcert.lib.Integers Int64 shr' def
R118886:118892 compcert.lib.Integers Int64 testbit def
R118906:118908 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R118897:118905 compcert.lib.Integers Int64 zwordsize def
R118926:118934 compcert.lib.Integers Int64 bits_shr' thm
R118926:118934 compcert.lib.Integers Int64 bits_shr' thm
R118926:118934 compcert.lib.Integers Int64 bits_shr' thm
R118952:118959 compcert.lib.Coqlib <> zlt_true thm
R118952:118959 compcert.lib.Coqlib <> zlt_true thm
R118952:118959 compcert.lib.Coqlib <> zlt_true thm
R119008:119010 compcert.lib.Coqlib <> zlt def
R119026:119034 compcert.lib.Integers Int64 bits_shr' thm
R119008:119010 compcert.lib.Coqlib <> zlt def
R119026:119034 compcert.lib.Integers Int64 bits_shr' thm
R119026:119034 compcert.lib.Integers Int64 bits_shr' thm
R119026:119034 compcert.lib.Integers Int64 bits_shr' thm
R119026:119034 compcert.lib.Integers Int64 bits_shr' thm
R119054:119062 compcert.lib.Coqlib <> zlt_false thm
R119054:119062 compcert.lib.Coqlib <> zlt_false thm
R119054:119062 compcert.lib.Coqlib <> zlt_false thm
R119088:119096 compcert.lib.Coqlib <> zlt_false thm
R119088:119096 compcert.lib.Coqlib <> zlt_false thm
R119088:119096 compcert.lib.Coqlib <> zlt_false thm
prf 119124:119140 Int64 shl'_zero_ext_min
binder 119152:119152 <> s:859
binder 119154:119154 <> x:860
binder 119156:119156 <> n:861
R119186:119191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R119213:119215 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119192:119195 compcert.lib.Integers Int64 shl' def
R119212:119212 compcert.lib.Integers <> n:861 var
R119198:119205 compcert.lib.Integers Int64 zero_ext def
R119209:119209 compcert.lib.Integers <> x:860 var
R119207:119207 compcert.lib.Integers <> s:859 var
R119216:119219 compcert.lib.Integers Int64 shl' def
R119273:119273 compcert.lib.Integers <> n:861 var
R119222:119229 compcert.lib.Integers Int64 zero_ext def
R119270:119270 compcert.lib.Integers <> x:860 var
R119232:119236 Coq.ZArith.BinInt Z min def
R119250:119252 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119241:119249 compcert.lib.Integers Int64 zwordsize def
R119253:119264 compcert.lib.Integers Int unsigned def
R119266:119266 compcert.lib.Integers <> n:861 var
R119238:119238 compcert.lib.Integers <> s:859 var
R119179:119181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119159:119165 compcert.lib.Integers Int ltu def
R119169:119178 compcert.lib.Integers Int64 iwordsize' def
R119167:119167 compcert.lib.Integers <> n:861 var
R119182:119185 Coq.Init.Datatypes <> true constr
R119299:119309 compcert.lib.Integers Int ltu_inv thm
R119299:119309 compcert.lib.Integers Int ltu_inv thm
R119325:119336 compcert.lib.Integers Int unsigned def
R119338:119347 compcert.lib.Integers Int64 iwordsize' def
R119355:119363 compcert.lib.Integers Int64 zwordsize def
R119325:119336 compcert.lib.Integers Int unsigned def
R119338:119347 compcert.lib.Integers Int64 iwordsize' def
R119355:119363 compcert.lib.Integers Int64 zwordsize def
R119379:119395 Coq.ZArith.BinInt Z min_case_strong thm
R119379:119395 Coq.ZArith.BinInt Z min_case_strong thm
R119420:119431 compcert.lib.Integers Int64 same_bits_eq thm
R119420:119431 compcert.lib.Integers Int64 same_bits_eq thm
R119452:119460 compcert.lib.Integers Int64 bits_shl' thm
R119452:119460 compcert.lib.Integers Int64 bits_shl' thm
R119452:119460 compcert.lib.Integers Int64 bits_shl' thm
R119452:119460 compcert.lib.Integers Int64 bits_shl' thm
R119452:119460 compcert.lib.Integers Int64 bits_shl' thm
R119483:119485 compcert.lib.Coqlib <> zlt def
R119490:119501 compcert.lib.Integers Int unsigned def
R119483:119485 compcert.lib.Coqlib <> zlt def
R119490:119501 compcert.lib.Integers Int unsigned def
R119526:119538 compcert.lib.Integers Int64 bits_zero_ext thm
R119526:119538 compcert.lib.Integers Int64 bits_zero_ext thm
R119526:119538 compcert.lib.Integers Int64 bits_zero_ext thm
R119526:119538 compcert.lib.Integers Int64 bits_zero_ext thm
R119526:119538 compcert.lib.Integers Int64 bits_zero_ext thm
R119560:119562 compcert.lib.Coqlib <> zlt def
R119566:119568 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119569:119580 compcert.lib.Integers Int unsigned def
R119560:119562 compcert.lib.Coqlib <> zlt def
R119566:119568 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119569:119580 compcert.lib.Integers Int unsigned def
R119599:119606 compcert.lib.Coqlib <> zlt_true thm
R119599:119606 compcert.lib.Coqlib <> zlt_true thm
R119599:119606 compcert.lib.Coqlib <> zlt_true thm
R119632:119640 compcert.lib.Coqlib <> zlt_false thm
R119632:119640 compcert.lib.Coqlib <> zlt_false thm
R119632:119640 compcert.lib.Coqlib <> zlt_false thm
prf 119668:119684 Int64 shl'_sign_ext_min
binder 119696:119696 <> s:862
binder 119698:119698 <> x:863
binder 119700:119700 <> n:864
R119730:119735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R119757:119759 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119736:119739 compcert.lib.Integers Int64 shl' def
R119756:119756 compcert.lib.Integers <> n:864 var
R119742:119749 compcert.lib.Integers Int64 sign_ext def
R119753:119753 compcert.lib.Integers <> x:863 var
R119751:119751 compcert.lib.Integers <> s:862 var
R119760:119763 compcert.lib.Integers Int64 shl' def
R119817:119817 compcert.lib.Integers <> n:864 var
R119766:119773 compcert.lib.Integers Int64 sign_ext def
R119814:119814 compcert.lib.Integers <> x:863 var
R119776:119780 Coq.ZArith.BinInt Z min def
R119794:119796 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119785:119793 compcert.lib.Integers Int64 zwordsize def
R119797:119808 compcert.lib.Integers Int unsigned def
R119810:119810 compcert.lib.Integers <> n:864 var
R119782:119782 compcert.lib.Integers <> s:862 var
R119723:119725 Coq.Init.Logic <> ::type_scope:x_'='_x not
R119703:119709 compcert.lib.Integers Int ltu def
R119713:119722 compcert.lib.Integers Int64 iwordsize' def
R119711:119711 compcert.lib.Integers <> n:864 var
R119726:119729 Coq.Init.Datatypes <> true constr
R119843:119853 compcert.lib.Integers Int ltu_inv thm
R119843:119853 compcert.lib.Integers Int ltu_inv thm
R119869:119880 compcert.lib.Integers Int unsigned def
R119882:119891 compcert.lib.Integers Int64 iwordsize' def
R119899:119907 compcert.lib.Integers Int64 zwordsize def
R119869:119880 compcert.lib.Integers Int unsigned def
R119882:119891 compcert.lib.Integers Int64 iwordsize' def
R119899:119907 compcert.lib.Integers Int64 zwordsize def
R119925:119934 Coq.ZArith.BinInt Z min_comm thm
R119925:119934 Coq.ZArith.BinInt Z min_comm thm
R119925:119934 Coq.ZArith.BinInt Z min_comm thm
R119950:119959 Coq.ZArith.BinInt Z min_spec thm
R119971:119973 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119962:119970 compcert.lib.Integers Int64 zwordsize def
R119974:119985 compcert.lib.Integers Int unsigned def
R119950:119959 Coq.ZArith.BinInt Z min_spec thm
R119971:119973 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R119962:119970 compcert.lib.Integers Int64 zwordsize def
R119974:119985 compcert.lib.Integers Int unsigned def
R120038:120049 compcert.lib.Integers Int64 same_bits_eq thm
R120038:120049 compcert.lib.Integers Int64 same_bits_eq thm
R120070:120078 compcert.lib.Integers Int64 bits_shl' thm
R120070:120078 compcert.lib.Integers Int64 bits_shl' thm
R120070:120078 compcert.lib.Integers Int64 bits_shl' thm
R120070:120078 compcert.lib.Integers Int64 bits_shl' thm
R120070:120078 compcert.lib.Integers Int64 bits_shl' thm
R120101:120103 compcert.lib.Coqlib <> zlt def
R120108:120119 compcert.lib.Integers Int unsigned def
R120101:120103 compcert.lib.Coqlib <> zlt def
R120108:120119 compcert.lib.Integers Int unsigned def
R120144:120156 compcert.lib.Integers Int64 bits_sign_ext thm
R120144:120156 compcert.lib.Integers Int64 bits_sign_ext thm
R120144:120156 compcert.lib.Integers Int64 bits_sign_ext thm
R120144:120156 compcert.lib.Integers Int64 bits_sign_ext thm
R120144:120156 compcert.lib.Integers Int64 bits_sign_ext thm
R120187:120189 compcert.lib.Coqlib <> zlt def
R120193:120195 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120196:120207 compcert.lib.Integers Int unsigned def
R120187:120189 compcert.lib.Coqlib <> zlt def
R120193:120195 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R120196:120207 compcert.lib.Integers Int unsigned def
R120226:120233 compcert.lib.Coqlib <> zlt_true thm
R120226:120233 compcert.lib.Coqlib <> zlt_true thm
R120226:120233 compcert.lib.Coqlib <> zlt_true thm
def 120334:120342 Int64 one_bits'
R120348:120350 compcert.lib.Integers Int64 int rec
binder 120345:120345 <> x:865
R120355:120358 Coq.Init.Datatypes <> list ind
R120360:120366 compcert.lib.Integers Int int rec
R120373:120380 Coq.Lists.List <> map def
R120392:120401 compcert.lib.Zbits <> Z_one_bits def
R120413:120420 compcert.lib.Integers Int64 unsigned def
R120422:120422 compcert.lib.Integers <> x:865 var
R120403:120410 compcert.lib.Integers Int64 wordsize def
R120382:120389 compcert.lib.Integers Int repr def
def 120441:120450 Int64 is_power2'
R120456:120458 compcert.lib.Integers Int64 int rec
binder 120453:120453 <> x:866
R120463:120468 Coq.Init.Datatypes <> option ind
R120470:120476 compcert.lib.Integers Int int rec
R120489:120498 compcert.lib.Zbits <> Z_one_bits def
R120510:120517 compcert.lib.Integers Int64 unsigned def
R120519:120519 compcert.lib.Integers <> x:866 var
R120500:120507 compcert.lib.Integers Int64 wordsize def
R120534:120537 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R120538:120540 Coq.Init.Datatypes <> nil constr
R120545:120548 Coq.Init.Datatypes <> Some constr
R120551:120558 compcert.lib.Integers Int repr def
R120572:120575 Coq.Init.Datatypes <> None constr
prf 120593:120607 Int64 one_bits'_range
binder 120619:120619 <> x:867
binder 120621:120621 <> i:868
R120642:120645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R120666:120668 Coq.Init.Logic <> ::type_scope:x_'='_x not
R120646:120652 compcert.lib.Integers Int ltu def
R120656:120665 compcert.lib.Integers Int64 iwordsize' def
R120654:120654 compcert.lib.Integers <> i:868 var
R120669:120672 Coq.Init.Datatypes <> true constr
R120624:120625 Coq.Lists.List <> In def
R120630:120638 compcert.lib.Integers Int64 one_bits' def
R120640:120640 compcert.lib.Integers <> x:867 var
R120627:120627 compcert.lib.Integers <> i:868 var
R120704:120718 compcert.lib.Coqlib <> list_in_map_inv thm
R120704:120718 compcert.lib.Coqlib <> list_in_map_inv thm
R120756:120771 compcert.lib.Zbits <> Z_one_bits_range thm
R120786:120794 compcert.lib.Integers Int64 zwordsize def
R120786:120794 compcert.lib.Integers Int64 zwordsize def
R120816:120822 compcert.lib.Integers Int ltu def
R120845:120861 compcert.lib.Integers Int unsigned_repr thm
R120845:120861 compcert.lib.Integers Int unsigned_repr thm
R120845:120861 compcert.lib.Integers Int unsigned_repr thm
R120845:120861 compcert.lib.Integers Int unsigned_repr thm
R120874:120885 compcert.lib.Integers Int unsigned def
R120887:120896 compcert.lib.Integers Int64 iwordsize' def
R120904:120912 compcert.lib.Integers Int64 zwordsize def
R120874:120885 compcert.lib.Integers Int unsigned def
R120887:120896 compcert.lib.Integers Int64 iwordsize' def
R120904:120912 compcert.lib.Integers Int64 zwordsize def
R120904:120912 compcert.lib.Integers Int64 zwordsize def
R120904:120912 compcert.lib.Integers Int64 zwordsize def
R120904:120912 compcert.lib.Integers Int64 zwordsize def
R120904:120912 compcert.lib.Integers Int64 zwordsize def
R120921:120928 compcert.lib.Coqlib <> zlt_true thm
R120921:120928 compcert.lib.Coqlib <> zlt_true thm
R120955:120957 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R120946:120954 compcert.lib.Integers Int64 zwordsize def
R120958:120973 compcert.lib.Integers Int max_unsigned def
R120955:120957 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R120946:120954 compcert.lib.Integers Int64 zwordsize def
R120958:120973 compcert.lib.Integers Int max_unsigned def
def 121012:121027 Int64 int_of_one_bits'
R121033:121036 Coq.Init.Datatypes <> list ind
R121038:121044 compcert.lib.Integers Int int rec
binder 121030:121030 <> l:869
R121049:121051 compcert.lib.Integers Int64 int rec
R121064:121064 compcert.lib.Integers <> l:869 var
R121075:121077 Coq.Init.Datatypes <> nil constr
R121082:121085 compcert.lib.Integers Int64 zero def
R121092:121095 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R121101:121103 compcert.lib.Integers Int64 add def
R121119:121134 compcert.lib.Integers <> int_of_one_bits':870 def
R121106:121109 compcert.lib.Integers Int64 shl' def
R121111:121113 compcert.lib.Integers Int64 one def
prf 121155:121170 Int64 one_bits'_decomp
binder 121182:121182 <> x:872
R121186:121188 Coq.Init.Logic <> ::type_scope:x_'='_x not
R121185:121185 compcert.lib.Integers <> x:872 var
R121189:121204 compcert.lib.Integers Int64 int_of_one_bits' def
R121207:121215 compcert.lib.Integers Int64 one_bits' def
R121217:121217 compcert.lib.Integers <> x:872 var
binder 121250:121250 <> l:873
R121264:121264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121303:121318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121357:121359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R121319:121334 compcert.lib.Integers Int64 int_of_one_bits' def
R121337:121344 Coq.Lists.List <> map def
R121355:121355 compcert.lib.Integers <> l:873 var
R121346:121353 compcert.lib.Integers Int repr def
R121360:121363 compcert.lib.Integers Int64 repr def
R121366:121375 compcert.lib.Zbits <> powerserie def
R121377:121377 compcert.lib.Integers <> l:873 var
binder 121272:121272 <> i:874
R121281:121284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121286:121289 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R121291:121293 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R121290:121290 compcert.lib.Integers <> i:874 var
R121290:121290 compcert.lib.Integers <> i:874 var
R121294:121302 compcert.lib.Integers Int64 zwordsize def
R121275:121276 Coq.Lists.List <> In def
R121280:121280 compcert.lib.Integers <> l:873 var
R121278:121278 compcert.lib.Integers <> i:874 var
binder 121250:121250 <> l:875
R121264:121264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121303:121318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121357:121359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R121319:121334 compcert.lib.Integers Int64 int_of_one_bits' def
R121337:121344 Coq.Lists.List <> map def
R121355:121355 compcert.lib.Integers <> l:875 var
R121346:121353 compcert.lib.Integers Int repr def
R121360:121363 compcert.lib.Integers Int64 repr def
R121366:121375 compcert.lib.Zbits <> powerserie def
R121377:121377 compcert.lib.Integers <> l:875 var
binder 121272:121272 <> i:876
R121281:121284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121286:121289 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R121291:121293 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R121290:121290 compcert.lib.Integers <> i:876 var
R121290:121290 compcert.lib.Integers <> i:876 var
R121294:121302 compcert.lib.Integers Int64 zwordsize def
R121275:121276 Coq.Lists.List <> In def
R121280:121280 compcert.lib.Integers <> l:875 var
R121278:121278 compcert.lib.Integers <> i:876 var
R121456:121467 compcert.lib.Integers Int64 eqm_samerepr thm
R121476:121482 compcert.lib.Integers Int64 eqm_add thm
R121456:121467 compcert.lib.Integers Int64 eqm_samerepr thm
R121476:121482 compcert.lib.Integers Int64 eqm_add thm
R121497:121510 compcert.lib.Integers Int64 shl'_one_two_p thm
R121497:121510 compcert.lib.Integers Int64 shl'_one_two_p thm
R121497:121510 compcert.lib.Integers Int64 shl'_one_two_p thm
R121521:121537 compcert.lib.Integers Int unsigned_repr thm
R121521:121537 compcert.lib.Integers Int unsigned_repr thm
R121521:121537 compcert.lib.Integers Int unsigned_repr thm
R121521:121537 compcert.lib.Integers Int unsigned_repr thm
R121546:121552 compcert.lib.Integers Int64 eqm_sym thm
R121561:121577 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R121546:121552 compcert.lib.Integers Int64 eqm_sym thm
R121561:121577 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R121622:121624 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R121613:121621 compcert.lib.Integers Int64 zwordsize def
R121625:121640 compcert.lib.Integers Int max_unsigned def
R121622:121624 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R121613:121621 compcert.lib.Integers Int64 zwordsize def
R121625:121640 compcert.lib.Integers Int max_unsigned def
R121674:121680 compcert.lib.Integers Int64 eqm_sym thm
R121689:121705 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R121674:121680 compcert.lib.Integers Int64 eqm_sym thm
R121689:121705 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R121734:121746 compcert.lib.Integers Int64 repr_unsigned thm
R121734:121746 compcert.lib.Integers Int64 repr_unsigned thm
R121734:121746 compcert.lib.Integers Int64 repr_unsigned thm
R121764:121772 compcert.lib.Integers Int64 one_bits' def
R121801:121821 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R121801:121821 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R121801:121821 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R121801:121821 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R121836:121849 compcert.lib.Integers Int64 unsigned_range thm
R121836:121849 compcert.lib.Integers Int64 unsigned_range thm
R121860:121875 compcert.lib.Zbits <> Z_one_bits_range thm
R121860:121875 compcert.lib.Zbits <> Z_one_bits_range thm
prf 121890:121903 Int64 is_power2'_rng
binder 121915:121915 <> n:877
binder 121917:121920 <> logn:878
R121949:121954 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R121956:121959 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R121977:121979 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R121960:121971 compcert.lib.Integers Int unsigned def
R121973:121976 compcert.lib.Integers <> logn:878 var
R121960:121971 compcert.lib.Integers Int unsigned def
R121973:121976 compcert.lib.Integers <> logn:878 var
R121980:121988 compcert.lib.Integers Int64 zwordsize def
R121937:121939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R121925:121934 compcert.lib.Integers Int64 is_power2' def
R121936:121936 compcert.lib.Integers <> n:877 var
R121940:121943 Coq.Init.Datatypes <> Some constr
R121945:121948 compcert.lib.Integers <> logn:878 var
R122007:122016 compcert.lib.Integers Int64 is_power2' def
R122049:122058 compcert.lib.Zbits <> Z_one_bits def
R122070:122077 compcert.lib.Integers Int64 unsigned def
R122060:122067 compcert.lib.Integers Int64 wordsize def
R122049:122058 compcert.lib.Zbits <> Z_one_bits def
R122070:122077 compcert.lib.Integers Int64 unsigned def
R122060:122067 compcert.lib.Integers Int64 wordsize def
R122130:122133 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122135:122137 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122138:122146 compcert.lib.Integers Int64 zwordsize def
R122130:122133 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122135:122137 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122138:122146 compcert.lib.Integers Int64 zwordsize def
R122183:122190 compcert.lib.Integers Int64 unsigned def
R122160:122175 compcert.lib.Zbits <> Z_one_bits_range thm
R122183:122190 compcert.lib.Integers Int64 unsigned def
R122160:122175 compcert.lib.Zbits <> Z_one_bits_range thm
R122237:122253 compcert.lib.Integers Int unsigned_repr thm
R122237:122253 compcert.lib.Integers Int unsigned_repr thm
R122237:122253 compcert.lib.Integers Int unsigned_repr thm
R122237:122253 compcert.lib.Integers Int unsigned_repr thm
R122281:122283 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R122272:122280 compcert.lib.Integers Int64 zwordsize def
R122284:122299 compcert.lib.Integers Int max_unsigned def
R122281:122283 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R122272:122280 compcert.lib.Integers Int64 zwordsize def
R122284:122299 compcert.lib.Integers Int max_unsigned def
prf 122339:122354 Int64 is_power2'_range
binder 122366:122366 <> n:879
binder 122368:122371 <> logn:880
R122400:122403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122427:122429 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122404:122410 compcert.lib.Integers Int ltu def
R122417:122426 compcert.lib.Integers Int64 iwordsize' def
R122412:122415 compcert.lib.Integers <> logn:880 var
R122430:122433 Coq.Init.Datatypes <> true constr
R122388:122390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122376:122385 compcert.lib.Integers Int64 is_power2' def
R122387:122387 compcert.lib.Integers <> n:879 var
R122391:122394 Coq.Init.Datatypes <> Some constr
R122396:122399 compcert.lib.Integers <> logn:880 var
R122460:122466 compcert.lib.Integers Int ltu def
R122477:122488 compcert.lib.Integers Int unsigned def
R122490:122499 compcert.lib.Integers Int64 iwordsize' def
R122507:122515 compcert.lib.Integers Int64 zwordsize def
R122477:122488 compcert.lib.Integers Int unsigned def
R122490:122499 compcert.lib.Integers Int64 iwordsize' def
R122507:122515 compcert.lib.Integers Int64 zwordsize def
R122507:122515 compcert.lib.Integers Int64 zwordsize def
R122507:122515 compcert.lib.Integers Int64 zwordsize def
R122507:122515 compcert.lib.Integers Int64 zwordsize def
R122507:122515 compcert.lib.Integers Int64 zwordsize def
R122526:122533 compcert.lib.Coqlib <> zlt_true thm
R122526:122533 compcert.lib.Coqlib <> zlt_true thm
R122548:122561 compcert.lib.Integers Int64 is_power2'_rng thm
R122548:122561 compcert.lib.Integers Int64 is_power2'_rng thm
prf 122590:122607 Int64 is_power2'_correct
binder 122619:122619 <> n:881
binder 122621:122624 <> logn:882
R122653:122658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R122669:122671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122659:122666 compcert.lib.Integers Int64 unsigned def
R122668:122668 compcert.lib.Integers <> n:881 var
R122672:122676 Coq.ZArith.Zpower <> two_p def
R122679:122690 compcert.lib.Integers Int unsigned def
R122692:122695 compcert.lib.Integers <> logn:882 var
R122641:122643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R122629:122638 compcert.lib.Integers Int64 is_power2' def
R122640:122640 compcert.lib.Integers <> n:881 var
R122644:122647 Coq.Init.Datatypes <> Some constr
R122649:122652 compcert.lib.Integers <> logn:882 var
R122715:122724 compcert.lib.Integers Int64 is_power2' def
R122747:122756 compcert.lib.Zbits <> Z_one_bits def
R122768:122775 compcert.lib.Integers Int64 unsigned def
R122758:122765 compcert.lib.Integers Int64 wordsize def
R122747:122756 compcert.lib.Zbits <> Z_one_bits def
R122768:122775 compcert.lib.Integers Int64 unsigned def
R122758:122765 compcert.lib.Integers Int64 wordsize def
R122882:122895 compcert.lib.Integers Int64 unsigned_range thm
R122827:122847 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R122859:122866 compcert.lib.Integers Int64 unsigned def
R122849:122856 compcert.lib.Integers Int64 wordsize def
R122827:122847 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R122859:122866 compcert.lib.Integers Int64 unsigned def
R122849:122856 compcert.lib.Integers Int64 wordsize def
R122882:122895 compcert.lib.Integers Int64 unsigned_range thm
R122827:122847 compcert.lib.Zbits <> Z_one_bits_powerserie thm
R122859:122866 compcert.lib.Integers Int64 unsigned def
R122849:122856 compcert.lib.Integers Int64 wordsize def
R122909:122925 compcert.lib.Integers Int unsigned_repr thm
R122909:122925 compcert.lib.Integers Int unsigned_repr thm
R122909:122925 compcert.lib.Integers Int unsigned_repr thm
R122909:122925 compcert.lib.Integers Int unsigned_repr thm
R122962:122965 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122967:122969 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122970:122978 compcert.lib.Integers Int64 zwordsize def
R122962:122965 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122967:122969 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R122970:122978 compcert.lib.Integers Int64 zwordsize def
R123015:123022 compcert.lib.Integers Int64 unsigned def
R122992:123007 compcert.lib.Zbits <> Z_one_bits_range thm
R123015:123022 compcert.lib.Integers Int64 unsigned def
R122992:123007 compcert.lib.Zbits <> Z_one_bits_range thm
R123078:123080 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R123069:123077 compcert.lib.Integers Int64 zwordsize def
R123081:123096 compcert.lib.Integers Int max_unsigned def
R123078:123080 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R123069:123077 compcert.lib.Integers Int64 zwordsize def
R123081:123096 compcert.lib.Integers Int max_unsigned def
prf 123136:123144 Int64 mul_pow2'
binder 123156:123156 <> x:883
binder 123158:123158 <> n:884
binder 123160:123163 <> logn:885
R123192:123197 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R123205:123207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123198:123200 compcert.lib.Integers Int64 mul def
R123204:123204 compcert.lib.Integers <> n:884 var
R123202:123202 compcert.lib.Integers <> x:883 var
R123208:123211 compcert.lib.Integers Int64 shl' def
R123215:123218 compcert.lib.Integers <> logn:885 var
R123213:123213 compcert.lib.Integers <> x:883 var
R123180:123182 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123168:123177 compcert.lib.Integers Int64 is_power2' def
R123179:123179 compcert.lib.Integers <> n:884 var
R123183:123186 Coq.Init.Datatypes <> Some constr
R123188:123191 compcert.lib.Integers <> logn:885 var
R123246:123253 compcert.lib.Integers Int64 shl'_mul thm
R123246:123253 compcert.lib.Integers Int64 shl'_mul thm
R123246:123253 compcert.lib.Integers Int64 shl'_mul thm
R123273:123286 compcert.lib.Integers Int64 shl'_one_two_p thm
R123273:123286 compcert.lib.Integers Int64 shl'_one_two_p thm
R123273:123286 compcert.lib.Integers Int64 shl'_one_two_p thm
R123303:123315 compcert.lib.Integers Int64 repr_unsigned thm
R123303:123315 compcert.lib.Integers Int64 repr_unsigned thm
R123303:123315 compcert.lib.Integers Int64 repr_unsigned thm
R123336:123353 compcert.lib.Integers Int64 is_power2'_correct thm
R123336:123353 compcert.lib.Integers Int64 is_power2'_correct thm
prf 123376:123385 Int64 divu_pow2'
binder 123397:123397 <> x:886
binder 123399:123399 <> n:887
binder 123401:123404 <> logn:888
R123433:123438 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R123447:123449 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123439:123442 compcert.lib.Integers Int64 divu def
R123446:123446 compcert.lib.Integers <> n:887 var
R123444:123444 compcert.lib.Integers <> x:886 var
R123450:123454 compcert.lib.Integers Int64 shru' def
R123458:123461 compcert.lib.Integers <> logn:888 var
R123456:123456 compcert.lib.Integers <> x:886 var
R123421:123423 Coq.Init.Logic <> ::type_scope:x_'='_x not
R123409:123418 compcert.lib.Integers Int64 is_power2' def
R123420:123420 compcert.lib.Integers <> n:887 var
R123424:123427 Coq.Init.Datatypes <> Some constr
R123429:123432 compcert.lib.Integers <> logn:888 var
R123493:123510 compcert.lib.Integers Int64 is_power2'_correct thm
R123493:123510 compcert.lib.Integers Int64 is_power2'_correct thm
R123549:123552 compcert.lib.Integers Int64 divu def
R123574:123578 compcert.lib.Integers Int64 shru' def
R123589:123605 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R123589:123605 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R123589:123605 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R123589:123605 compcert.lib.Zbits <> Zshiftr_div_two_p thm
R123623:123636 compcert.lib.Integers Int64 is_power2'_rng thm
R123623:123636 compcert.lib.Integers Int64 is_power2'_rng thm
def 123719:123724 Int64 loword
R123730:123732 compcert.lib.Integers Int64 int rec
binder 123727:123727 <> n:889
R123737:123743 compcert.lib.Integers Int int rec
R123748:123755 compcert.lib.Integers Int repr def
R123758:123765 compcert.lib.Integers Int64 unsigned def
R123767:123767 compcert.lib.Integers <> n:889 var
def 123783:123788 Int64 hiword
R123794:123796 compcert.lib.Integers Int64 int rec
binder 123791:123791 <> n:890
R123801:123807 compcert.lib.Integers Int int rec
R123812:123819 compcert.lib.Integers Int repr def
R123822:123829 compcert.lib.Integers Int64 unsigned def
R123832:123835 compcert.lib.Integers Int64 shru def
R123840:123843 compcert.lib.Integers Int64 repr def
R123845:123857 compcert.lib.Integers Int zwordsize def
R123837:123837 compcert.lib.Integers <> n:890 var
def 123875:123881 Int64 ofwords
R123891:123897 compcert.lib.Integers Int int rec
binder 123884:123885 <> hi:891
binder 123887:123888 <> lo:892
R123902:123904 compcert.lib.Integers Int64 int rec
R123911:123912 compcert.lib.Integers Int64 or def
R123967:123970 compcert.lib.Integers Int64 repr def
R123973:123984 compcert.lib.Integers Int unsigned def
R123986:123987 compcert.lib.Integers <> lo:892 var
R123915:123917 compcert.lib.Integers Int64 shl def
R123945:123948 compcert.lib.Integers Int64 repr def
R123950:123962 compcert.lib.Integers Int zwordsize def
R123920:123923 compcert.lib.Integers Int64 repr def
R123926:123937 compcert.lib.Integers Int unsigned def
R123939:123940 compcert.lib.Integers <> hi:891 var
prf 123999:124009 Int64 bits_loword
binder 124021:124021 <> n:893
binder 124023:124023 <> i:894
R124048:124051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R124076:124078 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124052:124062 compcert.lib.Integers Int testbit def
R124075:124075 compcert.lib.Integers <> i:894 var
R124065:124070 compcert.lib.Integers Int64 loword def
R124072:124072 compcert.lib.Integers <> n:893 var
R124079:124085 compcert.lib.Integers Int64 testbit def
R124089:124089 compcert.lib.Integers <> i:894 var
R124087:124087 compcert.lib.Integers <> n:893 var
R124027:124030 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124032:124034 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124031:124031 compcert.lib.Integers <> i:894 var
R124031:124031 compcert.lib.Integers <> i:894 var
R124035:124047 compcert.lib.Integers Int zwordsize def
R124116:124121 compcert.lib.Integers Int64 loword def
R124132:124147 compcert.lib.Integers Int testbit_repr thm
R124132:124147 compcert.lib.Integers Int testbit_repr thm
R124132:124147 compcert.lib.Integers Int testbit_repr thm
R124132:124147 compcert.lib.Integers Int testbit_repr thm
prf 124168:124178 Int64 bits_hiword
binder 124190:124190 <> n:895
binder 124192:124192 <> i:896
R124217:124220 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R124245:124247 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124221:124231 compcert.lib.Integers Int testbit def
R124244:124244 compcert.lib.Integers <> i:896 var
R124234:124239 compcert.lib.Integers Int64 hiword def
R124241:124241 compcert.lib.Integers <> n:895 var
R124248:124254 compcert.lib.Integers Int64 testbit def
R124260:124262 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R124259:124259 compcert.lib.Integers <> i:896 var
R124263:124275 compcert.lib.Integers Int zwordsize def
R124256:124256 compcert.lib.Integers <> n:895 var
R124196:124199 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124201:124203 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124200:124200 compcert.lib.Integers <> i:896 var
R124200:124200 compcert.lib.Integers <> i:896 var
R124204:124216 compcert.lib.Integers Int zwordsize def
R124303:124308 compcert.lib.Integers Int64 hiword def
R124319:124334 compcert.lib.Integers Int testbit_repr thm
R124319:124334 compcert.lib.Integers Int testbit_repr thm
R124319:124334 compcert.lib.Integers Int testbit_repr thm
R124319:124334 compcert.lib.Integers Int testbit_repr thm
R124362:124364 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124353:124361 compcert.lib.Integers Int64 zwordsize def
R124366:124368 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R124369:124381 compcert.lib.Integers Int zwordsize def
R124362:124364 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124353:124361 compcert.lib.Integers Int64 zwordsize def
R124366:124368 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R124369:124381 compcert.lib.Integers Int zwordsize def
R124408:124414 compcert.lib.Integers Int64 testbit def
R124417:124420 compcert.lib.Integers Int64 shru def
R124425:124428 compcert.lib.Integers Int64 repr def
R124430:124442 compcert.lib.Integers Int zwordsize def
R124408:124414 compcert.lib.Integers Int64 testbit def
R124417:124420 compcert.lib.Integers Int64 shru def
R124425:124428 compcert.lib.Integers Int64 repr def
R124430:124442 compcert.lib.Integers Int zwordsize def
R124458:124466 compcert.lib.Integers Int64 bits_shru thm
R124458:124466 compcert.lib.Integers Int64 bits_shru thm
R124458:124466 compcert.lib.Integers Int64 bits_shru thm
R124458:124466 compcert.lib.Integers Int64 bits_shru thm
R124479:124486 compcert.lib.Integers Int64 unsigned def
R124489:124492 compcert.lib.Integers Int64 repr def
R124494:124506 compcert.lib.Integers Int zwordsize def
R124515:124527 compcert.lib.Integers Int zwordsize def
R124479:124486 compcert.lib.Integers Int64 unsigned def
R124489:124492 compcert.lib.Integers Int64 repr def
R124494:124506 compcert.lib.Integers Int zwordsize def
R124515:124527 compcert.lib.Integers Int zwordsize def
R124515:124527 compcert.lib.Integers Int zwordsize def
R124515:124527 compcert.lib.Integers Int zwordsize def
R124515:124527 compcert.lib.Integers Int zwordsize def
R124515:124527 compcert.lib.Integers Int zwordsize def
R124515:124527 compcert.lib.Integers Int zwordsize def
R124538:124545 compcert.lib.Coqlib <> zlt_true thm
R124538:124545 compcert.lib.Coqlib <> zlt_true thm
prf 124570:124581 Int64 bits_ofwords
binder 124593:124594 <> hi:897
binder 124596:124597 <> lo:898
binder 124599:124599 <> i:899
R124620:124625 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R124651:124655 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124626:124632 compcert.lib.Integers Int64 testbit def
R124650:124650 compcert.lib.Integers <> i:899 var
R124635:124641 compcert.lib.Integers Int64 ofwords def
R124646:124647 compcert.lib.Integers <> lo:898 var
R124643:124644 compcert.lib.Integers <> hi:897 var
R124659:124661 compcert.lib.Coqlib <> zlt def
R124665:124677 compcert.lib.Integers Int zwordsize def
R124663:124663 compcert.lib.Integers <> i:899 var
R124706:124716 compcert.lib.Integers Int testbit def
R124723:124725 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R124722:124722 compcert.lib.Integers <> i:899 var
R124726:124738 compcert.lib.Integers Int zwordsize def
R124718:124719 compcert.lib.Integers <> hi:897 var
R124684:124694 compcert.lib.Integers Int testbit def
R124699:124699 compcert.lib.Integers <> i:899 var
R124696:124697 compcert.lib.Integers <> lo:898 var
R124603:124606 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124608:124610 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R124607:124607 compcert.lib.Integers <> i:899 var
R124607:124607 compcert.lib.Integers <> i:899 var
R124611:124619 compcert.lib.Integers Int64 zwordsize def
R124766:124772 compcert.lib.Integers Int64 ofwords def
R124783:124789 compcert.lib.Integers Int64 bits_or thm
R124783:124789 compcert.lib.Integers Int64 bits_or thm
R124783:124789 compcert.lib.Integers Int64 bits_or thm
R124783:124789 compcert.lib.Integers Int64 bits_or thm
R124806:124813 compcert.lib.Integers Int64 bits_shl thm
R124806:124813 compcert.lib.Integers Int64 bits_shl thm
R124806:124813 compcert.lib.Integers Int64 bits_shl thm
R124806:124813 compcert.lib.Integers Int64 bits_shl thm
R124832:124839 compcert.lib.Integers Int64 unsigned def
R124842:124845 compcert.lib.Integers Int64 repr def
R124847:124859 compcert.lib.Integers Int zwordsize def
R124868:124880 compcert.lib.Integers Int zwordsize def
R124832:124839 compcert.lib.Integers Int64 unsigned def
R124842:124845 compcert.lib.Integers Int64 repr def
R124847:124859 compcert.lib.Integers Int zwordsize def
R124868:124880 compcert.lib.Integers Int zwordsize def
R124868:124880 compcert.lib.Integers Int zwordsize def
R124868:124880 compcert.lib.Integers Int zwordsize def
R124868:124880 compcert.lib.Integers Int zwordsize def
R124868:124880 compcert.lib.Integers Int zwordsize def
R124868:124880 compcert.lib.Integers Int zwordsize def
R124902:124904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124893:124901 compcert.lib.Integers Int64 zwordsize def
R124906:124908 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R124909:124921 compcert.lib.Integers Int zwordsize def
R124902:124904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R124893:124901 compcert.lib.Integers Int64 zwordsize def
R124906:124908 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R124909:124921 compcert.lib.Integers Int zwordsize def
R124952:124954 compcert.lib.Coqlib <> zlt def
R124958:124970 compcert.lib.Integers Int zwordsize def
R124952:124954 compcert.lib.Coqlib <> zlt def
R124958:124970 compcert.lib.Integers Int zwordsize def
R124984:124995 compcert.lib.Integers Int64 testbit_repr thm
R124984:124995 compcert.lib.Integers Int64 testbit_repr thm
R124984:124995 compcert.lib.Integers Int64 testbit_repr thm
R124984:124995 compcert.lib.Integers Int64 testbit_repr thm
R125015:125026 compcert.lib.Integers Int64 testbit_repr thm
R125015:125026 compcert.lib.Integers Int64 testbit_repr thm
R125015:125026 compcert.lib.Integers Int64 testbit_repr thm
R125015:125026 compcert.lib.Integers Int64 testbit_repr thm
R125015:125026 compcert.lib.Integers Int64 testbit_repr thm
R125015:125026 compcert.lib.Integers Int64 testbit_repr thm
R125015:125026 compcert.lib.Integers Int64 testbit_repr thm
R125043:125053 compcert.lib.Integers Int testbit def
R125043:125053 compcert.lib.Integers Int testbit def
R125070:125083 compcert.lib.Integers Int bits_above thm
R125070:125083 compcert.lib.Integers Int bits_above thm
R125070:125083 compcert.lib.Integers Int bits_above thm
R125070:125083 compcert.lib.Integers Int bits_above thm
R125092:125102 Coq.Bool.Bool <> orb_false_r thm
R125092:125102 Coq.Bool.Bool <> orb_false_r thm
prf 125130:125139 Int64 lo_ofwords
binder 125151:125152 <> hi:900
binder 125154:125155 <> lo:901
R125180:125182 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125158:125163 compcert.lib.Integers Int64 loword def
R125166:125172 compcert.lib.Integers Int64 ofwords def
R125177:125178 compcert.lib.Integers <> lo:901 var
R125174:125175 compcert.lib.Integers <> hi:900 var
R125183:125184 compcert.lib.Integers <> lo:901 var
R125210:125225 compcert.lib.Integers Int same_bits_eq thm
R125210:125225 compcert.lib.Integers Int same_bits_eq thm
R125246:125256 compcert.lib.Integers Int64 bits_loword thm
R125246:125256 compcert.lib.Integers Int64 bits_loword thm
R125246:125256 compcert.lib.Integers Int64 bits_loword thm
R125246:125256 compcert.lib.Integers Int64 bits_loword thm
R125273:125284 compcert.lib.Integers Int64 bits_ofwords thm
R125273:125284 compcert.lib.Integers Int64 bits_ofwords thm
R125273:125284 compcert.lib.Integers Int64 bits_ofwords thm
R125273:125284 compcert.lib.Integers Int64 bits_ofwords thm
R125293:125300 compcert.lib.Coqlib <> zlt_true thm
R125293:125300 compcert.lib.Coqlib <> zlt_true thm
R125327:125329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125318:125326 compcert.lib.Integers Int64 zwordsize def
R125331:125333 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125334:125346 compcert.lib.Integers Int zwordsize def
R125327:125329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125318:125326 compcert.lib.Integers Int64 zwordsize def
R125331:125333 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125334:125346 compcert.lib.Integers Int zwordsize def
prf 125382:125391 Int64 hi_ofwords
binder 125403:125404 <> hi:902
binder 125406:125407 <> lo:903
R125432:125434 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125410:125415 compcert.lib.Integers Int64 hiword def
R125418:125424 compcert.lib.Integers Int64 ofwords def
R125429:125430 compcert.lib.Integers <> lo:903 var
R125426:125427 compcert.lib.Integers <> hi:902 var
R125435:125436 compcert.lib.Integers <> hi:902 var
R125462:125477 compcert.lib.Integers Int same_bits_eq thm
R125462:125477 compcert.lib.Integers Int same_bits_eq thm
R125498:125508 compcert.lib.Integers Int64 bits_hiword thm
R125498:125508 compcert.lib.Integers Int64 bits_hiword thm
R125498:125508 compcert.lib.Integers Int64 bits_hiword thm
R125498:125508 compcert.lib.Integers Int64 bits_hiword thm
R125525:125536 compcert.lib.Integers Int64 bits_ofwords thm
R125525:125536 compcert.lib.Integers Int64 bits_ofwords thm
R125525:125536 compcert.lib.Integers Int64 bits_ofwords thm
R125525:125536 compcert.lib.Integers Int64 bits_ofwords thm
R125549:125557 compcert.lib.Coqlib <> zlt_false thm
R125549:125557 compcert.lib.Coqlib <> zlt_false thm
R125549:125557 compcert.lib.Coqlib <> zlt_false thm
R125549:125557 compcert.lib.Coqlib <> zlt_false thm
R125598:125600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125589:125597 compcert.lib.Integers Int64 zwordsize def
R125602:125604 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125605:125617 compcert.lib.Integers Int zwordsize def
R125598:125600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125589:125597 compcert.lib.Integers Int64 zwordsize def
R125602:125604 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125605:125617 compcert.lib.Integers Int zwordsize def
prf 125653:125669 Int64 ofwords_recompose
binder 125681:125681 <> n:904
R125713:125715 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125684:125690 compcert.lib.Integers Int64 ofwords def
R125704:125709 compcert.lib.Integers Int64 loword def
R125711:125711 compcert.lib.Integers <> n:904 var
R125693:125698 compcert.lib.Integers Int64 hiword def
R125700:125700 compcert.lib.Integers <> n:904 var
R125716:125716 compcert.lib.Integers <> n:904 var
R125742:125753 compcert.lib.Integers Int64 same_bits_eq thm
R125742:125753 compcert.lib.Integers Int64 same_bits_eq thm
R125772:125783 compcert.lib.Integers Int64 bits_ofwords thm
R125772:125783 compcert.lib.Integers Int64 bits_ofwords thm
R125772:125783 compcert.lib.Integers Int64 bits_ofwords thm
R125772:125783 compcert.lib.Integers Int64 bits_ofwords thm
R125804:125806 compcert.lib.Coqlib <> zlt def
R125810:125822 compcert.lib.Integers Int zwordsize def
R125804:125806 compcert.lib.Coqlib <> zlt def
R125810:125822 compcert.lib.Integers Int zwordsize def
R125834:125844 compcert.lib.Integers Int64 bits_loword thm
R125834:125844 compcert.lib.Integers Int64 bits_loword thm
R125862:125872 compcert.lib.Integers Int64 bits_hiword thm
R125862:125872 compcert.lib.Integers Int64 bits_hiword thm
R125862:125872 compcert.lib.Integers Int64 bits_hiword thm
R125862:125872 compcert.lib.Integers Int64 bits_hiword thm
R125908:125910 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125899:125907 compcert.lib.Integers Int64 zwordsize def
R125912:125914 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125915:125927 compcert.lib.Integers Int zwordsize def
R125908:125910 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125899:125907 compcert.lib.Integers Int64 zwordsize def
R125912:125914 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R125915:125927 compcert.lib.Integers Int zwordsize def
prf 125963:125973 Int64 ofwords_add
binder 125985:125986 <> lo:905
binder 125988:125989 <> hi:906
R126005:126007 Coq.Init.Logic <> ::type_scope:x_'='_x not
R125992:125998 compcert.lib.Integers Int64 ofwords def
R126003:126004 compcert.lib.Integers <> lo:905 var
R126000:126001 compcert.lib.Integers <> hi:906 var
R126008:126011 compcert.lib.Integers Int64 repr def
R126040:126042 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R126029:126031 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126014:126025 compcert.lib.Integers Int unsigned def
R126027:126028 compcert.lib.Integers <> hi:906 var
R126032:126036 Coq.ZArith.Zpower <> two_p def
R126043:126054 compcert.lib.Integers Int unsigned def
R126056:126057 compcert.lib.Integers <> lo:905 var
R126085:126091 compcert.lib.Integers Int64 ofwords def
R126102:126118 compcert.lib.Integers Int64 shifted_or_is_add thm
R126102:126118 compcert.lib.Integers Int64 shifted_or_is_add thm
R126102:126118 compcert.lib.Integers Int64 shifted_or_is_add thm
R126102:126118 compcert.lib.Integers Int64 shifted_or_is_add thm
R126102:126118 compcert.lib.Integers Int64 shifted_or_is_add thm
R126129:126140 compcert.lib.Integers Int64 eqm_samerepr thm
R126129:126140 compcert.lib.Integers Int64 eqm_samerepr thm
R126149:126155 compcert.lib.Integers Int64 eqm_add thm
R126149:126155 compcert.lib.Integers Int64 eqm_add thm
R126164:126171 compcert.lib.Integers Int64 eqm_mult thm
R126164:126171 compcert.lib.Integers Int64 eqm_mult thm
R126182:126188 compcert.lib.Integers Int64 eqm_sym thm
R126197:126213 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R126182:126188 compcert.lib.Integers Int64 eqm_sym thm
R126197:126213 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R126224:126231 compcert.lib.Integers Int64 eqm_refl thm
R126224:126231 compcert.lib.Integers Int64 eqm_refl thm
R126242:126248 compcert.lib.Integers Int64 eqm_sym thm
R126257:126273 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R126242:126248 compcert.lib.Integers Int64 eqm_sym thm
R126257:126273 compcert.lib.Integers Int64 eqm_unsigned_repr thm
R126285:126297 compcert.lib.Integers Int zwordsize def
R126315:126323 compcert.lib.Integers Int64 zwordsize def
R126285:126297 compcert.lib.Integers Int zwordsize def
R126315:126323 compcert.lib.Integers Int64 zwordsize def
R126349:126361 compcert.lib.Integers Int64 unsigned_repr thm
R126349:126361 compcert.lib.Integers Int64 unsigned_repr thm
R126349:126361 compcert.lib.Integers Int64 unsigned_repr thm
R126349:126361 compcert.lib.Integers Int64 unsigned_repr thm
R126376:126393 compcert.lib.Integers Int unsigned_range thm
R126376:126393 compcert.lib.Integers Int unsigned_range thm
R126449:126451 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R126433:126448 compcert.lib.Integers Int max_unsigned def
R126452:126463 compcert.lib.Integers Int64 max_unsigned def
R126449:126451 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R126433:126448 compcert.lib.Integers Int max_unsigned def
R126452:126463 compcert.lib.Integers Int64 max_unsigned def
R126500:126519 compcert.lib.Integers Int unsigned_range_2 thm
R126500:126519 compcert.lib.Integers Int unsigned_range_2 thm
prf 126543:126554 Int64 ofwords_add'
binder 126566:126567 <> lo:907
binder 126569:126570 <> hi:908
R126597:126599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R126573:126580 compcert.lib.Integers Int64 unsigned def
R126583:126589 compcert.lib.Integers Int64 ofwords def
R126594:126595 compcert.lib.Integers <> lo:907 var
R126591:126592 compcert.lib.Integers <> hi:908 var
R126626:126628 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R126615:126617 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126600:126611 compcert.lib.Integers Int unsigned def
R126613:126614 compcert.lib.Integers <> hi:908 var
R126618:126622 Coq.ZArith.Zpower <> two_p def
R126629:126640 compcert.lib.Integers Int unsigned def
R126642:126643 compcert.lib.Integers <> lo:907 var
R126671:126681 compcert.lib.Integers Int64 ofwords_add thm
R126671:126681 compcert.lib.Integers Int64 ofwords_add thm
R126671:126681 compcert.lib.Integers Int64 ofwords_add thm
R126690:126702 compcert.lib.Integers Int64 unsigned_repr thm
R126690:126702 compcert.lib.Integers Int64 unsigned_repr thm
R126719:126736 compcert.lib.Integers Int unsigned_range thm
R126743:126760 compcert.lib.Integers Int unsigned_range thm
R126719:126736 compcert.lib.Integers Int unsigned_range thm
R126743:126760 compcert.lib.Integers Int unsigned_range thm
R126777:126781 Coq.ZArith.Zpower <> two_p def
R126792:126802 compcert.lib.Integers Int modulus def
R126777:126781 Coq.ZArith.Zpower <> two_p def
R126792:126802 compcert.lib.Integers Int modulus def
R126792:126802 compcert.lib.Integers Int modulus def
R126814:126824 compcert.lib.Integers Int modulus def
R126814:126824 compcert.lib.Integers Int modulus def
R126852:126863 compcert.lib.Integers Int64 max_unsigned def
R126852:126863 compcert.lib.Integers Int64 max_unsigned def
prf 126912:126923 Int64 eqm_mul_2p32
binder 126935:126935 <> x:909
binder 126937:126937 <> y:910
R126951:126954 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R126955:126957 compcert.lib.Integers Int64 eqm def
R126976:126978 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126975:126975 compcert.lib.Integers <> y:910 var
R126979:126983 Coq.ZArith.Zpower <> two_p def
R126961:126963 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R126960:126960 compcert.lib.Integers <> x:909 var
R126964:126968 Coq.ZArith.Zpower <> two_p def
R126940:126946 compcert.lib.Integers Int eqm def
R126950:126950 compcert.lib.Integers <> y:910 var
R126948:126948 compcert.lib.Integers <> x:909 var
R127060:127070 compcert.lib.Integers Int modulus def
R127078:127082 Coq.ZArith.Zpower <> two_p def
R127060:127070 compcert.lib.Integers Int modulus def
R127078:127082 Coq.ZArith.Zpower <> two_p def
R127098:127104 compcert.lib.Integers Int64 modulus def
R127120:127122 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127112:127116 Coq.ZArith.Zpower <> two_p def
R127123:127127 Coq.ZArith.Zpower <> two_p def
R127098:127104 compcert.lib.Integers Int64 modulus def
R127120:127122 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127112:127116 Coq.ZArith.Zpower <> two_p def
R127123:127127 Coq.ZArith.Zpower <> two_p def
prf 127154:127166 Int64 ofwords_add''
binder 127178:127179 <> lo:911
binder 127181:127182 <> hi:912
R127207:127209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R127185:127190 compcert.lib.Integers Int64 signed def
R127193:127199 compcert.lib.Integers Int64 ofwords def
R127204:127205 compcert.lib.Integers <> lo:911 var
R127201:127202 compcert.lib.Integers <> hi:912 var
R127234:127236 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127223:127225 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127210:127219 compcert.lib.Integers Int signed def
R127221:127222 compcert.lib.Integers <> hi:912 var
R127226:127230 Coq.ZArith.Zpower <> two_p def
R127237:127248 compcert.lib.Integers Int unsigned def
R127250:127251 compcert.lib.Integers <> lo:911 var
R127279:127289 compcert.lib.Integers Int64 ofwords_add thm
R127279:127289 compcert.lib.Integers Int64 ofwords_add thm
R127279:127289 compcert.lib.Integers Int64 ofwords_add thm
R127303:127306 compcert.lib.Integers Int64 repr def
R127335:127337 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127324:127326 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127309:127320 compcert.lib.Integers Int unsigned def
R127327:127331 Coq.ZArith.Zpower <> two_p def
R127338:127349 compcert.lib.Integers Int unsigned def
R127367:127370 compcert.lib.Integers Int64 repr def
R127397:127399 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127386:127388 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127373:127382 compcert.lib.Integers Int signed def
R127389:127393 Coq.ZArith.Zpower <> two_p def
R127400:127411 compcert.lib.Integers Int unsigned def
R127303:127306 compcert.lib.Integers Int64 repr def
R127335:127337 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127324:127326 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127309:127320 compcert.lib.Integers Int unsigned def
R127327:127331 Coq.ZArith.Zpower <> two_p def
R127338:127349 compcert.lib.Integers Int unsigned def
R127367:127370 compcert.lib.Integers Int64 repr def
R127397:127399 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127386:127388 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127373:127382 compcert.lib.Integers Int signed def
R127389:127393 Coq.ZArith.Zpower <> two_p def
R127400:127411 compcert.lib.Integers Int unsigned def
R127427:127437 compcert.lib.Integers Int64 signed_repr thm
R127427:127437 compcert.lib.Integers Int64 signed_repr thm
R127454:127469 compcert.lib.Integers Int signed_range thm
R127476:127493 compcert.lib.Integers Int unsigned_range thm
R127454:127469 compcert.lib.Integers Int signed_range thm
R127476:127493 compcert.lib.Integers Int unsigned_range thm
R127510:127514 Coq.ZArith.Zpower <> two_p def
R127525:127535 compcert.lib.Integers Int modulus def
R127510:127514 Coq.ZArith.Zpower <> two_p def
R127525:127535 compcert.lib.Integers Int modulus def
R127525:127535 compcert.lib.Integers Int modulus def
R127547:127556 compcert.lib.Integers Int64 min_signed def
R127578:127580 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127564:127577 compcert.lib.Integers Int min_signed def
R127581:127591 compcert.lib.Integers Int modulus def
R127547:127556 compcert.lib.Integers Int64 min_signed def
R127578:127580 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127564:127577 compcert.lib.Integers Int min_signed def
R127581:127591 compcert.lib.Integers Int modulus def
R127604:127613 compcert.lib.Integers Int64 max_signed def
R127663:127665 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R127649:127651 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127635:127637 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127621:127634 compcert.lib.Integers Int max_signed def
R127638:127648 compcert.lib.Integers Int modulus def
R127652:127662 compcert.lib.Integers Int modulus def
R127604:127613 compcert.lib.Integers Int64 max_signed def
R127663:127665 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R127649:127651 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R127635:127637 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R127621:127634 compcert.lib.Integers Int max_signed def
R127638:127648 compcert.lib.Integers Int modulus def
R127652:127662 compcert.lib.Integers Int modulus def
R127679:127689 compcert.lib.Integers Int modulus def
R127679:127689 compcert.lib.Integers Int modulus def
R127723:127734 compcert.lib.Integers Int64 eqm_samerepr thm
R127723:127734 compcert.lib.Integers Int64 eqm_samerepr thm
R127743:127749 compcert.lib.Integers Int64 eqm_add thm
R127743:127749 compcert.lib.Integers Int64 eqm_add thm
R127758:127769 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R127758:127769 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R127778:127800 compcert.lib.Integers Int eqm_signed_unsigned thm
R127778:127800 compcert.lib.Integers Int eqm_signed_unsigned thm
R127809:127816 compcert.lib.Integers Int64 eqm_refl thm
R127809:127816 compcert.lib.Integers Int64 eqm_refl thm
prf 127898:127920 Int64 decompose_bitwise_binop
binder 127932:127932 <> f:913
binder 127934:127936 <> f64:914
binder 127938:127940 <> f32:915
binder 127942:127943 <> xh:916
binder 127945:127946 <> xl:917
binder 127948:127949 <> yh:918
binder 127951:127952 <> yl:919
R127957:127957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128045:128051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128052:128052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128156:128162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128198:128200 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128163:128165 compcert.lib.Integers <> f64:914 var
R128184:128190 compcert.lib.Integers Int64 ofwords def
R128195:128196 compcert.lib.Integers <> yl:919 var
R128192:128193 compcert.lib.Integers <> yh:918 var
R128168:128174 compcert.lib.Integers Int64 ofwords def
R128179:128180 compcert.lib.Integers <> xl:917 var
R128176:128177 compcert.lib.Integers <> xh:916 var
R128201:128207 compcert.lib.Integers Int64 ofwords def
R128222:128224 compcert.lib.Integers <> f32:915 var
R128229:128230 compcert.lib.Integers <> yl:919 var
R128226:128227 compcert.lib.Integers <> xl:917 var
R128210:128212 compcert.lib.Integers <> f32:915 var
R128217:128218 compcert.lib.Integers <> yh:918 var
R128214:128215 compcert.lib.Integers <> xh:916 var
binder 128060:128060 <> x:920
binder 128062:128062 <> y:921
binder 128064:128064 <> i:922
R128089:128092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128116:128118 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128093:128103 compcert.lib.Integers Int testbit def
R128115:128115 compcert.lib.Integers <> i:922 var
R128106:128108 compcert.lib.Integers <> f32:915 var
R128112:128112 compcert.lib.Integers <> y:921 var
R128110:128110 compcert.lib.Integers <> x:920 var
R128119:128119 compcert.lib.Integers <> f:913 var
R128140:128150 compcert.lib.Integers Int testbit def
R128154:128154 compcert.lib.Integers <> i:922 var
R128152:128152 compcert.lib.Integers <> y:921 var
R128122:128132 compcert.lib.Integers Int testbit def
R128136:128136 compcert.lib.Integers <> i:922 var
R128134:128134 compcert.lib.Integers <> x:920 var
R128068:128071 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R128073:128075 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R128072:128072 compcert.lib.Integers <> i:922 var
R128072:128072 compcert.lib.Integers <> i:922 var
R128076:128088 compcert.lib.Integers Int zwordsize def
binder 127965:127965 <> x:923
binder 127967:127967 <> y:924
binder 127969:127969 <> i:925
R127990:127993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R128013:128015 Coq.Init.Logic <> ::type_scope:x_'='_x not
R127994:128000 compcert.lib.Integers Int64 testbit def
R128012:128012 compcert.lib.Integers <> i:925 var
R128003:128005 compcert.lib.Integers <> f64:914 var
R128009:128009 compcert.lib.Integers <> y:924 var
R128007:128007 compcert.lib.Integers <> x:923 var
R128016:128016 compcert.lib.Integers <> f:913 var
R128033:128039 compcert.lib.Integers Int64 testbit def
R128043:128043 compcert.lib.Integers <> i:925 var
R128041:128041 compcert.lib.Integers <> y:924 var
R128019:128025 compcert.lib.Integers Int64 testbit def
R128029:128029 compcert.lib.Integers <> i:925 var
R128027:128027 compcert.lib.Integers <> x:923 var
R127973:127976 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R127978:127980 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R127977:127977 compcert.lib.Integers <> i:925 var
R127977:127977 compcert.lib.Integers <> i:925 var
R127981:127989 compcert.lib.Integers Int64 zwordsize def
R128257:128274 compcert.lib.Integers Int64 same_bits_eq thm
R128257:128274 compcert.lib.Integers Int64 same_bits_eq thm
R128316:128327 compcert.lib.Integers Int64 bits_ofwords thm
R128316:128327 compcert.lib.Integers Int64 bits_ofwords thm
R128316:128327 compcert.lib.Integers Int64 bits_ofwords thm
R128316:128327 compcert.lib.Integers Int64 bits_ofwords thm
R128316:128327 compcert.lib.Integers Int64 bits_ofwords thm
R128316:128327 compcert.lib.Integers Int64 bits_ofwords thm
R128357:128359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128348:128356 compcert.lib.Integers Int64 zwordsize def
R128361:128363 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128364:128376 compcert.lib.Integers Int zwordsize def
R128357:128359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128348:128356 compcert.lib.Integers Int64 zwordsize def
R128361:128363 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R128364:128376 compcert.lib.Integers Int zwordsize def
R128407:128409 compcert.lib.Coqlib <> zlt def
R128413:128425 compcert.lib.Integers Int zwordsize def
R128407:128409 compcert.lib.Coqlib <> zlt def
R128413:128425 compcert.lib.Integers Int zwordsize def
prf 128466:128478 Int64 decompose_and
binder 128490:128491 <> xh:926
binder 128493:128494 <> xl:927
binder 128496:128497 <> yh:928
binder 128499:128500 <> yl:929
R128540:128542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128505:128507 compcert.lib.Integers Int64 and def
R128526:128532 compcert.lib.Integers Int64 ofwords def
R128537:128538 compcert.lib.Integers <> yl:929 var
R128534:128535 compcert.lib.Integers <> yh:928 var
R128510:128516 compcert.lib.Integers Int64 ofwords def
R128521:128522 compcert.lib.Integers <> xl:927 var
R128518:128519 compcert.lib.Integers <> xh:926 var
R128543:128549 compcert.lib.Integers Int64 ofwords def
R128568:128574 compcert.lib.Integers Int and def
R128579:128580 compcert.lib.Integers <> yl:929 var
R128576:128577 compcert.lib.Integers <> xl:927 var
R128552:128558 compcert.lib.Integers Int and def
R128563:128564 compcert.lib.Integers <> yh:928 var
R128560:128561 compcert.lib.Integers <> xh:926 var
R128636:128639 Coq.Init.Datatypes <> andb def
R128607:128629 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R128636:128639 Coq.Init.Datatypes <> andb def
R128607:128629 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R128650:128657 compcert.lib.Integers Int64 bits_and thm
R128650:128657 compcert.lib.Integers Int64 bits_and thm
R128666:128677 compcert.lib.Integers Int bits_and thm
R128666:128677 compcert.lib.Integers Int bits_and thm
prf 128692:128703 Int64 decompose_or
binder 128715:128716 <> xh:930
binder 128718:128719 <> xl:931
binder 128721:128722 <> yh:932
binder 128724:128725 <> yl:933
R128764:128766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128730:128731 compcert.lib.Integers Int64 or def
R128750:128756 compcert.lib.Integers Int64 ofwords def
R128761:128762 compcert.lib.Integers <> yl:933 var
R128758:128759 compcert.lib.Integers <> yh:932 var
R128734:128740 compcert.lib.Integers Int64 ofwords def
R128745:128746 compcert.lib.Integers <> xl:931 var
R128742:128743 compcert.lib.Integers <> xh:930 var
R128767:128773 compcert.lib.Integers Int64 ofwords def
R128791:128796 compcert.lib.Integers Int or def
R128801:128802 compcert.lib.Integers <> yl:933 var
R128798:128799 compcert.lib.Integers <> xl:931 var
R128776:128781 compcert.lib.Integers Int or def
R128786:128787 compcert.lib.Integers <> yh:932 var
R128783:128784 compcert.lib.Integers <> xh:930 var
R128858:128860 Coq.Init.Datatypes <> orb def
R128829:128851 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R128858:128860 Coq.Init.Datatypes <> orb def
R128829:128851 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R128871:128877 compcert.lib.Integers Int64 bits_or thm
R128871:128877 compcert.lib.Integers Int64 bits_or thm
R128886:128896 compcert.lib.Integers Int bits_or thm
R128886:128896 compcert.lib.Integers Int bits_or thm
prf 128911:128923 Int64 decompose_xor
binder 128935:128936 <> xh:934
binder 128938:128939 <> xl:935
binder 128941:128942 <> yh:936
binder 128944:128945 <> yl:937
R128985:128987 Coq.Init.Logic <> ::type_scope:x_'='_x not
R128950:128952 compcert.lib.Integers Int64 xor def
R128971:128977 compcert.lib.Integers Int64 ofwords def
R128982:128983 compcert.lib.Integers <> yl:937 var
R128979:128980 compcert.lib.Integers <> yh:936 var
R128955:128961 compcert.lib.Integers Int64 ofwords def
R128966:128967 compcert.lib.Integers <> xl:935 var
R128963:128964 compcert.lib.Integers <> xh:934 var
R128988:128994 compcert.lib.Integers Int64 ofwords def
R129013:129019 compcert.lib.Integers Int xor def
R129024:129025 compcert.lib.Integers <> yl:937 var
R129021:129022 compcert.lib.Integers <> xl:935 var
R128997:129003 compcert.lib.Integers Int xor def
R129008:129009 compcert.lib.Integers <> yh:936 var
R129005:129006 compcert.lib.Integers <> xh:934 var
R129081:129084 Coq.Init.Datatypes <> xorb def
R129052:129074 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R129081:129084 Coq.Init.Datatypes <> xorb def
R129052:129074 compcert.lib.Integers Int64 decompose_bitwise_binop thm
R129095:129102 compcert.lib.Integers Int64 bits_xor thm
R129095:129102 compcert.lib.Integers Int64 bits_xor thm
R129111:129122 compcert.lib.Integers Int bits_xor thm
R129111:129122 compcert.lib.Integers Int bits_xor thm
prf 129137:129149 Int64 decompose_not
binder 129161:129162 <> xh:938
binder 129164:129165 <> xl:939
R129189:129191 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129170:129172 compcert.lib.Integers Int64 not def
R129175:129181 compcert.lib.Integers Int64 ofwords def
R129186:129187 compcert.lib.Integers <> xl:939 var
R129183:129184 compcert.lib.Integers <> xh:938 var
R129192:129198 compcert.lib.Integers Int64 ofwords def
R129214:129220 compcert.lib.Integers Int not def
R129222:129223 compcert.lib.Integers <> xl:939 var
R129201:129207 compcert.lib.Integers Int not def
R129209:129210 compcert.lib.Integers <> xh:938 var
R129251:129253 compcert.lib.Integers Int64 not def
R129256:129262 compcert.lib.Integers Int not def
R129276:129288 compcert.lib.Integers Int64 decompose_xor thm
R129276:129288 compcert.lib.Integers Int64 decompose_xor thm
R129276:129288 compcert.lib.Integers Int64 decompose_xor thm
R129309:129321 compcert.lib.Integers Int64 eq_spec thm
R129329:129335 compcert.lib.Integers Int64 ofwords def
R129346:129353 compcert.lib.Integers Int mone def
R129337:129344 compcert.lib.Integers Int mone def
R129323:129326 compcert.lib.Integers Int64 mone def
R129309:129321 compcert.lib.Integers Int64 eq_spec thm
R129329:129335 compcert.lib.Integers Int64 ofwords def
R129346:129353 compcert.lib.Integers Int mone def
R129337:129344 compcert.lib.Integers Int mone def
R129323:129326 compcert.lib.Integers Int64 mone def
prf 129370:129384 Int64 decompose_shl_1
binder 129396:129397 <> xh:940
binder 129399:129400 <> xl:941
binder 129402:129402 <> y:942
R129442:129447 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R129470:129474 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129448:129451 compcert.lib.Integers Int64 shl' def
R129469:129469 compcert.lib.Integers <> y:942 var
R129454:129460 compcert.lib.Integers Int64 ofwords def
R129465:129466 compcert.lib.Integers <> xl:941 var
R129462:129463 compcert.lib.Integers <> xh:940 var
R129475:129481 compcert.lib.Integers Int64 ofwords def
R129558:129564 compcert.lib.Integers Int shl def
R129569:129569 compcert.lib.Integers <> y:942 var
R129566:129567 compcert.lib.Integers <> xl:941 var
R129484:129489 compcert.lib.Integers Int or def
R129507:129514 compcert.lib.Integers Int shru def
R129520:129526 compcert.lib.Integers Int sub def
R129542:129542 compcert.lib.Integers <> y:942 var
R129528:129540 compcert.lib.Integers Int iwordsize def
R129516:129517 compcert.lib.Integers <> xl:941 var
R129492:129498 compcert.lib.Integers Int shl def
R129503:129503 compcert.lib.Integers <> y:942 var
R129500:129501 compcert.lib.Integers <> xh:940 var
R129408:129411 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R129426:129428 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R129412:129423 compcert.lib.Integers Int unsigned def
R129425:129425 compcert.lib.Integers <> y:942 var
R129412:129423 compcert.lib.Integers Int unsigned def
R129425:129425 compcert.lib.Integers <> y:942 var
R129429:129441 compcert.lib.Integers Int zwordsize def
R129638:129640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129600:129611 compcert.lib.Integers Int unsigned def
R129614:129620 compcert.lib.Integers Int sub def
R129622:129634 compcert.lib.Integers Int iwordsize def
R129654:129656 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R129641:129653 compcert.lib.Integers Int zwordsize def
R129657:129668 compcert.lib.Integers Int unsigned def
R129638:129640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129600:129611 compcert.lib.Integers Int unsigned def
R129614:129620 compcert.lib.Integers Int sub def
R129622:129634 compcert.lib.Integers Int iwordsize def
R129654:129656 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R129641:129653 compcert.lib.Integers Int zwordsize def
R129657:129668 compcert.lib.Integers Int unsigned def
R129685:129691 compcert.lib.Integers Int sub def
R129702:129718 compcert.lib.Integers Int unsigned_repr thm
R129702:129718 compcert.lib.Integers Int unsigned_repr thm
R129702:129718 compcert.lib.Integers Int unsigned_repr thm
R129702:129718 compcert.lib.Integers Int unsigned_repr thm
R129739:129764 compcert.lib.Integers Int unsigned_repr_wordsize thm
R129739:129764 compcert.lib.Integers Int unsigned_repr_wordsize thm
R129739:129764 compcert.lib.Integers Int unsigned_repr_wordsize thm
R129778:129802 compcert.lib.Integers Int wordsize_max_unsigned thm
R129778:129802 compcert.lib.Integers Int wordsize_max_unsigned thm
R129831:129833 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129822:129830 compcert.lib.Integers Int64 zwordsize def
R129835:129837 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R129838:129850 compcert.lib.Integers Int zwordsize def
R129831:129833 Coq.Init.Logic <> ::type_scope:x_'='_x not
R129822:129830 compcert.lib.Integers Int64 zwordsize def
R129835:129837 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R129838:129850 compcert.lib.Integers Int zwordsize def
R129877:129894 compcert.lib.Integers Int64 same_bits_eq thm
R129877:129894 compcert.lib.Integers Int64 same_bits_eq thm
R129915:129923 compcert.lib.Integers Int64 bits_shl' thm
R129915:129923 compcert.lib.Integers Int64 bits_shl' thm
R129915:129923 compcert.lib.Integers Int64 bits_shl' thm
R129952:129963 compcert.lib.Integers Int64 bits_ofwords thm
R129952:129963 compcert.lib.Integers Int64 bits_ofwords thm
R129952:129963 compcert.lib.Integers Int64 bits_ofwords thm
R129986:129988 compcert.lib.Coqlib <> zlt def
R129992:130004 compcert.lib.Integers Int zwordsize def
R129986:129988 compcert.lib.Coqlib <> zlt def
R129992:130004 compcert.lib.Integers Int zwordsize def
R130016:130027 compcert.lib.Integers Int bits_shl thm
R130016:130027 compcert.lib.Integers Int bits_shl thm
R130016:130027 compcert.lib.Integers Int bits_shl thm
R130049:130051 compcert.lib.Coqlib <> zlt def
R130056:130067 compcert.lib.Integers Int unsigned def
R130049:130051 compcert.lib.Coqlib <> zlt def
R130056:130067 compcert.lib.Integers Int unsigned def
R130090:130101 compcert.lib.Integers Int64 bits_ofwords thm
R130090:130101 compcert.lib.Integers Int64 bits_ofwords thm
R130090:130101 compcert.lib.Integers Int64 bits_ofwords thm
R130119:130126 compcert.lib.Coqlib <> zlt_true thm
R130119:130126 compcert.lib.Coqlib <> zlt_true thm
R130119:130126 compcert.lib.Coqlib <> zlt_true thm
R130152:130160 compcert.lib.Coqlib <> zlt_false thm
R130152:130160 compcert.lib.Coqlib <> zlt_false thm
R130152:130160 compcert.lib.Coqlib <> zlt_false thm
R130178:130189 compcert.lib.Integers Int64 bits_ofwords thm
R130178:130189 compcert.lib.Integers Int64 bits_ofwords thm
R130178:130189 compcert.lib.Integers Int64 bits_ofwords thm
R130209:130219 compcert.lib.Integers Int bits_or thm
R130209:130219 compcert.lib.Integers Int bits_or thm
R130209:130219 compcert.lib.Integers Int bits_or thm
R130237:130248 compcert.lib.Integers Int bits_shl thm
R130237:130248 compcert.lib.Integers Int bits_shl thm
R130237:130248 compcert.lib.Integers Int bits_shl thm
R130268:130280 compcert.lib.Integers Int bits_shru thm
R130268:130280 compcert.lib.Integers Int bits_shru thm
R130268:130280 compcert.lib.Integers Int bits_shru thm
R130314:130316 compcert.lib.Coqlib <> zlt def
R130340:130352 compcert.lib.Integers Int zwordsize def
R130320:130322 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R130323:130334 compcert.lib.Integers Int unsigned def
R130314:130316 compcert.lib.Coqlib <> zlt def
R130340:130352 compcert.lib.Integers Int zwordsize def
R130320:130322 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R130323:130334 compcert.lib.Integers Int unsigned def
R130367:130374 compcert.lib.Coqlib <> zlt_true thm
R130367:130374 compcert.lib.Coqlib <> zlt_true thm
R130367:130374 compcert.lib.Coqlib <> zlt_true thm
R130392:130399 compcert.lib.Coqlib <> zlt_true thm
R130392:130399 compcert.lib.Coqlib <> zlt_true thm
R130392:130399 compcert.lib.Coqlib <> zlt_true thm
R130419:130429 Coq.Bool.Bool <> orb_false_l thm
R130419:130429 Coq.Bool.Bool <> orb_false_l thm
R130419:130429 Coq.Bool.Bool <> orb_false_l thm
R130456:130464 compcert.lib.Coqlib <> zlt_false thm
R130456:130464 compcert.lib.Coqlib <> zlt_false thm
R130456:130464 compcert.lib.Coqlib <> zlt_false thm
R130482:130490 compcert.lib.Coqlib <> zlt_false thm
R130482:130490 compcert.lib.Coqlib <> zlt_false thm
R130482:130490 compcert.lib.Coqlib <> zlt_false thm
R130510:130520 Coq.Bool.Bool <> orb_false_r thm
R130510:130520 Coq.Bool.Bool <> orb_false_r thm
R130510:130520 Coq.Bool.Bool <> orb_false_r thm
prf 130549:130563 Int64 decompose_shl_2
binder 130575:130576 <> xh:943
binder 130578:130579 <> xl:944
binder 130581:130581 <> y:945
R130629:130634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R130657:130661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130635:130638 compcert.lib.Integers Int64 shl' def
R130656:130656 compcert.lib.Integers <> y:945 var
R130641:130647 compcert.lib.Integers Int64 ofwords def
R130652:130653 compcert.lib.Integers <> xl:944 var
R130649:130650 compcert.lib.Integers <> xh:943 var
R130662:130668 compcert.lib.Integers Int64 ofwords def
R130709:130716 compcert.lib.Integers Int zero def
R130671:130677 compcert.lib.Integers Int shl def
R130683:130689 compcert.lib.Integers Int sub def
R130693:130705 compcert.lib.Integers Int iwordsize def
R130691:130691 compcert.lib.Integers <> y:945 var
R130679:130680 compcert.lib.Integers <> xl:944 var
R130599:130602 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R130617:130619 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R130586:130598 compcert.lib.Integers Int zwordsize def
R130603:130614 compcert.lib.Integers Int unsigned def
R130616:130616 compcert.lib.Integers <> y:945 var
R130603:130614 compcert.lib.Integers Int unsigned def
R130616:130616 compcert.lib.Integers <> y:945 var
R130620:130628 compcert.lib.Integers Int64 zwordsize def
R130755:130757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130746:130754 compcert.lib.Integers Int64 zwordsize def
R130759:130761 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R130762:130774 compcert.lib.Integers Int zwordsize def
R130755:130757 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130746:130754 compcert.lib.Integers Int64 zwordsize def
R130759:130761 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R130762:130774 compcert.lib.Integers Int zwordsize def
R130841:130843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130803:130814 compcert.lib.Integers Int unsigned def
R130817:130823 compcert.lib.Integers Int sub def
R130827:130839 compcert.lib.Integers Int iwordsize def
R130858:130860 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R130844:130855 compcert.lib.Integers Int unsigned def
R130861:130873 compcert.lib.Integers Int zwordsize def
R130841:130843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R130803:130814 compcert.lib.Integers Int unsigned def
R130817:130823 compcert.lib.Integers Int sub def
R130827:130839 compcert.lib.Integers Int iwordsize def
R130858:130860 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R130844:130855 compcert.lib.Integers Int unsigned def
R130861:130873 compcert.lib.Integers Int zwordsize def
R130888:130894 compcert.lib.Integers Int sub def
R130905:130921 compcert.lib.Integers Int unsigned_repr thm
R130905:130921 compcert.lib.Integers Int unsigned_repr thm
R130905:130921 compcert.lib.Integers Int unsigned_repr thm
R130905:130921 compcert.lib.Integers Int unsigned_repr thm
R130942:130967 compcert.lib.Integers Int unsigned_repr_wordsize thm
R130942:130967 compcert.lib.Integers Int unsigned_repr_wordsize thm
R130942:130967 compcert.lib.Integers Int unsigned_repr_wordsize thm
R130982:131001 compcert.lib.Integers Int unsigned_range_2 thm
R130982:131001 compcert.lib.Integers Int unsigned_range_2 thm
R131022:131039 compcert.lib.Integers Int64 same_bits_eq thm
R131022:131039 compcert.lib.Integers Int64 same_bits_eq thm
R131060:131068 compcert.lib.Integers Int64 bits_shl' thm
R131060:131068 compcert.lib.Integers Int64 bits_shl' thm
R131060:131068 compcert.lib.Integers Int64 bits_shl' thm
R131097:131108 compcert.lib.Integers Int64 bits_ofwords thm
R131097:131108 compcert.lib.Integers Int64 bits_ofwords thm
R131097:131108 compcert.lib.Integers Int64 bits_ofwords thm
R131131:131133 compcert.lib.Coqlib <> zlt def
R131137:131149 compcert.lib.Integers Int zwordsize def
R131131:131133 compcert.lib.Coqlib <> zlt def
R131137:131149 compcert.lib.Integers Int zwordsize def
R131161:131168 compcert.lib.Coqlib <> zlt_true thm
R131161:131168 compcert.lib.Coqlib <> zlt_true thm
R131161:131168 compcert.lib.Coqlib <> zlt_true thm
R131184:131196 compcert.lib.Integers Int bits_zero thm
R131184:131196 compcert.lib.Integers Int bits_zero thm
R131209:131220 compcert.lib.Integers Int bits_shl thm
R131209:131220 compcert.lib.Integers Int bits_shl thm
R131209:131220 compcert.lib.Integers Int bits_shl thm
R131242:131244 compcert.lib.Coqlib <> zlt def
R131249:131260 compcert.lib.Integers Int unsigned def
R131242:131244 compcert.lib.Coqlib <> zlt def
R131249:131260 compcert.lib.Integers Int unsigned def
R131277:131284 compcert.lib.Coqlib <> zlt_true thm
R131277:131284 compcert.lib.Coqlib <> zlt_true thm
R131277:131284 compcert.lib.Coqlib <> zlt_true thm
R131310:131318 compcert.lib.Coqlib <> zlt_false thm
R131310:131318 compcert.lib.Coqlib <> zlt_false thm
R131310:131318 compcert.lib.Coqlib <> zlt_false thm
R131338:131349 compcert.lib.Integers Int64 bits_ofwords thm
R131338:131349 compcert.lib.Integers Int64 bits_ofwords thm
R131338:131349 compcert.lib.Integers Int64 bits_ofwords thm
R131367:131374 compcert.lib.Coqlib <> zlt_true thm
R131367:131374 compcert.lib.Coqlib <> zlt_true thm
R131367:131374 compcert.lib.Coqlib <> zlt_true thm
prf 131410:131425 Int64 decompose_shru_1
binder 131437:131438 <> xh:946
binder 131440:131441 <> xl:947
binder 131443:131443 <> y:948
R131483:131488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R131512:131516 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131489:131493 compcert.lib.Integers Int64 shru' def
R131511:131511 compcert.lib.Integers <> y:948 var
R131496:131502 compcert.lib.Integers Int64 ofwords def
R131507:131508 compcert.lib.Integers <> xl:947 var
R131504:131505 compcert.lib.Integers <> xh:946 var
R131517:131523 compcert.lib.Integers Int64 ofwords def
R131552:131557 compcert.lib.Integers Int or def
R131576:131582 compcert.lib.Integers Int shl def
R131588:131594 compcert.lib.Integers Int sub def
R131610:131610 compcert.lib.Integers <> y:948 var
R131596:131608 compcert.lib.Integers Int iwordsize def
R131584:131585 compcert.lib.Integers <> xh:946 var
R131560:131567 compcert.lib.Integers Int shru def
R131572:131572 compcert.lib.Integers <> y:948 var
R131569:131570 compcert.lib.Integers <> xl:947 var
R131526:131533 compcert.lib.Integers Int shru def
R131538:131538 compcert.lib.Integers <> y:948 var
R131535:131536 compcert.lib.Integers <> xh:946 var
R131449:131452 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R131467:131469 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R131453:131464 compcert.lib.Integers Int unsigned def
R131466:131466 compcert.lib.Integers <> y:948 var
R131453:131464 compcert.lib.Integers Int unsigned def
R131466:131466 compcert.lib.Integers <> y:948 var
R131470:131482 compcert.lib.Integers Int zwordsize def
R131681:131683 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131643:131654 compcert.lib.Integers Int unsigned def
R131657:131663 compcert.lib.Integers Int sub def
R131665:131677 compcert.lib.Integers Int iwordsize def
R131697:131699 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R131684:131696 compcert.lib.Integers Int zwordsize def
R131700:131711 compcert.lib.Integers Int unsigned def
R131681:131683 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131643:131654 compcert.lib.Integers Int unsigned def
R131657:131663 compcert.lib.Integers Int sub def
R131665:131677 compcert.lib.Integers Int iwordsize def
R131697:131699 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R131684:131696 compcert.lib.Integers Int zwordsize def
R131700:131711 compcert.lib.Integers Int unsigned def
R131728:131734 compcert.lib.Integers Int sub def
R131745:131761 compcert.lib.Integers Int unsigned_repr thm
R131745:131761 compcert.lib.Integers Int unsigned_repr thm
R131745:131761 compcert.lib.Integers Int unsigned_repr thm
R131745:131761 compcert.lib.Integers Int unsigned_repr thm
R131782:131807 compcert.lib.Integers Int unsigned_repr_wordsize thm
R131782:131807 compcert.lib.Integers Int unsigned_repr_wordsize thm
R131782:131807 compcert.lib.Integers Int unsigned_repr_wordsize thm
R131821:131845 compcert.lib.Integers Int wordsize_max_unsigned thm
R131821:131845 compcert.lib.Integers Int wordsize_max_unsigned thm
R131874:131876 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131865:131873 compcert.lib.Integers Int64 zwordsize def
R131878:131880 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R131881:131893 compcert.lib.Integers Int zwordsize def
R131874:131876 Coq.Init.Logic <> ::type_scope:x_'='_x not
R131865:131873 compcert.lib.Integers Int64 zwordsize def
R131878:131880 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R131881:131893 compcert.lib.Integers Int zwordsize def
R131920:131937 compcert.lib.Integers Int64 same_bits_eq thm
R131920:131937 compcert.lib.Integers Int64 same_bits_eq thm
R131958:131967 compcert.lib.Integers Int64 bits_shru' thm
R131958:131967 compcert.lib.Integers Int64 bits_shru' thm
R131958:131967 compcert.lib.Integers Int64 bits_shru' thm
R131996:132007 compcert.lib.Integers Int64 bits_ofwords thm
R131996:132007 compcert.lib.Integers Int64 bits_ofwords thm
R131996:132007 compcert.lib.Integers Int64 bits_ofwords thm
R132030:132032 compcert.lib.Coqlib <> zlt def
R132036:132048 compcert.lib.Integers Int zwordsize def
R132030:132032 compcert.lib.Coqlib <> zlt def
R132036:132048 compcert.lib.Integers Int zwordsize def
R132062:132069 compcert.lib.Coqlib <> zlt_true thm
R132062:132069 compcert.lib.Coqlib <> zlt_true thm
R132062:132069 compcert.lib.Coqlib <> zlt_true thm
R132089:132100 compcert.lib.Integers Int64 bits_ofwords thm
R132089:132100 compcert.lib.Integers Int64 bits_ofwords thm
R132089:132100 compcert.lib.Integers Int64 bits_ofwords thm
R132120:132130 compcert.lib.Integers Int bits_or thm
R132120:132130 compcert.lib.Integers Int bits_or thm
R132120:132130 compcert.lib.Integers Int bits_or thm
R132148:132159 compcert.lib.Integers Int bits_shl thm
R132148:132159 compcert.lib.Integers Int bits_shl thm
R132148:132159 compcert.lib.Integers Int bits_shl thm
R132179:132191 compcert.lib.Integers Int bits_shru thm
R132179:132191 compcert.lib.Integers Int bits_shru thm
R132179:132191 compcert.lib.Integers Int bits_shru thm
R132225:132227 compcert.lib.Coqlib <> zlt def
R132251:132263 compcert.lib.Integers Int zwordsize def
R132231:132233 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R132234:132245 compcert.lib.Integers Int unsigned def
R132225:132227 compcert.lib.Coqlib <> zlt def
R132251:132263 compcert.lib.Integers Int zwordsize def
R132231:132233 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R132234:132245 compcert.lib.Integers Int unsigned def
R132278:132285 compcert.lib.Coqlib <> zlt_true thm
R132278:132285 compcert.lib.Coqlib <> zlt_true thm
R132278:132285 compcert.lib.Coqlib <> zlt_true thm
R132305:132315 Coq.Bool.Bool <> orb_false_r thm
R132305:132315 Coq.Bool.Bool <> orb_false_r thm
R132305:132315 Coq.Bool.Bool <> orb_false_r thm
R132334:132342 compcert.lib.Coqlib <> zlt_false thm
R132334:132342 compcert.lib.Coqlib <> zlt_false thm
R132334:132342 compcert.lib.Coqlib <> zlt_false thm
R132362:132372 Coq.Bool.Bool <> orb_false_l thm
R132362:132372 Coq.Bool.Bool <> orb_false_l thm
R132362:132372 Coq.Bool.Bool <> orb_false_l thm
R132399:132411 compcert.lib.Integers Int bits_shru thm
R132399:132411 compcert.lib.Integers Int bits_shru thm
R132399:132411 compcert.lib.Integers Int bits_shru thm
R132433:132435 compcert.lib.Coqlib <> zlt def
R132458:132466 compcert.lib.Integers Int64 zwordsize def
R132439:132441 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R132442:132453 compcert.lib.Integers Int unsigned def
R132433:132435 compcert.lib.Coqlib <> zlt def
R132458:132466 compcert.lib.Integers Int64 zwordsize def
R132439:132441 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R132442:132453 compcert.lib.Integers Int unsigned def
R132480:132491 compcert.lib.Integers Int64 bits_ofwords thm
R132480:132491 compcert.lib.Integers Int64 bits_ofwords thm
R132480:132491 compcert.lib.Integers Int64 bits_ofwords thm
R132511:132518 compcert.lib.Coqlib <> zlt_true thm
R132511:132518 compcert.lib.Coqlib <> zlt_true thm
R132511:132518 compcert.lib.Coqlib <> zlt_true thm
R132536:132544 compcert.lib.Coqlib <> zlt_false thm
R132536:132544 compcert.lib.Coqlib <> zlt_false thm
R132536:132544 compcert.lib.Coqlib <> zlt_false thm
R132578:132586 compcert.lib.Coqlib <> zlt_false thm
R132578:132586 compcert.lib.Coqlib <> zlt_false thm
R132578:132586 compcert.lib.Coqlib <> zlt_false thm
prf 132614:132629 Int64 decompose_shru_2
binder 132641:132642 <> xh:949
binder 132644:132645 <> xl:950
binder 132647:132647 <> y:951
R132695:132700 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R132724:132728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132701:132705 compcert.lib.Integers Int64 shru' def
R132723:132723 compcert.lib.Integers <> y:951 var
R132708:132714 compcert.lib.Integers Int64 ofwords def
R132719:132720 compcert.lib.Integers <> xl:950 var
R132716:132717 compcert.lib.Integers <> xh:949 var
R132729:132735 compcert.lib.Integers Int64 ofwords def
R132747:132754 compcert.lib.Integers Int shru def
R132760:132766 compcert.lib.Integers Int sub def
R132770:132782 compcert.lib.Integers Int iwordsize def
R132768:132768 compcert.lib.Integers <> y:951 var
R132756:132757 compcert.lib.Integers <> xh:949 var
R132737:132744 compcert.lib.Integers Int zero def
R132665:132668 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R132683:132685 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R132652:132664 compcert.lib.Integers Int zwordsize def
R132669:132680 compcert.lib.Integers Int unsigned def
R132682:132682 compcert.lib.Integers <> y:951 var
R132669:132680 compcert.lib.Integers Int unsigned def
R132682:132682 compcert.lib.Integers <> y:951 var
R132686:132694 compcert.lib.Integers Int64 zwordsize def
R132823:132825 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132814:132822 compcert.lib.Integers Int64 zwordsize def
R132827:132829 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R132830:132842 compcert.lib.Integers Int zwordsize def
R132823:132825 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132814:132822 compcert.lib.Integers Int64 zwordsize def
R132827:132829 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R132830:132842 compcert.lib.Integers Int zwordsize def
R132909:132911 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132871:132882 compcert.lib.Integers Int unsigned def
R132885:132891 compcert.lib.Integers Int sub def
R132895:132907 compcert.lib.Integers Int iwordsize def
R132926:132928 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R132912:132923 compcert.lib.Integers Int unsigned def
R132929:132941 compcert.lib.Integers Int zwordsize def
R132909:132911 Coq.Init.Logic <> ::type_scope:x_'='_x not
R132871:132882 compcert.lib.Integers Int unsigned def
R132885:132891 compcert.lib.Integers Int sub def
R132895:132907 compcert.lib.Integers Int iwordsize def
R132926:132928 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R132912:132923 compcert.lib.Integers Int unsigned def
R132929:132941 compcert.lib.Integers Int zwordsize def
R132956:132962 compcert.lib.Integers Int sub def
R132973:132989 compcert.lib.Integers Int unsigned_repr thm
R132973:132989 compcert.lib.Integers Int unsigned_repr thm
R132973:132989 compcert.lib.Integers Int unsigned_repr thm
R132973:132989 compcert.lib.Integers Int unsigned_repr thm
R133010:133035 compcert.lib.Integers Int unsigned_repr_wordsize thm
R133010:133035 compcert.lib.Integers Int unsigned_repr_wordsize thm
R133010:133035 compcert.lib.Integers Int unsigned_repr_wordsize thm
R133050:133069 compcert.lib.Integers Int unsigned_range_2 thm
R133050:133069 compcert.lib.Integers Int unsigned_range_2 thm
R133090:133107 compcert.lib.Integers Int64 same_bits_eq thm
R133090:133107 compcert.lib.Integers Int64 same_bits_eq thm
R133128:133137 compcert.lib.Integers Int64 bits_shru' thm
R133128:133137 compcert.lib.Integers Int64 bits_shru' thm
R133128:133137 compcert.lib.Integers Int64 bits_shru' thm
R133166:133177 compcert.lib.Integers Int64 bits_ofwords thm
R133166:133177 compcert.lib.Integers Int64 bits_ofwords thm
R133166:133177 compcert.lib.Integers Int64 bits_ofwords thm
R133200:133202 compcert.lib.Coqlib <> zlt def
R133206:133218 compcert.lib.Integers Int zwordsize def
R133200:133202 compcert.lib.Coqlib <> zlt def
R133206:133218 compcert.lib.Integers Int zwordsize def
R133232:133244 compcert.lib.Integers Int bits_shru thm
R133232:133244 compcert.lib.Integers Int bits_shru thm
R133232:133244 compcert.lib.Integers Int bits_shru thm
R133278:133280 compcert.lib.Coqlib <> zlt def
R133303:133311 compcert.lib.Integers Int64 zwordsize def
R133284:133286 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R133287:133298 compcert.lib.Integers Int unsigned def
R133278:133280 compcert.lib.Coqlib <> zlt def
R133303:133311 compcert.lib.Integers Int64 zwordsize def
R133284:133286 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R133287:133298 compcert.lib.Integers Int unsigned def
R133325:133332 compcert.lib.Coqlib <> zlt_true thm
R133325:133332 compcert.lib.Coqlib <> zlt_true thm
R133325:133332 compcert.lib.Coqlib <> zlt_true thm
R133350:133361 compcert.lib.Integers Int64 bits_ofwords thm
R133350:133361 compcert.lib.Integers Int64 bits_ofwords thm
R133350:133361 compcert.lib.Integers Int64 bits_ofwords thm
R133381:133389 compcert.lib.Coqlib <> zlt_false thm
R133381:133389 compcert.lib.Coqlib <> zlt_false thm
R133381:133389 compcert.lib.Coqlib <> zlt_false thm
R133423:133431 compcert.lib.Coqlib <> zlt_false thm
R133423:133431 compcert.lib.Coqlib <> zlt_false thm
R133423:133431 compcert.lib.Coqlib <> zlt_false thm
R133457:133465 compcert.lib.Coqlib <> zlt_false thm
R133457:133465 compcert.lib.Coqlib <> zlt_false thm
R133457:133465 compcert.lib.Coqlib <> zlt_false thm
R133481:133493 compcert.lib.Integers Int bits_zero thm
R133481:133493 compcert.lib.Integers Int bits_zero thm
prf 133508:133522 Int64 decompose_shr_1
binder 133534:133535 <> xh:952
binder 133537:133538 <> xl:953
binder 133540:133540 <> y:954
R133580:133585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R133608:133612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133586:133589 compcert.lib.Integers Int64 shr' def
R133607:133607 compcert.lib.Integers <> y:954 var
R133592:133598 compcert.lib.Integers Int64 ofwords def
R133603:133604 compcert.lib.Integers <> xl:953 var
R133600:133601 compcert.lib.Integers <> xh:952 var
R133613:133619 compcert.lib.Integers Int64 ofwords def
R133647:133652 compcert.lib.Integers Int or def
R133671:133677 compcert.lib.Integers Int shl def
R133683:133689 compcert.lib.Integers Int sub def
R133705:133705 compcert.lib.Integers <> y:954 var
R133691:133703 compcert.lib.Integers Int iwordsize def
R133679:133680 compcert.lib.Integers <> xh:952 var
R133655:133662 compcert.lib.Integers Int shru def
R133667:133667 compcert.lib.Integers <> y:954 var
R133664:133665 compcert.lib.Integers <> xl:953 var
R133622:133628 compcert.lib.Integers Int shr def
R133633:133633 compcert.lib.Integers <> y:954 var
R133630:133631 compcert.lib.Integers <> xh:952 var
R133546:133549 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R133564:133566 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R133550:133561 compcert.lib.Integers Int unsigned def
R133563:133563 compcert.lib.Integers <> y:954 var
R133550:133561 compcert.lib.Integers Int unsigned def
R133563:133563 compcert.lib.Integers <> y:954 var
R133567:133579 compcert.lib.Integers Int zwordsize def
R133776:133778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133738:133749 compcert.lib.Integers Int unsigned def
R133752:133758 compcert.lib.Integers Int sub def
R133760:133772 compcert.lib.Integers Int iwordsize def
R133792:133794 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R133779:133791 compcert.lib.Integers Int zwordsize def
R133795:133806 compcert.lib.Integers Int unsigned def
R133776:133778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133738:133749 compcert.lib.Integers Int unsigned def
R133752:133758 compcert.lib.Integers Int sub def
R133760:133772 compcert.lib.Integers Int iwordsize def
R133792:133794 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R133779:133791 compcert.lib.Integers Int zwordsize def
R133795:133806 compcert.lib.Integers Int unsigned def
R133823:133829 compcert.lib.Integers Int sub def
R133840:133856 compcert.lib.Integers Int unsigned_repr thm
R133840:133856 compcert.lib.Integers Int unsigned_repr thm
R133840:133856 compcert.lib.Integers Int unsigned_repr thm
R133840:133856 compcert.lib.Integers Int unsigned_repr thm
R133877:133902 compcert.lib.Integers Int unsigned_repr_wordsize thm
R133877:133902 compcert.lib.Integers Int unsigned_repr_wordsize thm
R133877:133902 compcert.lib.Integers Int unsigned_repr_wordsize thm
R133916:133940 compcert.lib.Integers Int wordsize_max_unsigned thm
R133916:133940 compcert.lib.Integers Int wordsize_max_unsigned thm
R133969:133971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133960:133968 compcert.lib.Integers Int64 zwordsize def
R133973:133975 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R133976:133988 compcert.lib.Integers Int zwordsize def
R133969:133971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R133960:133968 compcert.lib.Integers Int64 zwordsize def
R133973:133975 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R133976:133988 compcert.lib.Integers Int zwordsize def
R134015:134032 compcert.lib.Integers Int64 same_bits_eq thm
R134015:134032 compcert.lib.Integers Int64 same_bits_eq thm
R134053:134061 compcert.lib.Integers Int64 bits_shr' thm
R134053:134061 compcert.lib.Integers Int64 bits_shr' thm
R134053:134061 compcert.lib.Integers Int64 bits_shr' thm
R134090:134101 compcert.lib.Integers Int64 bits_ofwords thm
R134090:134101 compcert.lib.Integers Int64 bits_ofwords thm
R134090:134101 compcert.lib.Integers Int64 bits_ofwords thm
R134124:134126 compcert.lib.Coqlib <> zlt def
R134130:134142 compcert.lib.Integers Int zwordsize def
R134124:134126 compcert.lib.Coqlib <> zlt def
R134130:134142 compcert.lib.Integers Int zwordsize def
R134156:134163 compcert.lib.Coqlib <> zlt_true thm
R134156:134163 compcert.lib.Coqlib <> zlt_true thm
R134156:134163 compcert.lib.Coqlib <> zlt_true thm
R134183:134194 compcert.lib.Integers Int64 bits_ofwords thm
R134183:134194 compcert.lib.Integers Int64 bits_ofwords thm
R134183:134194 compcert.lib.Integers Int64 bits_ofwords thm
R134214:134224 compcert.lib.Integers Int bits_or thm
R134214:134224 compcert.lib.Integers Int bits_or thm
R134214:134224 compcert.lib.Integers Int bits_or thm
R134242:134253 compcert.lib.Integers Int bits_shl thm
R134242:134253 compcert.lib.Integers Int bits_shl thm
R134242:134253 compcert.lib.Integers Int bits_shl thm
R134273:134285 compcert.lib.Integers Int bits_shru thm
R134273:134285 compcert.lib.Integers Int bits_shru thm
R134273:134285 compcert.lib.Integers Int bits_shru thm
R134319:134321 compcert.lib.Coqlib <> zlt def
R134345:134357 compcert.lib.Integers Int zwordsize def
R134325:134327 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R134328:134339 compcert.lib.Integers Int unsigned def
R134319:134321 compcert.lib.Coqlib <> zlt def
R134345:134357 compcert.lib.Integers Int zwordsize def
R134325:134327 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R134328:134339 compcert.lib.Integers Int unsigned def
R134372:134379 compcert.lib.Coqlib <> zlt_true thm
R134372:134379 compcert.lib.Coqlib <> zlt_true thm
R134372:134379 compcert.lib.Coqlib <> zlt_true thm
R134399:134409 Coq.Bool.Bool <> orb_false_r thm
R134399:134409 Coq.Bool.Bool <> orb_false_r thm
R134399:134409 Coq.Bool.Bool <> orb_false_r thm
R134428:134436 compcert.lib.Coqlib <> zlt_false thm
R134428:134436 compcert.lib.Coqlib <> zlt_false thm
R134428:134436 compcert.lib.Coqlib <> zlt_false thm
R134456:134466 Coq.Bool.Bool <> orb_false_l thm
R134456:134466 Coq.Bool.Bool <> orb_false_l thm
R134456:134466 Coq.Bool.Bool <> orb_false_l thm
R134493:134504 compcert.lib.Integers Int bits_shr thm
R134493:134504 compcert.lib.Integers Int bits_shr thm
R134493:134504 compcert.lib.Integers Int bits_shr thm
R134526:134528 compcert.lib.Coqlib <> zlt def
R134551:134559 compcert.lib.Integers Int64 zwordsize def
R134532:134534 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R134535:134546 compcert.lib.Integers Int unsigned def
R134526:134528 compcert.lib.Coqlib <> zlt def
R134551:134559 compcert.lib.Integers Int64 zwordsize def
R134532:134534 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R134535:134546 compcert.lib.Integers Int unsigned def
R134573:134584 compcert.lib.Integers Int64 bits_ofwords thm
R134573:134584 compcert.lib.Integers Int64 bits_ofwords thm
R134573:134584 compcert.lib.Integers Int64 bits_ofwords thm
R134604:134611 compcert.lib.Coqlib <> zlt_true thm
R134604:134611 compcert.lib.Coqlib <> zlt_true thm
R134604:134611 compcert.lib.Coqlib <> zlt_true thm
R134629:134637 compcert.lib.Coqlib <> zlt_false thm
R134629:134637 compcert.lib.Coqlib <> zlt_false thm
R134629:134637 compcert.lib.Coqlib <> zlt_false thm
R134671:134679 compcert.lib.Coqlib <> zlt_false thm
R134671:134679 compcert.lib.Coqlib <> zlt_false thm
R134671:134679 compcert.lib.Coqlib <> zlt_false thm
R134697:134708 compcert.lib.Integers Int64 bits_ofwords thm
R134697:134708 compcert.lib.Integers Int64 bits_ofwords thm
R134697:134708 compcert.lib.Integers Int64 bits_ofwords thm
R134728:134736 compcert.lib.Coqlib <> zlt_false thm
R134728:134736 compcert.lib.Coqlib <> zlt_false thm
R134728:134736 compcert.lib.Coqlib <> zlt_false thm
prf 134767:134781 Int64 decompose_shr_2
binder 134793:134794 <> xh:955
binder 134796:134797 <> xl:956
binder 134799:134799 <> y:957
R134847:134852 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R134875:134879 Coq.Init.Logic <> ::type_scope:x_'='_x not
R134853:134856 compcert.lib.Integers Int64 shr' def
R134874:134874 compcert.lib.Integers <> y:957 var
R134859:134865 compcert.lib.Integers Int64 ofwords def
R134870:134871 compcert.lib.Integers <> xl:956 var
R134867:134868 compcert.lib.Integers <> xh:955 var
R134880:134886 compcert.lib.Integers Int64 ofwords def
R134944:134950 compcert.lib.Integers Int shr def
R134956:134962 compcert.lib.Integers Int sub def
R134966:134978 compcert.lib.Integers Int iwordsize def
R134964:134964 compcert.lib.Integers <> y:957 var
R134952:134953 compcert.lib.Integers <> xh:955 var
R134889:134895 compcert.lib.Integers Int shr def
R134901:134907 compcert.lib.Integers Int sub def
R134923:134929 compcert.lib.Integers Int one def
R134909:134921 compcert.lib.Integers Int iwordsize def
R134897:134898 compcert.lib.Integers <> xh:955 var
R134817:134820 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R134835:134837 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R134804:134816 compcert.lib.Integers Int zwordsize def
R134821:134832 compcert.lib.Integers Int unsigned def
R134834:134834 compcert.lib.Integers <> y:957 var
R134821:134832 compcert.lib.Integers Int unsigned def
R134834:134834 compcert.lib.Integers <> y:957 var
R134838:134846 compcert.lib.Integers Int64 zwordsize def
R135019:135021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135010:135018 compcert.lib.Integers Int64 zwordsize def
R135023:135025 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R135026:135038 compcert.lib.Integers Int zwordsize def
R135019:135021 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135010:135018 compcert.lib.Integers Int64 zwordsize def
R135023:135025 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R135026:135038 compcert.lib.Integers Int zwordsize def
R135105:135107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135067:135078 compcert.lib.Integers Int unsigned def
R135081:135087 compcert.lib.Integers Int sub def
R135091:135103 compcert.lib.Integers Int iwordsize def
R135122:135124 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135108:135119 compcert.lib.Integers Int unsigned def
R135125:135137 compcert.lib.Integers Int zwordsize def
R135105:135107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R135067:135078 compcert.lib.Integers Int unsigned def
R135081:135087 compcert.lib.Integers Int sub def
R135091:135103 compcert.lib.Integers Int iwordsize def
R135122:135124 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135108:135119 compcert.lib.Integers Int unsigned def
R135125:135137 compcert.lib.Integers Int zwordsize def
R135152:135158 compcert.lib.Integers Int sub def
R135169:135185 compcert.lib.Integers Int unsigned_repr thm
R135169:135185 compcert.lib.Integers Int unsigned_repr thm
R135169:135185 compcert.lib.Integers Int unsigned_repr thm
R135169:135185 compcert.lib.Integers Int unsigned_repr thm
R135206:135231 compcert.lib.Integers Int unsigned_repr_wordsize thm
R135206:135231 compcert.lib.Integers Int unsigned_repr_wordsize thm
R135206:135231 compcert.lib.Integers Int unsigned_repr_wordsize thm
R135246:135265 compcert.lib.Integers Int unsigned_range_2 thm
R135246:135265 compcert.lib.Integers Int unsigned_range_2 thm
R135286:135303 compcert.lib.Integers Int64 same_bits_eq thm
R135286:135303 compcert.lib.Integers Int64 same_bits_eq thm
R135324:135332 compcert.lib.Integers Int64 bits_shr' thm
R135324:135332 compcert.lib.Integers Int64 bits_shr' thm
R135324:135332 compcert.lib.Integers Int64 bits_shr' thm
R135361:135372 compcert.lib.Integers Int64 bits_ofwords thm
R135361:135372 compcert.lib.Integers Int64 bits_ofwords thm
R135361:135372 compcert.lib.Integers Int64 bits_ofwords thm
R135395:135397 compcert.lib.Coqlib <> zlt def
R135401:135413 compcert.lib.Integers Int zwordsize def
R135395:135397 compcert.lib.Coqlib <> zlt def
R135401:135413 compcert.lib.Integers Int zwordsize def
R135427:135438 compcert.lib.Integers Int bits_shr thm
R135427:135438 compcert.lib.Integers Int bits_shr thm
R135427:135438 compcert.lib.Integers Int bits_shr thm
R135472:135474 compcert.lib.Coqlib <> zlt def
R135497:135505 compcert.lib.Integers Int64 zwordsize def
R135478:135480 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135481:135492 compcert.lib.Integers Int unsigned def
R135472:135474 compcert.lib.Coqlib <> zlt def
R135497:135505 compcert.lib.Integers Int64 zwordsize def
R135478:135480 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135481:135492 compcert.lib.Integers Int unsigned def
R135519:135526 compcert.lib.Coqlib <> zlt_true thm
R135519:135526 compcert.lib.Coqlib <> zlt_true thm
R135519:135526 compcert.lib.Coqlib <> zlt_true thm
R135544:135555 compcert.lib.Integers Int64 bits_ofwords thm
R135544:135555 compcert.lib.Integers Int64 bits_ofwords thm
R135544:135555 compcert.lib.Integers Int64 bits_ofwords thm
R135575:135583 compcert.lib.Coqlib <> zlt_false thm
R135575:135583 compcert.lib.Coqlib <> zlt_false thm
R135575:135583 compcert.lib.Coqlib <> zlt_false thm
R135617:135625 compcert.lib.Coqlib <> zlt_false thm
R135617:135625 compcert.lib.Coqlib <> zlt_false thm
R135617:135625 compcert.lib.Coqlib <> zlt_false thm
R135643:135654 compcert.lib.Integers Int64 bits_ofwords thm
R135643:135654 compcert.lib.Integers Int64 bits_ofwords thm
R135643:135654 compcert.lib.Integers Int64 bits_ofwords thm
R135674:135682 compcert.lib.Coqlib <> zlt_false thm
R135674:135682 compcert.lib.Coqlib <> zlt_false thm
R135674:135682 compcert.lib.Coqlib <> zlt_false thm
R135708:135719 compcert.lib.Integers Int bits_shr thm
R135708:135719 compcert.lib.Integers Int bits_shr thm
R135708:135719 compcert.lib.Integers Int bits_shr thm
R135739:135750 compcert.lib.Integers Int unsigned def
R135753:135759 compcert.lib.Integers Int sub def
R135775:135781 compcert.lib.Integers Int one def
R135761:135773 compcert.lib.Integers Int iwordsize def
R135804:135806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135791:135803 compcert.lib.Integers Int zwordsize def
R135739:135750 compcert.lib.Integers Int unsigned def
R135753:135759 compcert.lib.Integers Int sub def
R135775:135781 compcert.lib.Integers Int one def
R135761:135773 compcert.lib.Integers Int iwordsize def
R135804:135806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135791:135803 compcert.lib.Integers Int zwordsize def
R135804:135806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135791:135803 compcert.lib.Integers Int zwordsize def
R135804:135806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135791:135803 compcert.lib.Integers Int zwordsize def
R135804:135806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135791:135803 compcert.lib.Integers Int zwordsize def
R135804:135806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135791:135803 compcert.lib.Integers Int zwordsize def
R135804:135806 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135791:135803 compcert.lib.Integers Int zwordsize def
R135823:135825 compcert.lib.Coqlib <> zlt def
R135848:135856 compcert.lib.Integers Int64 zwordsize def
R135829:135831 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135832:135843 compcert.lib.Integers Int unsigned def
R135870:135881 compcert.lib.Integers Int64 bits_ofwords thm
R135823:135825 compcert.lib.Coqlib <> zlt def
R135848:135856 compcert.lib.Integers Int64 zwordsize def
R135829:135831 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135832:135843 compcert.lib.Integers Int unsigned def
R135870:135881 compcert.lib.Integers Int64 bits_ofwords thm
R135870:135881 compcert.lib.Integers Int64 bits_ofwords thm
R135870:135881 compcert.lib.Integers Int64 bits_ofwords thm
R135870:135881 compcert.lib.Integers Int64 bits_ofwords thm
R135911:135919 compcert.lib.Coqlib <> zlt_false thm
R135911:135919 compcert.lib.Coqlib <> zlt_false thm
R135911:135919 compcert.lib.Coqlib <> zlt_false thm
R135950:135952 compcert.lib.Coqlib <> zlt def
R135996:136008 compcert.lib.Integers Int zwordsize def
R135972:135975 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135993:135993 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135956:135958 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135959:135971 compcert.lib.Integers Int zwordsize def
R135989:135991 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135976:135988 compcert.lib.Integers Int zwordsize def
R135950:135952 compcert.lib.Coqlib <> zlt def
R135996:136008 compcert.lib.Integers Int zwordsize def
R135972:135975 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135993:135993 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R135956:135958 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135959:135971 compcert.lib.Integers Int zwordsize def
R135989:135991 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R135976:135988 compcert.lib.Integers Int zwordsize def
R136037:136045 compcert.lib.Coqlib <> zlt_false thm
R136037:136045 compcert.lib.Coqlib <> zlt_false thm
R136037:136045 compcert.lib.Coqlib <> zlt_false thm
R136076:136078 compcert.lib.Coqlib <> zlt def
R136122:136134 compcert.lib.Integers Int zwordsize def
R136098:136101 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136119:136119 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136082:136084 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136085:136097 compcert.lib.Integers Int zwordsize def
R136115:136117 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136102:136114 compcert.lib.Integers Int zwordsize def
R136076:136078 compcert.lib.Coqlib <> zlt def
R136122:136134 compcert.lib.Integers Int zwordsize def
R136098:136101 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136119:136119 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136082:136084 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136085:136097 compcert.lib.Integers Int zwordsize def
R136115:136117 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136102:136114 compcert.lib.Integers Int zwordsize def
prf 136155:136167 Int64 decompose_add
binder 136179:136180 <> xh:958
binder 136182:136183 <> xl:959
binder 136185:136186 <> yh:960
binder 136188:136189 <> yl:961
R136229:136233 Coq.Init.Logic <> ::type_scope:x_'='_x not
R136194:136196 compcert.lib.Integers Int64 add def
R136215:136221 compcert.lib.Integers Int64 ofwords def
R136226:136227 compcert.lib.Integers <> yl:961 var
R136223:136224 compcert.lib.Integers <> yh:960 var
R136199:136205 compcert.lib.Integers Int64 ofwords def
R136210:136211 compcert.lib.Integers <> xl:959 var
R136207:136208 compcert.lib.Integers <> xh:958 var
R136234:136240 compcert.lib.Integers Int64 ofwords def
R136310:136316 compcert.lib.Integers Int add def
R136321:136322 compcert.lib.Integers <> yl:961 var
R136318:136319 compcert.lib.Integers <> xl:959 var
R136243:136249 compcert.lib.Integers Int add def
R136268:136280 compcert.lib.Integers Int add_carry def
R136288:136295 compcert.lib.Integers Int zero def
R136285:136286 compcert.lib.Integers <> yl:961 var
R136282:136283 compcert.lib.Integers <> xl:959 var
R136252:136258 compcert.lib.Integers Int add def
R136263:136264 compcert.lib.Integers <> yh:960 var
R136260:136261 compcert.lib.Integers <> xh:958 var
R136361:136371 compcert.lib.Integers Int64 ofwords_add thm
R136361:136371 compcert.lib.Integers Int64 ofwords_add thm
R136361:136371 compcert.lib.Integers Int64 ofwords_add thm
R136382:136393 compcert.lib.Integers Int64 add_unsigned thm
R136382:136393 compcert.lib.Integers Int64 add_unsigned thm
R136382:136393 compcert.lib.Integers Int64 add_unsigned thm
R136404:136415 compcert.lib.Integers Int64 eqm_samerepr thm
R136404:136415 compcert.lib.Integers Int64 eqm_samerepr thm
R136430:136441 compcert.lib.Integers Int64 ofwords_add' thm
R136430:136441 compcert.lib.Integers Int64 ofwords_add' thm
R136430:136441 compcert.lib.Integers Int64 ofwords_add' thm
R136430:136441 compcert.lib.Integers Int64 ofwords_add' thm
R136430:136441 compcert.lib.Integers Int64 ofwords_add' thm
R136453:136474 compcert.lib.Integers Int unsigned_add_carry thm
R136453:136474 compcert.lib.Integers Int unsigned_add_carry thm
R136453:136474 compcert.lib.Integers Int unsigned_add_carry thm
R136497:136509 compcert.lib.Integers Int add_carry def
R136517:136524 compcert.lib.Integers Int zero def
R136497:136509 compcert.lib.Integers Int add_carry def
R136517:136524 compcert.lib.Integers Int zero def
R136541:136552 compcert.lib.Integers Int unsigned def
R136570:136581 compcert.lib.Integers Int unsigned def
R136601:136612 compcert.lib.Integers Int unsigned def
R136630:136641 compcert.lib.Integers Int unsigned def
R136541:136552 compcert.lib.Integers Int unsigned def
R136570:136581 compcert.lib.Integers Int unsigned def
R136601:136612 compcert.lib.Integers Int unsigned def
R136630:136641 compcert.lib.Integers Int unsigned def
R136657:136667 compcert.lib.Integers Int modulus def
R136675:136679 Coq.ZArith.Zpower <> two_p def
R136657:136667 compcert.lib.Integers Int modulus def
R136675:136679 Coq.ZArith.Zpower <> two_p def
R136715:136718 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136737:136737 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136710:136712 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136699:136701 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136702:136706 Coq.ZArith.Zpower <> two_p def
R136732:136734 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136721:136723 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136724:136728 Coq.ZArith.Zpower <> two_p def
R136771:136774 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136782:136782 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136751:136751 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136759:136762 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136754:136756 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136763:136767 Coq.ZArith.Zpower <> two_p def
R136777:136779 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136715:136718 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136737:136737 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136710:136712 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136699:136701 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136702:136706 Coq.ZArith.Zpower <> two_p def
R136732:136734 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136721:136723 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136724:136728 Coq.ZArith.Zpower <> two_p def
R136771:136774 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136782:136782 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136751:136751 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136759:136762 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136754:136756 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136763:136767 Coq.ZArith.Zpower <> two_p def
R136777:136779 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136857:136874 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136911:136911 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136846:136848 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136805:136816 compcert.lib.Integers Int unsigned def
R136819:136825 compcert.lib.Integers Int add def
R136828:136834 compcert.lib.Integers Int add def
R136849:136853 Coq.ZArith.Zpower <> two_p def
R136882:136884 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136877:136879 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136900:136902 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136885:136896 compcert.lib.Integers Int unsigned def
R136903:136907 Coq.ZArith.Zpower <> two_p def
R136997:137011 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137019:137019 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136925:136925 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136985:136988 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136967:136969 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136926:136937 compcert.lib.Integers Int unsigned def
R136940:136946 compcert.lib.Integers Int add def
R136949:136955 compcert.lib.Integers Int add def
R136970:136981 compcert.lib.Integers Int unsigned def
R136989:136993 Coq.ZArith.Zpower <> two_p def
R137014:137016 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136857:136874 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136911:136911 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136846:136848 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136805:136816 compcert.lib.Integers Int unsigned def
R136819:136825 compcert.lib.Integers Int add def
R136828:136834 compcert.lib.Integers Int add def
R136849:136853 Coq.ZArith.Zpower <> two_p def
R136882:136884 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136877:136879 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136900:136902 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136885:136896 compcert.lib.Integers Int unsigned def
R136903:136907 Coq.ZArith.Zpower <> two_p def
R136997:137011 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137019:137019 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R136925:136925 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136985:136988 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R136967:136969 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R136926:136937 compcert.lib.Integers Int unsigned def
R136940:136946 compcert.lib.Integers Int add def
R136949:136955 compcert.lib.Integers Int add def
R136970:136981 compcert.lib.Integers Int unsigned def
R136989:136993 Coq.ZArith.Zpower <> two_p def
R137014:137016 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137039:137045 compcert.lib.Integers Int64 eqm_add thm
R137039:137045 compcert.lib.Integers Int64 eqm_add thm
R137057:137064 compcert.lib.Integers Int64 eqm_refl thm
R137057:137064 compcert.lib.Integers Int64 eqm_refl thm
R137073:137084 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R137073:137084 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R137100:137102 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137113:137113 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137139:137142 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137121:137123 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137116:137118 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137124:137135 compcert.lib.Integers Int unsigned def
R137143:137154 compcert.lib.Integers Int unsigned def
R137100:137102 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137113:137113 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137139:137142 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137121:137123 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137116:137118 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137124:137135 compcert.lib.Integers Int unsigned def
R137143:137154 compcert.lib.Integers Int unsigned def
R137177:137187 compcert.lib.Integers Int eqm_sub thm
R137177:137187 compcert.lib.Integers Int eqm_sub thm
R137199:137210 compcert.lib.Integers Int eqm_refl thm
R137199:137210 compcert.lib.Integers Int eqm_refl thm
R137221:137243 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R137221:137243 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R137252:137262 compcert.lib.Integers Int eqm_add thm
R137252:137262 compcert.lib.Integers Int eqm_add thm
R137274:137285 compcert.lib.Integers Int eqm_refl thm
R137274:137285 compcert.lib.Integers Int eqm_refl thm
R137296:137318 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R137296:137318 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R137327:137338 compcert.lib.Integers Int eqm_refl thm
R137327:137338 compcert.lib.Integers Int eqm_refl thm
prf 137353:137365 Int64 decompose_sub
binder 137377:137378 <> xh:962
binder 137380:137381 <> xl:963
binder 137383:137384 <> yh:964
binder 137386:137387 <> yl:965
R137427:137431 Coq.Init.Logic <> ::type_scope:x_'='_x not
R137392:137394 compcert.lib.Integers Int64 sub def
R137413:137419 compcert.lib.Integers Int64 ofwords def
R137424:137425 compcert.lib.Integers <> yl:965 var
R137421:137422 compcert.lib.Integers <> yh:964 var
R137397:137403 compcert.lib.Integers Int64 ofwords def
R137408:137409 compcert.lib.Integers <> xl:963 var
R137405:137406 compcert.lib.Integers <> xh:962 var
R137432:137438 compcert.lib.Integers Int64 ofwords def
R137509:137515 compcert.lib.Integers Int sub def
R137520:137521 compcert.lib.Integers <> yl:965 var
R137517:137518 compcert.lib.Integers <> xl:963 var
R137441:137447 compcert.lib.Integers Int sub def
R137466:137479 compcert.lib.Integers Int sub_borrow def
R137487:137494 compcert.lib.Integers Int zero def
R137484:137485 compcert.lib.Integers <> yl:965 var
R137481:137482 compcert.lib.Integers <> xl:963 var
R137450:137456 compcert.lib.Integers Int sub def
R137461:137462 compcert.lib.Integers <> yh:964 var
R137458:137459 compcert.lib.Integers <> xh:962 var
R137560:137570 compcert.lib.Integers Int64 ofwords_add thm
R137560:137570 compcert.lib.Integers Int64 ofwords_add thm
R137560:137570 compcert.lib.Integers Int64 ofwords_add thm
R137581:137592 compcert.lib.Integers Int64 eqm_samerepr thm
R137581:137592 compcert.lib.Integers Int64 eqm_samerepr thm
R137607:137618 compcert.lib.Integers Int64 ofwords_add' thm
R137607:137618 compcert.lib.Integers Int64 ofwords_add' thm
R137607:137618 compcert.lib.Integers Int64 ofwords_add' thm
R137607:137618 compcert.lib.Integers Int64 ofwords_add' thm
R137607:137618 compcert.lib.Integers Int64 ofwords_add' thm
R137630:137652 compcert.lib.Integers Int unsigned_sub_borrow thm
R137630:137652 compcert.lib.Integers Int unsigned_sub_borrow thm
R137630:137652 compcert.lib.Integers Int unsigned_sub_borrow thm
R137675:137688 compcert.lib.Integers Int sub_borrow def
R137696:137703 compcert.lib.Integers Int zero def
R137675:137688 compcert.lib.Integers Int sub_borrow def
R137696:137703 compcert.lib.Integers Int zero def
R137720:137731 compcert.lib.Integers Int unsigned def
R137749:137760 compcert.lib.Integers Int unsigned def
R137780:137791 compcert.lib.Integers Int unsigned def
R137809:137820 compcert.lib.Integers Int unsigned def
R137720:137731 compcert.lib.Integers Int unsigned def
R137749:137760 compcert.lib.Integers Int unsigned def
R137780:137791 compcert.lib.Integers Int unsigned def
R137809:137820 compcert.lib.Integers Int unsigned def
R137836:137846 compcert.lib.Integers Int modulus def
R137854:137858 Coq.ZArith.Zpower <> two_p def
R137836:137846 compcert.lib.Integers Int modulus def
R137854:137858 Coq.ZArith.Zpower <> two_p def
R137894:137897 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137916:137916 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137889:137891 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137878:137880 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137881:137885 Coq.ZArith.Zpower <> two_p def
R137911:137913 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137900:137902 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137903:137907 Coq.ZArith.Zpower <> two_p def
R137950:137953 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137961:137961 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137930:137930 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137938:137941 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137933:137935 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137942:137946 Coq.ZArith.Zpower <> two_p def
R137956:137958 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137894:137897 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137916:137916 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137889:137891 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137878:137880 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137881:137885 Coq.ZArith.Zpower <> two_p def
R137911:137913 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137900:137902 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137903:137907 Coq.ZArith.Zpower <> two_p def
R137950:137953 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137961:137961 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R137930:137930 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137938:137941 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137933:137935 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R137942:137946 Coq.ZArith.Zpower <> two_p def
R137956:137958 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138036:138053 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138090:138090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138025:138027 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137984:137995 compcert.lib.Integers Int unsigned def
R137998:138004 compcert.lib.Integers Int sub def
R138007:138013 compcert.lib.Integers Int sub def
R138028:138032 Coq.ZArith.Zpower <> two_p def
R138061:138063 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138056:138058 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138079:138081 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138064:138075 compcert.lib.Integers Int unsigned def
R138082:138086 Coq.ZArith.Zpower <> two_p def
R138176:138190 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138198:138198 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138104:138104 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138164:138167 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138146:138148 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138105:138116 compcert.lib.Integers Int unsigned def
R138119:138125 compcert.lib.Integers Int sub def
R138128:138134 compcert.lib.Integers Int sub def
R138149:138160 compcert.lib.Integers Int unsigned def
R138168:138172 Coq.ZArith.Zpower <> two_p def
R138193:138195 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138036:138053 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138090:138090 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138025:138027 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R137984:137995 compcert.lib.Integers Int unsigned def
R137998:138004 compcert.lib.Integers Int sub def
R138007:138013 compcert.lib.Integers Int sub def
R138028:138032 Coq.ZArith.Zpower <> two_p def
R138061:138063 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138056:138058 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138079:138081 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138064:138075 compcert.lib.Integers Int unsigned def
R138082:138086 Coq.ZArith.Zpower <> two_p def
R138176:138190 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138198:138198 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138104:138104 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138164:138167 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R138146:138148 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138105:138116 compcert.lib.Integers Int unsigned def
R138119:138125 compcert.lib.Integers Int sub def
R138128:138134 compcert.lib.Integers Int sub def
R138149:138160 compcert.lib.Integers Int unsigned def
R138168:138172 Coq.ZArith.Zpower <> two_p def
R138193:138195 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138218:138224 compcert.lib.Integers Int64 eqm_add thm
R138218:138224 compcert.lib.Integers Int64 eqm_add thm
R138236:138243 compcert.lib.Integers Int64 eqm_refl thm
R138236:138243 compcert.lib.Integers Int64 eqm_refl thm
R138252:138263 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R138252:138263 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R138279:138281 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138292:138292 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138318:138321 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138300:138302 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138295:138297 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138303:138314 compcert.lib.Integers Int unsigned def
R138322:138333 compcert.lib.Integers Int unsigned def
R138279:138281 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138292:138292 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138318:138321 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138300:138302 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138295:138297 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R138303:138314 compcert.lib.Integers Int unsigned def
R138322:138333 compcert.lib.Integers Int unsigned def
R138356:138366 compcert.lib.Integers Int eqm_add thm
R138356:138366 compcert.lib.Integers Int eqm_add thm
R138378:138389 compcert.lib.Integers Int eqm_refl thm
R138378:138389 compcert.lib.Integers Int eqm_refl thm
R138400:138422 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138400:138422 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138431:138441 compcert.lib.Integers Int eqm_add thm
R138431:138441 compcert.lib.Integers Int eqm_add thm
R138453:138464 compcert.lib.Integers Int eqm_refl thm
R138453:138464 compcert.lib.Integers Int eqm_refl thm
R138475:138497 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138475:138497 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R138506:138517 compcert.lib.Integers Int eqm_refl thm
R138506:138517 compcert.lib.Integers Int eqm_refl thm
prf 138532:138545 Int64 decompose_sub'
binder 138557:138558 <> xh:966
binder 138560:138561 <> xl:967
binder 138563:138564 <> yh:968
binder 138566:138567 <> yl:969
R138607:138611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R138572:138574 compcert.lib.Integers Int64 sub def
R138593:138599 compcert.lib.Integers Int64 ofwords def
R138604:138605 compcert.lib.Integers <> yl:969 var
R138601:138602 compcert.lib.Integers <> yh:968 var
R138577:138583 compcert.lib.Integers Int64 ofwords def
R138588:138589 compcert.lib.Integers <> xl:967 var
R138585:138586 compcert.lib.Integers <> xh:966 var
R138612:138618 compcert.lib.Integers Int64 ofwords def
R138707:138713 compcert.lib.Integers Int sub def
R138718:138719 compcert.lib.Integers <> yl:969 var
R138715:138716 compcert.lib.Integers <> xl:967 var
R138621:138627 compcert.lib.Integers Int add def
R138656:138668 compcert.lib.Integers Int add_carry def
R138686:138692 compcert.lib.Integers Int one def
R138674:138680 compcert.lib.Integers Int not def
R138682:138683 compcert.lib.Integers <> yl:969 var
R138670:138671 compcert.lib.Integers <> xl:967 var
R138630:138636 compcert.lib.Integers Int add def
R138642:138648 compcert.lib.Integers Int not def
R138650:138651 compcert.lib.Integers <> yh:968 var
R138638:138639 compcert.lib.Integers <> xh:966 var
R138748:138760 compcert.lib.Integers Int64 decompose_sub thm
R138748:138760 compcert.lib.Integers Int64 decompose_sub thm
R138748:138760 compcert.lib.Integers Int64 decompose_sub thm
R138782:138805 compcert.lib.Integers Int sub_borrow_add_carry thm
R138782:138805 compcert.lib.Integers Int sub_borrow_add_carry thm
R138782:138805 compcert.lib.Integers Int sub_borrow_add_carry thm
R138826:138842 compcert.lib.Integers Int sub_add_not_3 thm
R138826:138842 compcert.lib.Integers Int sub_add_not_3 thm
R138826:138842 compcert.lib.Integers Int sub_add_not_3 thm
R138826:138842 compcert.lib.Integers Int sub_add_not_3 thm
R138853:138865 compcert.lib.Integers Int xor_assoc thm
R138853:138865 compcert.lib.Integers Int xor_assoc thm
R138853:138865 compcert.lib.Integers Int xor_assoc thm
R138876:138887 compcert.lib.Integers Int xor_idem thm
R138876:138887 compcert.lib.Integers Int xor_idem thm
R138876:138887 compcert.lib.Integers Int xor_idem thm
R138900:138911 compcert.lib.Integers Int xor_zero thm
R138900:138911 compcert.lib.Integers Int xor_zero thm
R138900:138911 compcert.lib.Integers Int xor_zero thm
R138930:138943 compcert.lib.Integers Int xor_zero_l thm
R138930:138943 compcert.lib.Integers Int xor_zero_l thm
R138930:138943 compcert.lib.Integers Int xor_zero_l thm
R138953:138965 compcert.lib.Integers Int add_carry def
R138980:138982 compcert.lib.Coqlib <> zlt def
R139053:139063 compcert.lib.Integers Int modulus def
R139028:139030 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139000:139002 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138985:138996 compcert.lib.Integers Int unsigned def
R139003:139014 compcert.lib.Integers Int unsigned def
R139017:139023 compcert.lib.Integers Int not def
R139031:139042 compcert.lib.Integers Int unsigned def
R139044:139050 compcert.lib.Integers Int one def
R139098:139109 compcert.lib.Integers Int mkint_eq thm
R138980:138982 compcert.lib.Coqlib <> zlt def
R139053:139063 compcert.lib.Integers Int modulus def
R139028:139030 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139000:139002 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R138985:138996 compcert.lib.Integers Int unsigned def
R139003:139014 compcert.lib.Integers Int unsigned def
R139017:139023 compcert.lib.Integers Int not def
R139031:139042 compcert.lib.Integers Int unsigned def
R139044:139050 compcert.lib.Integers Int one def
R139098:139109 compcert.lib.Integers Int mkint_eq thm
R139098:139109 compcert.lib.Integers Int mkint_eq thm
def 139135:139138 Int64 mul'
R139146:139152 compcert.lib.Integers Int int rec
binder 139141:139141 <> x:970
binder 139143:139143 <> y:971
R139157:139159 compcert.lib.Integers Int64 int rec
R139164:139167 compcert.lib.Integers Int64 repr def
R139184:139186 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139170:139181 compcert.lib.Integers Int unsigned def
R139183:139183 compcert.lib.Integers <> x:970 var
R139187:139198 compcert.lib.Integers Int unsigned def
R139200:139200 compcert.lib.Integers <> y:971 var
prf 139211:139220 Int64 mul'_mulhu
binder 139232:139232 <> x:972
binder 139234:139234 <> y:973
R139245:139247 Coq.Init.Logic <> ::type_scope:x_'='_x not
R139237:139240 compcert.lib.Integers Int64 mul' def
R139244:139244 compcert.lib.Integers <> y:973 var
R139242:139242 compcert.lib.Integers <> x:972 var
R139248:139254 compcert.lib.Integers Int64 ofwords def
R139273:139279 compcert.lib.Integers Int mul def
R139283:139283 compcert.lib.Integers <> y:973 var
R139281:139281 compcert.lib.Integers <> x:972 var
R139257:139265 compcert.lib.Integers Int mulhu def
R139269:139269 compcert.lib.Integers <> y:973 var
R139267:139267 compcert.lib.Integers <> x:972 var
R139314:139324 compcert.lib.Integers Int64 ofwords_add thm
R139314:139324 compcert.lib.Integers Int64 ofwords_add thm
R139314:139324 compcert.lib.Integers Int64 ofwords_add thm
R139334:139337 compcert.lib.Integers Int64 mul' def
R139340:139348 compcert.lib.Integers Int mulhu def
R139351:139357 compcert.lib.Integers Int mul def
R139386:139388 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139372:139383 compcert.lib.Integers Int unsigned def
R139389:139400 compcert.lib.Integers Int unsigned def
R139386:139388 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139372:139383 compcert.lib.Integers Int unsigned def
R139389:139400 compcert.lib.Integers Int unsigned def
R139420:139422 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R139423:139433 compcert.lib.Integers Int modulus def
R139420:139422 Coq.ZArith.BinInt <> ::Z_scope:x_'/'_x not
R139423:139433 compcert.lib.Integers Int modulus def
R139449:139453 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R139454:139464 compcert.lib.Integers Int modulus def
R139449:139453 Coq.ZArith.BinInt <> ::Z_scope:x_'mod'_x not
R139454:139464 compcert.lib.Integers Int modulus def
R139484:139487 compcert.lib.Integers Int64 repr def
R139506:139508 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139492:139494 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139495:139505 compcert.lib.Integers Int modulus def
R139484:139487 compcert.lib.Integers Int64 repr def
R139506:139508 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R139492:139494 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R139495:139505 compcert.lib.Integers Int modulus def
R139534:139543 Coq.ZArith.BinInt Z mul_comm thm
R139534:139543 Coq.ZArith.BinInt Z mul_comm thm
R139534:139543 Coq.ZArith.BinInt Z mul_comm thm
R139552:139563 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R139552:139563 Coq.ZArith.Zdiv <> Z_div_mod_eq thm
R139572:139586 compcert.lib.Integers Int modulus_pos thm
R139572:139586 compcert.lib.Integers Int modulus_pos thm
R139597:139608 compcert.lib.Integers Int64 eqm_samerepr thm
R139597:139608 compcert.lib.Integers Int64 eqm_samerepr thm
R139617:139623 compcert.lib.Integers Int64 eqm_add thm
R139617:139623 compcert.lib.Integers Int64 eqm_add thm
R139632:139643 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R139632:139643 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R139672:139691 compcert.lib.Integers Int unsigned_repr_eq thm
R139672:139691 compcert.lib.Integers Int unsigned_repr_eq thm
R139672:139691 compcert.lib.Integers Int unsigned_repr_eq thm
R139700:139707 compcert.lib.Integers Int64 eqm_refl thm
R139700:139707 compcert.lib.Integers Int64 eqm_refl thm
prf 139722:139734 Int64 decompose_mul
binder 139746:139747 <> xh:974
binder 139749:139750 <> xl:975
binder 139752:139753 <> yh:976
binder 139755:139756 <> yl:977
R139796:139800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R139761:139763 compcert.lib.Integers Int64 mul def
R139782:139788 compcert.lib.Integers Int64 ofwords def
R139793:139794 compcert.lib.Integers <> yl:977 var
R139790:139791 compcert.lib.Integers <> yh:976 var
R139766:139772 compcert.lib.Integers Int64 ofwords def
R139777:139778 compcert.lib.Integers <> xl:975 var
R139774:139775 compcert.lib.Integers <> xh:974 var
R139801:139807 compcert.lib.Integers Int64 ofwords def
R139894:139899 compcert.lib.Integers Int64 loword def
R139902:139905 compcert.lib.Integers Int64 mul' def
R139910:139911 compcert.lib.Integers <> yl:977 var
R139907:139908 compcert.lib.Integers <> xl:975 var
R139810:139816 compcert.lib.Integers Int add def
R139867:139873 compcert.lib.Integers Int mul def
R139878:139879 compcert.lib.Integers <> yl:977 var
R139875:139876 compcert.lib.Integers <> xh:974 var
R139819:139825 compcert.lib.Integers Int add def
R139850:139856 compcert.lib.Integers Int mul def
R139861:139862 compcert.lib.Integers <> yh:976 var
R139858:139859 compcert.lib.Integers <> xl:975 var
R139828:139833 compcert.lib.Integers Int64 hiword def
R139836:139839 compcert.lib.Integers Int64 mul' def
R139844:139845 compcert.lib.Integers <> yl:977 var
R139841:139842 compcert.lib.Integers <> xl:975 var
R139946:139951 compcert.lib.Integers Int64 loword def
R139954:139957 compcert.lib.Integers Int64 mul' def
R139979:139984 compcert.lib.Integers Int64 hiword def
R139987:139990 compcert.lib.Integers Int64 mul' def
R139946:139951 compcert.lib.Integers Int64 loword def
R139954:139957 compcert.lib.Integers Int64 mul' def
R139979:139984 compcert.lib.Integers Int64 hiword def
R139987:139990 compcert.lib.Integers Int64 mul' def
R140037:140039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140016:140023 compcert.lib.Integers Int64 unsigned def
R140026:140029 compcert.lib.Integers Int64 mul' def
R140066:140068 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140055:140057 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140040:140051 compcert.lib.Integers Int unsigned def
R140058:140062 Coq.ZArith.Zpower <> two_p def
R140069:140080 compcert.lib.Integers Int unsigned def
R140037:140039 Coq.Init.Logic <> ::type_scope:x_'='_x not
R140016:140023 compcert.lib.Integers Int64 unsigned def
R140026:140029 compcert.lib.Integers Int64 mul' def
R140066:140068 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140055:140057 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140040:140051 compcert.lib.Integers Int unsigned def
R140058:140062 Coq.ZArith.Zpower <> two_p def
R140069:140080 compcert.lib.Integers Int unsigned def
R140103:140119 compcert.lib.Integers Int64 ofwords_recompose thm
R140122:140125 compcert.lib.Integers Int64 mul' def
R140103:140119 compcert.lib.Integers Int64 ofwords_recompose thm
R140122:140125 compcert.lib.Integers Int64 mul' def
R140103:140119 compcert.lib.Integers Int64 ofwords_recompose thm
R140122:140125 compcert.lib.Integers Int64 mul' def
R140142:140153 compcert.lib.Integers Int64 ofwords_add' thm
R140142:140153 compcert.lib.Integers Int64 ofwords_add' thm
R140178:140188 compcert.lib.Integers Int64 ofwords_add thm
R140178:140188 compcert.lib.Integers Int64 ofwords_add thm
R140178:140188 compcert.lib.Integers Int64 ofwords_add thm
R140198:140200 compcert.lib.Integers Int64 mul def
R140212:140223 compcert.lib.Integers Int64 ofwords_add' thm
R140212:140223 compcert.lib.Integers Int64 ofwords_add' thm
R140212:140223 compcert.lib.Integers Int64 ofwords_add' thm
R140212:140223 compcert.lib.Integers Int64 ofwords_add' thm
R140212:140223 compcert.lib.Integers Int64 ofwords_add' thm
R140239:140250 compcert.lib.Integers Int unsigned def
R140268:140279 compcert.lib.Integers Int unsigned def
R140299:140310 compcert.lib.Integers Int unsigned def
R140328:140339 compcert.lib.Integers Int unsigned def
R140239:140250 compcert.lib.Integers Int unsigned def
R140268:140279 compcert.lib.Integers Int unsigned def
R140299:140310 compcert.lib.Integers Int unsigned def
R140328:140339 compcert.lib.Integers Int unsigned def
R140359:140370 compcert.lib.Integers Int unsigned def
R140359:140370 compcert.lib.Integers Int unsigned def
R140393:140404 compcert.lib.Integers Int unsigned def
R140393:140404 compcert.lib.Integers Int unsigned def
R140432:140435 compcert.lib.Integers Int64 repr def
R140475:140477 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140438:140438 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140463:140466 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140439:140439 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140452:140455 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140442:140444 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140447:140449 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140458:140460 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140467:140471 Coq.ZArith.Zpower <> two_p def
R140432:140435 compcert.lib.Integers Int64 repr def
R140475:140477 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140438:140438 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140463:140466 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140439:140439 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140452:140455 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140442:140444 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140447:140449 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140458:140460 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140467:140471 Coq.ZArith.Zpower <> two_p def
R140492:140503 compcert.lib.Integers Int64 eqm_samerepr thm
R140492:140503 compcert.lib.Integers Int64 eqm_samerepr thm
R140512:140518 compcert.lib.Integers Int64 eqm_add thm
R140512:140518 compcert.lib.Integers Int64 eqm_add thm
R140530:140537 compcert.lib.Integers Int64 eqm_refl thm
R140530:140537 compcert.lib.Integers Int64 eqm_refl thm
R140548:140559 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R140548:140559 compcert.lib.Integers Int64 eqm_mul_2p32 thm
R140572:140587 compcert.lib.Integers Int add_unsigned thm
R140572:140587 compcert.lib.Integers Int add_unsigned thm
R140572:140587 compcert.lib.Integers Int add_unsigned thm
R140596:140618 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140596:140618 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140627:140637 compcert.lib.Integers Int eqm_add thm
R140627:140637 compcert.lib.Integers Int eqm_add thm
R140650:140665 compcert.lib.Integers Int add_unsigned thm
R140650:140665 compcert.lib.Integers Int add_unsigned thm
R140650:140665 compcert.lib.Integers Int add_unsigned thm
R140674:140696 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140674:140696 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140705:140715 compcert.lib.Integers Int eqm_add thm
R140705:140715 compcert.lib.Integers Int eqm_add thm
R140726:140737 compcert.lib.Integers Int eqm_refl thm
R140726:140737 compcert.lib.Integers Int eqm_refl thm
R140749:140755 compcert.lib.Integers Int mul def
R140764:140786 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140764:140786 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140795:140806 compcert.lib.Integers Int eqm_refl thm
R140795:140806 compcert.lib.Integers Int eqm_refl thm
R140818:140824 compcert.lib.Integers Int mul def
R140833:140855 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140833:140855 compcert.lib.Integers Int eqm_unsigned_repr_l thm
R140864:140875 compcert.lib.Integers Int eqm_refl thm
R140864:140875 compcert.lib.Integers Int eqm_refl thm
R140894:140897 compcert.lib.Integers Int64 repr def
R140921:140923 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140900:140907 compcert.lib.Integers Int64 unsigned def
R140910:140913 compcert.lib.Integers Int64 mul' def
R140924:140924 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140942:140945 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140932:140934 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140927:140929 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140937:140939 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140946:140950 Coq.ZArith.Zpower <> two_p def
R140894:140897 compcert.lib.Integers Int64 repr def
R140921:140923 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140900:140907 compcert.lib.Integers Int64 unsigned def
R140910:140913 compcert.lib.Integers Int64 mul' def
R140924:140924 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140942:140945 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140932:140934 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R140927:140929 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140937:140939 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R140946:140950 Coq.ZArith.Zpower <> two_p def
R141004:141007 compcert.lib.Integers Int64 repr def
R141018:141020 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141013:141015 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141021:141021 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141039:141042 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141029:141031 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141024:141026 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141034:141036 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141043:141047 Coq.ZArith.Zpower <> two_p def
R141004:141007 compcert.lib.Integers Int64 repr def
R141018:141020 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141013:141015 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141021:141021 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141039:141042 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141029:141031 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141024:141026 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141034:141036 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141043:141047 Coq.ZArith.Zpower <> two_p def
R141064:141075 compcert.lib.Integers Int64 eqm_samerepr thm
R141064:141075 compcert.lib.Integers Int64 eqm_samerepr thm
R141084:141090 compcert.lib.Integers Int64 eqm_add thm
R141084:141090 compcert.lib.Integers Int64 eqm_add thm
R141102:141109 compcert.lib.Integers Int64 eqm_refl thm
R141102:141109 compcert.lib.Integers Int64 eqm_refl thm
R141121:141124 compcert.lib.Integers Int64 mul' def
R141133:141151 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R141133:141151 compcert.lib.Integers Int64 eqm_unsigned_repr_l thm
R141160:141167 compcert.lib.Integers Int64 eqm_refl thm
R141160:141167 compcert.lib.Integers Int64 eqm_refl thm
R141186:141189 compcert.lib.Integers Int64 repr def
R141193:141196 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141237:141237 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141204:141206 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141199:141201 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141207:141207 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141225:141228 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141215:141217 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141210:141212 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141220:141222 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141229:141233 Coq.ZArith.Zpower <> two_p def
R141186:141189 compcert.lib.Integers Int64 repr def
R141193:141196 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141237:141237 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141204:141206 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141199:141201 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141207:141207 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141225:141228 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141215:141217 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141210:141212 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141220:141222 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141229:141233 Coq.ZArith.Zpower <> two_p def
R141252:141260 Coq.ZArith.BinInt Z add_0_l thm
R141252:141260 Coq.ZArith.BinInt Z add_0_l thm
R141252:141260 Coq.ZArith.BinInt Z add_0_l thm
R141285:141288 compcert.lib.Integers Int64 repr def
R141322:141325 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141366:141366 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141298:141301 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141321:141321 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141293:141295 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141310:141312 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141302:141306 Coq.ZArith.Zpower <> two_p def
R141313:141317 Coq.ZArith.Zpower <> two_p def
R141333:141335 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141328:141330 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141336:141336 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141354:141357 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141344:141346 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141339:141341 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141349:141351 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141358:141362 Coq.ZArith.Zpower <> two_p def
R141285:141288 compcert.lib.Integers Int64 repr def
R141322:141325 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141366:141366 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141298:141301 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141321:141321 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141293:141295 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141310:141312 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141302:141306 Coq.ZArith.Zpower <> two_p def
R141313:141317 Coq.ZArith.Zpower <> two_p def
R141333:141335 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141328:141330 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141336:141336 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141354:141357 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141344:141346 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R141339:141341 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141349:141351 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141358:141362 Coq.ZArith.Zpower <> two_p def
R141379:141390 compcert.lib.Integers Int64 eqm_samerepr thm
R141379:141390 compcert.lib.Integers Int64 eqm_samerepr thm
R141399:141405 compcert.lib.Integers Int64 eqm_add thm
R141399:141405 compcert.lib.Integers Int64 eqm_add thm
R141417:141424 compcert.lib.Integers Int64 eqm_refl thm
R141417:141424 compcert.lib.Integers Int64 eqm_refl thm
R141445:141447 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141437:141441 Coq.ZArith.Zpower <> two_p def
R141448:141452 Coq.ZArith.Zpower <> two_p def
R141463:141469 compcert.lib.Integers Int64 modulus def
R141445:141447 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141437:141441 Coq.ZArith.Zpower <> two_p def
R141448:141452 Coq.ZArith.Zpower <> two_p def
R141463:141469 compcert.lib.Integers Int64 modulus def
R141484:141486 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141480:141481 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
R141484:141486 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R141480:141481 Coq.ZArith.BinInt <> ::Z_scope:'-'_x not
prf 141527:141541 Int64 decompose_mul_2
binder 141553:141554 <> xh:978
binder 141556:141557 <> xl:979
binder 141559:141560 <> yh:980
binder 141562:141563 <> yl:981
R141603:141607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141568:141570 compcert.lib.Integers Int64 mul def
R141589:141595 compcert.lib.Integers Int64 ofwords def
R141600:141601 compcert.lib.Integers <> yl:981 var
R141597:141598 compcert.lib.Integers <> yh:980 var
R141573:141579 compcert.lib.Integers Int64 ofwords def
R141584:141585 compcert.lib.Integers <> xl:979 var
R141581:141582 compcert.lib.Integers <> xh:978 var
R141608:141614 compcert.lib.Integers Int64 ofwords def
R141697:141703 compcert.lib.Integers Int mul def
R141708:141709 compcert.lib.Integers <> yl:981 var
R141705:141706 compcert.lib.Integers <> xl:979 var
R141617:141623 compcert.lib.Integers Int add def
R141670:141676 compcert.lib.Integers Int mul def
R141681:141682 compcert.lib.Integers <> yl:981 var
R141678:141679 compcert.lib.Integers <> xh:978 var
R141626:141632 compcert.lib.Integers Int add def
R141653:141659 compcert.lib.Integers Int mul def
R141664:141665 compcert.lib.Integers <> yh:980 var
R141661:141662 compcert.lib.Integers <> xl:979 var
R141635:141643 compcert.lib.Integers Int mulhu def
R141648:141649 compcert.lib.Integers <> yl:981 var
R141645:141646 compcert.lib.Integers <> xl:979 var
R141738:141750 compcert.lib.Integers Int64 decompose_mul thm
R141738:141750 compcert.lib.Integers Int64 decompose_mul thm
R141738:141750 compcert.lib.Integers Int64 decompose_mul thm
R141761:141770 compcert.lib.Integers Int64 mul'_mulhu thm
R141761:141770 compcert.lib.Integers Int64 mul'_mulhu thm
R141761:141770 compcert.lib.Integers Int64 mul'_mulhu thm
R141783:141792 compcert.lib.Integers Int64 hi_ofwords thm
R141795:141804 compcert.lib.Integers Int64 lo_ofwords thm
R141783:141792 compcert.lib.Integers Int64 hi_ofwords thm
R141783:141792 compcert.lib.Integers Int64 hi_ofwords thm
R141795:141804 compcert.lib.Integers Int64 lo_ofwords thm
R141795:141804 compcert.lib.Integers Int64 lo_ofwords thm
prf 141825:141837 Int64 decompose_ltu
binder 141849:141850 <> xh:982
binder 141852:141853 <> xl:983
binder 141855:141856 <> yh:984
binder 141858:141859 <> yl:985
R141899:141901 Coq.Init.Logic <> ::type_scope:x_'='_x not
R141864:141866 compcert.lib.Integers Int64 ltu def
R141885:141891 compcert.lib.Integers Int64 ofwords def
R141896:141897 compcert.lib.Integers <> yl:985 var
R141893:141894 compcert.lib.Integers <> yh:984 var
R141869:141875 compcert.lib.Integers Int64 ofwords def
R141880:141881 compcert.lib.Integers <> xl:983 var
R141877:141878 compcert.lib.Integers <> xh:982 var
R141905:141910 compcert.lib.Integers Int eq def
R141915:141916 compcert.lib.Integers <> yh:984 var
R141912:141913 compcert.lib.Integers <> xh:982 var
R141942:141948 compcert.lib.Integers Int ltu def
R141953:141954 compcert.lib.Integers <> yh:984 var
R141950:141951 compcert.lib.Integers <> xh:982 var
R141923:141929 compcert.lib.Integers Int ltu def
R141934:141935 compcert.lib.Integers <> yl:985 var
R141931:141932 compcert.lib.Integers <> xl:983 var
R141981:141983 compcert.lib.Integers Int64 ltu def
R141996:142007 compcert.lib.Integers Int64 ofwords_add' thm
R141996:142007 compcert.lib.Integers Int64 ofwords_add' thm
R141996:142007 compcert.lib.Integers Int64 ofwords_add' thm
R141996:142007 compcert.lib.Integers Int64 ofwords_add' thm
R141996:142007 compcert.lib.Integers Int64 ofwords_add' thm
R142017:142023 compcert.lib.Integers Int ltu def
R142026:142031 compcert.lib.Integers Int eq def
R142046:142048 compcert.lib.Coqlib <> zeq def
R142069:142080 compcert.lib.Integers Int unsigned def
R142051:142062 compcert.lib.Integers Int unsigned def
R142046:142048 compcert.lib.Coqlib <> zeq def
R142069:142080 compcert.lib.Integers Int unsigned def
R142051:142062 compcert.lib.Integers Int unsigned def
R142111:142113 compcert.lib.Coqlib <> zlt def
R142134:142145 compcert.lib.Integers Int unsigned def
R142116:142127 compcert.lib.Integers Int unsigned def
R142111:142113 compcert.lib.Coqlib <> zlt def
R142134:142145 compcert.lib.Integers Int unsigned def
R142116:142127 compcert.lib.Integers Int unsigned def
R142161:142168 compcert.lib.Coqlib <> zlt_true thm
R142161:142168 compcert.lib.Coqlib <> zlt_true thm
R142184:142192 compcert.lib.Coqlib <> zlt_false thm
R142184:142192 compcert.lib.Coqlib <> zlt_false thm
R142210:142214 Coq.ZArith.Zpower <> two_p def
R142225:142235 compcert.lib.Integers Int modulus def
R142210:142214 Coq.ZArith.Zpower <> two_p def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142225:142235 compcert.lib.Integers Int modulus def
R142252:142269 compcert.lib.Integers Int unsigned_range thm
R142276:142293 compcert.lib.Integers Int unsigned_range thm
R142252:142269 compcert.lib.Integers Int unsigned_range thm
R142276:142293 compcert.lib.Integers Int unsigned_range thm
R142309:142319 compcert.lib.Integers Int modulus def
R142309:142319 compcert.lib.Integers Int modulus def
R142358:142360 compcert.lib.Coqlib <> zlt def
R142381:142392 compcert.lib.Integers Int unsigned def
R142363:142374 compcert.lib.Integers Int unsigned def
R142358:142360 compcert.lib.Coqlib <> zlt def
R142381:142392 compcert.lib.Integers Int unsigned def
R142363:142374 compcert.lib.Integers Int unsigned def
R142408:142415 compcert.lib.Coqlib <> zlt_true thm
R142408:142415 compcert.lib.Coqlib <> zlt_true thm
R142431:142439 compcert.lib.Coqlib <> zlt_false thm
R142431:142439 compcert.lib.Coqlib <> zlt_false thm
prf 142459:142471 Int64 decompose_leu
binder 142483:142484 <> xh:986
binder 142486:142487 <> xl:987
binder 142489:142490 <> yh:988
binder 142492:142493 <> yl:989
R142540:142544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142498:142501 Coq.Init.Datatypes <> negb def
R142504:142506 compcert.lib.Integers Int64 ltu def
R142525:142531 compcert.lib.Integers Int64 ofwords def
R142536:142537 compcert.lib.Integers <> xl:987 var
R142533:142534 compcert.lib.Integers <> xh:986 var
R142509:142515 compcert.lib.Integers Int64 ofwords def
R142520:142521 compcert.lib.Integers <> yl:989 var
R142517:142518 compcert.lib.Integers <> yh:988 var
R142548:142553 compcert.lib.Integers Int eq def
R142558:142559 compcert.lib.Integers <> yh:988 var
R142555:142556 compcert.lib.Integers <> xh:986 var
R142592:142598 compcert.lib.Integers Int ltu def
R142603:142604 compcert.lib.Integers <> yh:988 var
R142600:142601 compcert.lib.Integers <> xh:986 var
R142566:142569 Coq.Init.Datatypes <> negb def
R142572:142578 compcert.lib.Integers Int ltu def
R142583:142584 compcert.lib.Integers <> xl:987 var
R142580:142581 compcert.lib.Integers <> yl:989 var
R142632:142644 compcert.lib.Integers Int64 decompose_ltu thm
R142632:142644 compcert.lib.Integers Int64 decompose_ltu thm
R142632:142644 compcert.lib.Integers Int64 decompose_ltu thm
R142655:142664 compcert.lib.Integers Int eq_sym thm
R142655:142664 compcert.lib.Integers Int eq_sym thm
R142655:142664 compcert.lib.Integers Int eq_sym thm
R142676:142681 compcert.lib.Integers Int eq def
R142694:142696 compcert.lib.Coqlib <> zeq def
R142717:142728 compcert.lib.Integers Int unsigned def
R142699:142710 compcert.lib.Integers Int unsigned def
R142694:142696 compcert.lib.Coqlib <> zeq def
R142717:142728 compcert.lib.Integers Int unsigned def
R142699:142710 compcert.lib.Integers Int unsigned def
R142753:142759 compcert.lib.Integers Int ltu def
R142772:142774 compcert.lib.Coqlib <> zlt def
R142795:142806 compcert.lib.Integers Int unsigned def
R142777:142788 compcert.lib.Integers Int unsigned def
R142772:142774 compcert.lib.Coqlib <> zlt def
R142795:142806 compcert.lib.Integers Int unsigned def
R142777:142788 compcert.lib.Integers Int unsigned def
R142824:142832 compcert.lib.Coqlib <> zlt_false thm
R142824:142832 compcert.lib.Coqlib <> zlt_false thm
R142824:142832 compcert.lib.Coqlib <> zlt_false thm
R142858:142865 compcert.lib.Coqlib <> zlt_true thm
R142858:142865 compcert.lib.Coqlib <> zlt_true thm
R142858:142865 compcert.lib.Coqlib <> zlt_true thm
prf 142893:142904 Int64 decompose_lt
binder 142916:142917 <> xh:990
binder 142919:142920 <> xl:991
binder 142922:142923 <> yh:992
binder 142925:142926 <> yl:993
R142965:142967 Coq.Init.Logic <> ::type_scope:x_'='_x not
R142931:142932 compcert.lib.Integers Int64 lt def
R142951:142957 compcert.lib.Integers Int64 ofwords def
R142962:142963 compcert.lib.Integers <> yl:993 var
R142959:142960 compcert.lib.Integers <> yh:992 var
R142935:142941 compcert.lib.Integers Int64 ofwords def
R142946:142947 compcert.lib.Integers <> xl:991 var
R142943:142944 compcert.lib.Integers <> xh:990 var
R142971:142976 compcert.lib.Integers Int eq def
R142981:142982 compcert.lib.Integers <> yh:992 var
R142978:142979 compcert.lib.Integers <> xh:990 var
R143008:143013 compcert.lib.Integers Int lt def
R143018:143019 compcert.lib.Integers <> yh:992 var
R143015:143016 compcert.lib.Integers <> xh:990 var
R142989:142995 compcert.lib.Integers Int ltu def
R143000:143001 compcert.lib.Integers <> yl:993 var
R142997:142998 compcert.lib.Integers <> xl:991 var
R143046:143047 compcert.lib.Integers Int64 lt def
R143060:143072 compcert.lib.Integers Int64 ofwords_add'' thm
R143060:143072 compcert.lib.Integers Int64 ofwords_add'' thm
R143060:143072 compcert.lib.Integers Int64 ofwords_add'' thm
R143060:143072 compcert.lib.Integers Int64 ofwords_add'' thm
R143060:143072 compcert.lib.Integers Int64 ofwords_add'' thm
R143083:143095 compcert.lib.Integers Int eq_signed thm
R143083:143095 compcert.lib.Integers Int eq_signed thm
R143083:143095 compcert.lib.Integers Int eq_signed thm
R143110:143112 compcert.lib.Coqlib <> zeq def
R143131:143140 compcert.lib.Integers Int signed def
R143115:143124 compcert.lib.Integers Int signed def
R143110:143112 compcert.lib.Coqlib <> zeq def
R143131:143140 compcert.lib.Integers Int signed def
R143115:143124 compcert.lib.Integers Int signed def
R143168:143174 compcert.lib.Integers Int ltu def
R143187:143189 compcert.lib.Coqlib <> zlt def
R143210:143221 compcert.lib.Integers Int unsigned def
R143192:143203 compcert.lib.Integers Int unsigned def
R143187:143189 compcert.lib.Coqlib <> zlt def
R143210:143221 compcert.lib.Integers Int unsigned def
R143192:143203 compcert.lib.Integers Int unsigned def
R143237:143244 compcert.lib.Coqlib <> zlt_true thm
R143237:143244 compcert.lib.Coqlib <> zlt_true thm
R143260:143268 compcert.lib.Coqlib <> zlt_false thm
R143260:143268 compcert.lib.Coqlib <> zlt_false thm
R143286:143290 Coq.ZArith.Zpower <> two_p def
R143301:143311 compcert.lib.Integers Int modulus def
R143286:143290 Coq.ZArith.Zpower <> two_p def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143301:143311 compcert.lib.Integers Int modulus def
R143328:143345 compcert.lib.Integers Int unsigned_range thm
R143352:143369 compcert.lib.Integers Int unsigned_range thm
R143328:143345 compcert.lib.Integers Int unsigned_range thm
R143352:143369 compcert.lib.Integers Int unsigned_range thm
R143385:143395 compcert.lib.Integers Int modulus def
R143385:143395 compcert.lib.Integers Int modulus def
R143431:143436 compcert.lib.Integers Int lt def
R143449:143451 compcert.lib.Coqlib <> zlt def
R143470:143479 compcert.lib.Integers Int signed def
R143454:143463 compcert.lib.Integers Int signed def
R143449:143451 compcert.lib.Coqlib <> zlt def
R143470:143479 compcert.lib.Integers Int signed def
R143454:143463 compcert.lib.Integers Int signed def
R143495:143502 compcert.lib.Coqlib <> zlt_true thm
R143495:143502 compcert.lib.Coqlib <> zlt_true thm
R143518:143526 compcert.lib.Coqlib <> zlt_false thm
R143518:143526 compcert.lib.Coqlib <> zlt_false thm
prf 143546:143557 Int64 decompose_le
binder 143569:143570 <> xh:994
binder 143572:143573 <> xl:995
binder 143575:143576 <> yh:996
binder 143578:143579 <> yl:997
R143625:143629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R143584:143587 Coq.Init.Datatypes <> negb def
R143590:143591 compcert.lib.Integers Int64 lt def
R143610:143616 compcert.lib.Integers Int64 ofwords def
R143621:143622 compcert.lib.Integers <> xl:995 var
R143618:143619 compcert.lib.Integers <> xh:994 var
R143594:143600 compcert.lib.Integers Int64 ofwords def
R143605:143606 compcert.lib.Integers <> yl:997 var
R143602:143603 compcert.lib.Integers <> yh:996 var
R143633:143638 compcert.lib.Integers Int eq def
R143643:143644 compcert.lib.Integers <> yh:996 var
R143640:143641 compcert.lib.Integers <> xh:994 var
R143677:143682 compcert.lib.Integers Int lt def
R143687:143688 compcert.lib.Integers <> yh:996 var
R143684:143685 compcert.lib.Integers <> xh:994 var
R143651:143654 Coq.Init.Datatypes <> negb def
R143657:143663 compcert.lib.Integers Int ltu def
R143668:143669 compcert.lib.Integers <> xl:995 var
R143665:143666 compcert.lib.Integers <> yl:997 var
R143716:143727 compcert.lib.Integers Int64 decompose_lt thm
R143716:143727 compcert.lib.Integers Int64 decompose_lt thm
R143716:143727 compcert.lib.Integers Int64 decompose_lt thm
R143738:143747 compcert.lib.Integers Int eq_sym thm
R143738:143747 compcert.lib.Integers Int eq_sym thm
R143738:143747 compcert.lib.Integers Int eq_sym thm
R143760:143772 compcert.lib.Integers Int eq_signed thm
R143760:143772 compcert.lib.Integers Int eq_signed thm
R143760:143772 compcert.lib.Integers Int eq_signed thm
R143785:143787 compcert.lib.Coqlib <> zeq def
R143806:143815 compcert.lib.Integers Int signed def
R143790:143799 compcert.lib.Integers Int signed def
R143785:143787 compcert.lib.Coqlib <> zeq def
R143806:143815 compcert.lib.Integers Int signed def
R143790:143799 compcert.lib.Integers Int signed def
R143840:143845 compcert.lib.Integers Int lt def
R143858:143860 compcert.lib.Coqlib <> zlt def
R143879:143888 compcert.lib.Integers Int signed def
R143863:143872 compcert.lib.Integers Int signed def
R143858:143860 compcert.lib.Coqlib <> zlt def
R143879:143888 compcert.lib.Integers Int signed def
R143863:143872 compcert.lib.Integers Int signed def
R143906:143914 compcert.lib.Coqlib <> zlt_false thm
R143906:143914 compcert.lib.Coqlib <> zlt_false thm
R143906:143914 compcert.lib.Coqlib <> zlt_false thm
R143940:143947 compcert.lib.Coqlib <> zlt_true thm
R143940:143947 compcert.lib.Coqlib <> zlt_true thm
R143940:143947 compcert.lib.Coqlib <> zlt_true thm
prf 144036:144053 Int64 int_unsigned_range
binder 144065:144065 <> x:998
R144069:144072 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R144087:144090 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R144073:144084 compcert.lib.Integers Int unsigned def
R144086:144086 compcert.lib.Integers <> x:998 var
R144073:144084 compcert.lib.Integers Int unsigned def
R144086:144086 compcert.lib.Integers <> x:998 var
R144091:144102 compcert.lib.Integers Int64 max_unsigned def
R144131:144142 compcert.lib.Integers Int64 max_unsigned def
R144152:144158 compcert.lib.Integers Int64 modulus def
R144175:144192 compcert.lib.Integers Int unsigned_range thm
R144175:144192 compcert.lib.Integers Int unsigned_range thm
R144207:144217 compcert.lib.Integers Int modulus def
R144235:144242 compcert.lib.Integers Int64 wordsize def
R144235:144242 compcert.lib.Integers Int64 wordsize def
R144274:144285 compcert.lib.Integers Int wordsize def
R144274:144285 compcert.lib.Integers Int wordsize def
R144315:144327 Coq.ZArith.Zpower <> two_power_nat def
prf 144357:144373 Int64 int_unsigned_repr
binder 144385:144385 <> x:999
R144420:144422 Coq.Init.Logic <> ::type_scope:x_'='_x not
R144388:144395 compcert.lib.Integers Int64 unsigned def
R144398:144401 compcert.lib.Integers Int64 repr def
R144404:144415 compcert.lib.Integers Int unsigned def
R144417:144417 compcert.lib.Integers <> x:999 var
R144423:144434 compcert.lib.Integers Int unsigned def
R144436:144436 compcert.lib.Integers <> x:999 var
R144464:144476 compcert.lib.Integers Int64 unsigned_repr thm
R144464:144476 compcert.lib.Integers Int64 unsigned_repr thm
R144464:144476 compcert.lib.Integers Int64 unsigned_repr thm
R144464:144476 compcert.lib.Integers Int64 unsigned_repr thm
R144493:144510 compcert.lib.Integers Int64 int_unsigned_range thm
R144493:144510 compcert.lib.Integers Int64 int_unsigned_range thm
prf 144525:144535 Int64 int_sub_ltu
binder 144547:144547 <> x:1000
binder 144549:144549 <> y:1001
R144573:144580 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R144607:144609 Coq.Init.Logic <> ::type_scope:x_'='_x not
R144581:144592 compcert.lib.Integers Int unsigned def
R144595:144601 compcert.lib.Integers Int sub def
R144605:144605 compcert.lib.Integers <> x:1000 var
R144603:144603 compcert.lib.Integers <> y:1001 var
R144610:144617 compcert.lib.Integers Int64 unsigned def
R144620:144622 compcert.lib.Integers Int64 sub def
R144649:144652 compcert.lib.Integers Int64 repr def
R144655:144666 compcert.lib.Integers Int unsigned def
R144668:144668 compcert.lib.Integers <> x:1000 var
R144625:144628 compcert.lib.Integers Int64 repr def
R144631:144642 compcert.lib.Integers Int unsigned def
R144644:144644 compcert.lib.Integers <> y:1001 var
R144567:144568 Coq.Init.Logic <> ::type_scope:x_'='_x not
R144556:144562 compcert.lib.Integers Int ltu def
R144566:144566 compcert.lib.Integers <> y:1001 var
R144564:144564 compcert.lib.Integers <> x:1000 var
R144569:144572 Coq.Init.Datatypes <> true constr
R144703:144713 compcert.lib.Integers Int sub_ltu thm
R144703:144713 compcert.lib.Integers Int sub_ltu thm
R144738:144744 compcert.lib.Integers Int sub def
R144754:144756 compcert.lib.Integers Int64 sub def
R144769:144785 compcert.lib.Integers Int unsigned_repr thm
R144769:144785 compcert.lib.Integers Int unsigned_repr thm
R144769:144785 compcert.lib.Integers Int unsigned_repr thm
R144769:144785 compcert.lib.Integers Int unsigned_repr thm
R144796:144808 compcert.lib.Integers Int64 unsigned_repr thm
R144796:144808 compcert.lib.Integers Int64 unsigned_repr thm
R144796:144808 compcert.lib.Integers Int64 unsigned_repr thm
R144796:144808 compcert.lib.Integers Int64 unsigned_repr thm
R144844:144861 compcert.lib.Integers Int64 int_unsigned_range thm
R144821:144833 compcert.lib.Integers Int64 unsigned_repr thm
R144821:144833 compcert.lib.Integers Int64 unsigned_repr thm
R144844:144861 compcert.lib.Integers Int64 int_unsigned_range thm
R144821:144833 compcert.lib.Integers Int64 unsigned_repr thm
R144872:144888 compcert.lib.Integers Int64 int_unsigned_repr thm
R144872:144888 compcert.lib.Integers Int64 int_unsigned_repr thm
R144872:144888 compcert.lib.Integers Int64 int_unsigned_repr thm
R144937:144954 compcert.lib.Integers Int64 int_unsigned_range thm
R144914:144926 compcert.lib.Integers Int64 unsigned_repr thm
R144914:144926 compcert.lib.Integers Int64 unsigned_repr thm
R144937:144954 compcert.lib.Integers Int64 int_unsigned_range thm
R144914:144926 compcert.lib.Integers Int64 unsigned_repr thm
R144967:144983 compcert.lib.Integers Int64 int_unsigned_repr thm
R144967:144983 compcert.lib.Integers Int64 int_unsigned_repr thm
R144967:144983 compcert.lib.Integers Int64 int_unsigned_repr thm
R144998:145015 compcert.lib.Integers Int64 int_unsigned_range thm
R144998:145015 compcert.lib.Integers Int64 int_unsigned_range thm
R145042:145052 compcert.lib.Integers Int sub_ltu thm
R145042:145052 compcert.lib.Integers Int sub_ltu thm
R145084:145103 compcert.lib.Integers Int unsigned_range_2 thm
R145084:145103 compcert.lib.Integers Int unsigned_range_2 thm
R145132:145136 compcert.lib.Integers Int64 <> mod
R145152:145171 compcert.lib.Integers <> wordsize def
syndef 145185:145189 <> int64
R145194:145202 compcert.lib.Integers <> int rec
R145220:145227 compcert.lib.Integers <> repr def
R145229:145238 compcert.lib.Integers <> repr def
R145240:145248 compcert.lib.Integers <> repr def
